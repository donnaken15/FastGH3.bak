; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24215.1 

	TITLE	C:\Windows\fastgh3\PLUGINS\CODE\core\PatchManager.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
?piecewise_construct@std@@3Upiecewise_construct_t@1@B	ORG $+1 ; std::piecewise_construct
CONST	ENDS
PUBLIC	?FindPatch@PatchManager@GH3P@@SAXPBEIAAPAEAAI@Z	; GH3P::PatchManager::FindPatch
PUBLIC	?ApplyPatch@PatchManager@GH3P@@SA_NPBEPAEII@Z	; GH3P::PatchManager::ApplyPatch
PUBLIC	?RemovePatch@PatchManager@GH3P@@SA_NPAE@Z	; GH3P::PatchManager::RemovePatch
PUBLIC	?RemovePatches@PatchManager@GH3P@@SA_NI@Z	; GH3P::PatchManager::RemovePatches
PUBLIC	??4PatchManager@GH3P@@QAEAAV01@ABV01@@Z		; GH3P::PatchManager::operator=
PUBLIC	??4PatchManager@GH3P@@QAEAAV01@$$QAV01@@Z	; GH3P::PatchManager::operator=
PUBLIC	??4ScopedUnprotect@GH3P@@QAEAAV01@ABV01@@Z	; GH3P::ScopedUnprotect::operator=
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	??0_Container_proxy@std@@QAE@XZ			; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QAE@XZ		; std::_Container_base12::_Container_base12
PUBLIC	??1_Container_base12@std@@QAE@XZ		; std::_Container_base12::~_Container_base12
PUBLIC	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
PUBLIC	?_Orphan_all@_Container_base12@std@@QAEXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z	; std::_Container_base12::_Swap_all
PUBLIC	??0_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::_Iterator_base12
PUBLIC	??0_Iterator_base12@std@@QAE@ABU01@@Z		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z	; std::_Iterator_base12::operator=
PUBLIC	??1_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::~_Iterator_base12
PUBLIC	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
PUBLIC	?_Clrcont@_Iterator_base12@std@@QAEXXZ		; std::_Iterator_base12::_Clrcont
PUBLIC	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
PUBLIC	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ	; std::_Iterator_base12::_Getpnext
PUBLIC	?_Orphan_me@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Orphan_me
PUBLIC	?_Allocate@std@@YAPAXII_N@Z			; std::_Allocate
PUBLIC	?_Deallocate@std@@YAXPAXII@Z			; std::_Deallocate
PUBLIC	??0?$tuple@$$V@std@@QAE@XZ			; std::tuple<>::tuple<>
PUBLIC	??0?$tuple@$$V@std@@QAE@ABV01@@Z		; std::tuple<>::tuple<>
PUBLIC	??0?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAE@XZ ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >
PUBLIC	?deallocate@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::deallocate
PUBLIC	?allocate@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::allocate
PUBLIC	?max_size@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QBEIXZ ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::max_size
PUBLIC	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
PUBLIC	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Isnil
PUBLIC	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
PUBLIC	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
PUBLIC	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
PUBLIC	?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myval
PUBLIC	?_Max@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Max
PUBLIC	?_Min@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Min
PUBLIC	??0?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >
PUBLIC	?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Construct
PUBLIC	??1?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::~_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >
PUBLIC	?_Alloc_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Free_proxy
PUBLIC	?_Getpfirst@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getpfirst
PUBLIC	?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myproxy
PUBLIC	?_Orphan_all@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Orphan_all
PUBLIC	?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Buyheadnode
PUBLIC	?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Freeheadnode
PUBLIC	?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Buynode0
PUBLIC	?_Freenode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Freenode0
PUBLIC	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getcomp
PUBLIC	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getcomp
PUBLIC	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
PUBLIC	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
PUBLIC	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Get_data
PUBLIC	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Get_data
PUBLIC	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myhead
PUBLIC	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myhead
PUBLIC	?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAIXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Mysize
PUBLIC	?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABIXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Mysize
PUBLIC	??R?$less@PAE@std@@QBE_NABQAE0@Z		; std::less<unsigned char *>::operator()
PUBLIC	??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >
PUBLIC	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Color
PUBLIC	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Isnil
PUBLIC	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Left
PUBLIC	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Parent
PUBLIC	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Right
PUBLIC	?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Myval
PUBLIC	?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Max
PUBLIC	?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Min
PUBLIC	??1?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::~_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>::_Get_second
PUBLIC	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>
PUBLIC	?_Get_first@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@PAE@2@XZ ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@PAE@2@XZ ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@XZ ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@XZ ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1>::_Get_second
PUBLIC	??1?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1>::~_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1>
PUBLIC	??0?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >
PUBLIC	??1?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::~_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::begin
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::end
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::size
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::max_size
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::erase
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::erase
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEIABQAE@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::erase
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::clear
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@ABQAE@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::find
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@ABQAE@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::lower_bound
PUBLIC	?equal_range@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@2@ABQAE@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::equal_range
PUBLIC	?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Destroy_if_not_nil
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Erase
PUBLIC	?_Compare@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE_NABQAE0@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Compare
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Lmost
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Lrotate
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Rmost
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Root
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Rrotate
PUBLIC	?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Orphan_ptr
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Tidy
PUBLIC	?_Kfn@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Kfn
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Key
PUBLIC	??0?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::map<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::map<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >
PUBLIC	??A?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAEAAV?$vector@EV?$allocator@E@std@@@1@ABQAE@Z ; std::map<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::operator[]
PUBLIC	??1?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::map<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::~map<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >
PUBLIC	??0?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAE@XZ ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >
PUBLIC	?deallocate@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >::deallocate
PUBLIC	?allocate@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >::allocate
PUBLIC	?max_size@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QBEIXZ ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::max_size
PUBLIC	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
PUBLIC	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Isnil
PUBLIC	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
PUBLIC	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
PUBLIC	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
PUBLIC	?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAU?$pair@QAEI@2@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myval
PUBLIC	?_Max@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Max
PUBLIC	?_Min@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Min
PUBLIC	??0?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >
PUBLIC	?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Construct
PUBLIC	??1?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::~_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >
PUBLIC	?_Alloc_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Free_proxy
PUBLIC	?_Getpfirst@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getpfirst
PUBLIC	?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myproxy
PUBLIC	?_Orphan_all@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Orphan_all
PUBLIC	?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Buyheadnode
PUBLIC	?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Freeheadnode
PUBLIC	?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Buynode0
PUBLIC	?_Freenode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Freenode0
PUBLIC	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getcomp
PUBLIC	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getcomp
PUBLIC	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getal
PUBLIC	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getal
PUBLIC	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Get_data
PUBLIC	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Get_data
PUBLIC	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myhead
PUBLIC	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myhead
PUBLIC	?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAIXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Mysize
PUBLIC	?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABIXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Mysize
PUBLIC	??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >
PUBLIC	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Color
PUBLIC	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Isnil
PUBLIC	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Left
PUBLIC	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Parent
PUBLIC	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Right
PUBLIC	?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAAU?$pair@QAEI@2@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Myval
PUBLIC	?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Max
PUBLIC	?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Min
PUBLIC	??1?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::~_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>::_Get_second
PUBLIC	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>
PUBLIC	?_Get_first@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@PAE@2@XZ ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@PAE@2@XZ ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@XZ ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@XZ ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>,1>::_Get_second
PUBLIC	??1?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>,1>::~_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>,1>
PUBLIC	??0?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >
PUBLIC	??1?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::~_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::begin
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::end
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::size
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::max_size
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::erase
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::erase
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEIABQAE@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::erase
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::clear
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@ABQAE@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::lower_bound
PUBLIC	?equal_range@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@2@ABQAE@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::equal_range
PUBLIC	?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Destroy_if_not_nil
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Erase
PUBLIC	?_Compare@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBE_NABQAE0@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Compare
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Lmost
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Lrotate
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Rmost
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Root
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Rrotate
PUBLIC	?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Orphan_ptr
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Tidy
PUBLIC	?_Kfn@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEI@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Kfn
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Key
PUBLIC	??0?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAE@XZ ; std::map<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> > >::map<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> > >
PUBLIC	??A?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAEAAIABQAE@Z ; std::map<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> > >::operator[]
PUBLIC	??1?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAE@XZ ; std::map<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> > >::~map<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> > >
PUBLIC	??0?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAE@XZ ; std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >
PUBLIC	?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >::deallocate
PUBLIC	?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >::allocate
PUBLIC	?max_size@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QBEIXZ ; std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::max_size
PUBLIC	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
PUBLIC	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Isnil
PUBLIC	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
PUBLIC	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
PUBLIC	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
PUBLIC	?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myval
PUBLIC	?_Max@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Max
PUBLIC	?_Min@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Min
PUBLIC	??0?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >
PUBLIC	?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Construct
PUBLIC	??1?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::~_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >
PUBLIC	?_Alloc_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Free_proxy
PUBLIC	?_Getpfirst@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getpfirst
PUBLIC	?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myproxy
PUBLIC	?_Orphan_all@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Orphan_all
PUBLIC	?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Buyheadnode
PUBLIC	?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Freeheadnode
PUBLIC	?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Buynode0
PUBLIC	?_Freenode0@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Freenode0
PUBLIC	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@I@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getcomp
PUBLIC	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$less@I@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getcomp
PUBLIC	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getal
PUBLIC	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getal
PUBLIC	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Get_data
PUBLIC	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Get_data
PUBLIC	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myhead
PUBLIC	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myhead
PUBLIC	?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAIXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Mysize
PUBLIC	?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABIXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Mysize
PUBLIC	??R?$less@I@std@@QBE_NABI0@Z			; std::less<unsigned int>::operator()
PUBLIC	??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >
PUBLIC	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Color
PUBLIC	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Isnil
PUBLIC	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Left
PUBLIC	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Parent
PUBLIC	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Right
PUBLIC	?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Myval
PUBLIC	?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Max
PUBLIC	?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Min
PUBLIC	??1?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::~_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>::_Get_second
PUBLIC	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>
PUBLIC	?_Get_first@?$_Compressed_pair@U?$less@I@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@I@2@XZ ; std::_Compressed_pair<std::less<unsigned int>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$less@I@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@I@2@XZ ; std::_Compressed_pair<std::less<unsigned int>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$less@I@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@XZ ; std::_Compressed_pair<std::less<unsigned int>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$less@I@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@XZ ; std::_Compressed_pair<std::less<unsigned int>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>,1>::_Get_second
PUBLIC	??1?$_Compressed_pair@U?$less@I@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::less<unsigned int>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>,1>::~_Compressed_pair<std::less<unsigned int>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>,1>
PUBLIC	??0?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >
PUBLIC	??1?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::~_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::begin
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::end
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::size
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::max_size
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::erase
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::erase
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEIABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::erase
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::clear
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::find
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::lower_bound
PUBLIC	?equal_range@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@2@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::equal_range
PUBLIC	?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Destroy_if_not_nil
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Erase
PUBLIC	?_Compare@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE_NABI0@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Compare
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Lmost
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Lrotate
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Rmost
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Root
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Rrotate
PUBLIC	?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Orphan_ptr
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Tidy
PUBLIC	?_Kfn@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIABU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Kfn
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Key
PUBLIC	??0?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::map<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::map<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >
PUBLIC	??A?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAEAAV?$vector@PAEV?$allocator@PAE@std@@@1@ABI@Z ; std::map<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::operator[]
PUBLIC	??1?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::map<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::~map<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >
PUBLIC	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,int,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const *,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,int,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const *,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,int,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const *,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,int,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const *,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const &,std::_Iterator_base12>
PUBLIC	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,int,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const *,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,int,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const *,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const &,std::_Iterator_base12>
PUBLIC	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@$$QAU01@@Z ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,int,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const *,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,int,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const *,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const &,std::_Iterator_base12>
PUBLIC	??4?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,int,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const *,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const &,std::_Iterator_base12>::operator=
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::operator++
PUBLIC	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::operator--
PUBLIC	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Mynode
PUBLIC	??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>
PUBLIC	??4?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@ABV01@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::operator=
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
PUBLIC	??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBEABU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator*
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator++
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator++
PUBLIC	??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator--
PUBLIC	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator==
PUBLIC	??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator!=
PUBLIC	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::~_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
PUBLIC	??4?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator=
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
PUBLIC	??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBEAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator*
PUBLIC	??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBEPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator->
PUBLIC	??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator++
PUBLIC	??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator--
PUBLIC	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::~_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
PUBLIC	??0?$allocator@E@std@@QAE@XZ			; std::allocator<unsigned char>::allocator<unsigned char>
PUBLIC	??0?$allocator@E@std@@QAE@ABV01@@Z		; std::allocator<unsigned char>::allocator<unsigned char>
PUBLIC	?deallocate@?$allocator@E@std@@QAEXPAEI@Z	; std::allocator<unsigned char>::deallocate
PUBLIC	?allocate@?$allocator@E@std@@QAEPAEI@Z		; std::allocator<unsigned char>::allocate
PUBLIC	?max_size@?$allocator@E@std@@QBEIXZ		; std::allocator<unsigned char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@E@std@@@std@@SAIABV?$allocator@E@2@@Z ; std::allocator_traits<std::allocator<unsigned char> >::max_size
PUBLIC	?select_on_container_copy_construction@?$allocator_traits@V?$allocator@E@std@@@std@@SA?AV?$allocator@E@2@ABV32@@Z ; std::allocator_traits<std::allocator<unsigned char> >::select_on_container_copy_construction
PUBLIC	?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QBE?AU12@U_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<unsigned char> >::select_on_container_copy_construction
PUBLIC	??0?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<unsigned char> >::_Wrap_alloc<std::allocator<unsigned char> >
PUBLIC	??0?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAE@$$QAU01@@Z ; std::_Wrap_alloc<std::allocator<unsigned char> >::_Wrap_alloc<std::allocator<unsigned char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAEPAEI@Z ; std::_Wrap_alloc<std::allocator<unsigned char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAEXPAEI@Z ; std::_Wrap_alloc<std::allocator<unsigned char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<unsigned char> >::max_size
PUBLIC	??0?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >
PUBLIC	??1?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::~_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >
PUBLIC	?_Copy_alloc@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEXABU?$_Wrap_alloc@V?$allocator@E@std@@@2@@Z ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Copy_alloc
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Free_proxy
PUBLIC	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myproxy
PUBLIC	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Orphan_all
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Getal
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Getal
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@E@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Get_data
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@E@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Get_data
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABQAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Mylast
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABQAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Mylast
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myend
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABQAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myend
PUBLIC	??0?$_Vector_val@U?$_Simple_types@E@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<unsigned char> >::_Vector_val<std::_Simple_types<unsigned char> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@E@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<unsigned char> >::~_Vector_val<std::_Simple_types<unsigned char> >
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@E@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@E@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Get_second
PUBLIC	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1>
PUBLIC	??0?$vector@EV?$allocator@E@std@@@std@@QAE@XZ	; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> >
PUBLIC	??0?$vector@EV?$allocator@E@std@@@std@@QAE@I@Z	; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> >
PUBLIC	??0?$vector@EV?$allocator@E@std@@@std@@QAE@ABV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> >
PUBLIC	??1?$vector@EV?$allocator@E@std@@@std@@QAE@XZ	; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
PUBLIC	??4?$vector@EV?$allocator@E@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=
PUBLIC	?capacity@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::capacity
PUBLIC	?begin@?$vector@EV?$allocator@E@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@2@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::begin
PUBLIC	?end@?$vector@EV?$allocator@E@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@2@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::end
PUBLIC	?size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::size
PUBLIC	?max_size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::max_size
PUBLIC	?empty@?$vector@EV?$allocator@E@std@@@std@@QBE_NXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::empty
PUBLIC	??A?$vector@EV?$allocator@E@std@@@std@@QAEAAEI@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator[]
PUBLIC	?clear@?$vector@EV?$allocator@E@std@@@std@@QAEXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::clear
PUBLIC	?_Buy@?$vector@EV?$allocator@E@std@@@std@@IAE_NI@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Buy
PUBLIC	?_Destroy@?$vector@EV?$allocator@E@std@@@std@@IAEXPAE0@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Destroy
PUBLIC	?_Tidy@?$vector@EV?$allocator@E@std@@@std@@IAEXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Tidy
PUBLIC	?_Xlen@?$vector@EV?$allocator@E@std@@@std@@IBEXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Xlen
PUBLIC	??0?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@ABU01@@Z ; std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >
PUBLIC	??1?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@XZ ; std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >::~pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >
PUBLIC	??_G?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEPAXI@Z ; std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >::`scalar deleting destructor'
PUBLIC	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,int,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const *,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,int,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const *,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,int,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const *,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,int,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const *,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const &,std::_Iterator_base12>
PUBLIC	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,int,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const *,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,int,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const *,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const &,std::_Iterator_base12>
PUBLIC	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@$$QAU01@@Z ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,int,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const *,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,int,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const *,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const &,std::_Iterator_base12>
PUBLIC	??4?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,int,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const *,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const &,std::_Iterator_base12>::operator=
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::operator++
PUBLIC	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::operator--
PUBLIC	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Mynode
PUBLIC	??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>
PUBLIC	??4?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@ABV01@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::operator=
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >
PUBLIC	??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator*
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator++
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator++
PUBLIC	??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator--
PUBLIC	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator==
PUBLIC	??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator!=
PUBLIC	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::~_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >
PUBLIC	??4?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator=
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >
PUBLIC	??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator*
PUBLIC	??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator->
PUBLIC	??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator++
PUBLIC	??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator--
PUBLIC	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::~_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >
PUBLIC	??0?$allocator@PAE@std@@QAE@XZ			; std::allocator<unsigned char *>::allocator<unsigned char *>
PUBLIC	?deallocate@?$allocator@PAE@std@@QAEXPAPAEI@Z	; std::allocator<unsigned char *>::deallocate
PUBLIC	?allocate@?$allocator@PAE@std@@QAEPAPAEI@Z	; std::allocator<unsigned char *>::allocate
PUBLIC	?max_size@?$allocator@PAE@std@@QBEIXZ		; std::allocator<unsigned char *>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@PAE@std@@@std@@SAIABV?$allocator@PAE@2@@Z ; std::allocator_traits<std::allocator<unsigned char *> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<unsigned char *> >::_Wrap_alloc<std::allocator<unsigned char *> >
PUBLIC	??4?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QAEAAU01@$$QAU01@@Z ; std::_Wrap_alloc<std::allocator<unsigned char *> >::operator=
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QAEPAPAEI@Z ; std::_Wrap_alloc<std::allocator<unsigned char *> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QAEXPAPAEI@Z ; std::_Wrap_alloc<std::allocator<unsigned char *> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<unsigned char *> >::max_size
PUBLIC	??0?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >
PUBLIC	??1?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::~_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >
PUBLIC	?_Move_alloc@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEXAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@@Z ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Move_alloc
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Free_proxy
PUBLIC	?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Getpfirst
PUBLIC	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myproxy
PUBLIC	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Orphan_all
PUBLIC	?_Swap_all@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEXAAV12@@Z ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Swap_all
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Getal
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Getal
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAE@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Get_data
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@PAE@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Get_data
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myfirst
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABQAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myfirst
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABQAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myend
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABQAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myend
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<unsigned char *> >::_Vector_val<std::_Simple_types<unsigned char *> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<unsigned char *> >::~_Vector_val<std::_Simple_types<unsigned char *> >
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAE@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char *> >,std::_Vector_val<std::_Simple_types<unsigned char *> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAE@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char *> >,std::_Vector_val<std::_Simple_types<unsigned char *> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAE@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAE@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char *> >,std::_Vector_val<std::_Simple_types<unsigned char *> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAE@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@PAE@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char *> >,std::_Vector_val<std::_Simple_types<unsigned char *> >,1>::_Get_second
PUBLIC	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAE@std@@@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char *> >,std::_Vector_val<std::_Simple_types<unsigned char *> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char *> >,std::_Vector_val<std::_Simple_types<unsigned char *> >,1>
PUBLIC	??0?$vector@PAEV?$allocator@PAE@std@@@std@@QAE@XZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::vector<unsigned char *,std::allocator<unsigned char *> >
PUBLIC	??4?$vector@PAEV?$allocator@PAE@std@@@std@@QAEAAV01@$$QAV01@@Z ; std::vector<unsigned char *,std::allocator<unsigned char *> >::operator=
PUBLIC	?_Assign_rv@?$vector@PAEV?$allocator@PAE@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Assign_rv
PUBLIC	?_Assign_rv@?$vector@PAEV?$allocator@PAE@std@@@std@@QAEX$$QAV12@@Z ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Assign_rv
PUBLIC	??1?$vector@PAEV?$allocator@PAE@std@@@std@@QAE@XZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::~vector<unsigned char *,std::allocator<unsigned char *> >
PUBLIC	?capacity@?$vector@PAEV?$allocator@PAE@std@@@std@@QBEIXZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::capacity
PUBLIC	?_Unused_capacity@?$vector@PAEV?$allocator@PAE@std@@@std@@QBEIXZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Unused_capacity
PUBLIC	?begin@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@XZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::begin
PUBLIC	?end@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@XZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::end
PUBLIC	?_Make_iter@?$vector@PAEV?$allocator@PAE@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@@Z ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Make_iter
PUBLIC	?size@?$vector@PAEV?$allocator@PAE@std@@@std@@QBEIXZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::size
PUBLIC	?max_size@?$vector@PAEV?$allocator@PAE@std@@@std@@QBEIXZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::max_size
PUBLIC	?empty@?$vector@PAEV?$allocator@PAE@std@@@std@@QBE_NXZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::empty
PUBLIC	?push_back@?$vector@PAEV?$allocator@PAE@std@@@std@@QAEXABQAE@Z ; std::vector<unsigned char *,std::allocator<unsigned char *> >::push_back
PUBLIC	?erase@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@0@Z ; std::vector<unsigned char *,std::allocator<unsigned char *> >::erase
PUBLIC	?clear@?$vector@PAEV?$allocator@PAE@std@@@std@@QAEXXZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::clear
PUBLIC	?_Destroy@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXPAPAE0@Z ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Destroy
PUBLIC	?_Grow_to@?$vector@PAEV?$allocator@PAE@std@@@std@@IBEII@Z ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Grow_to
PUBLIC	?_Inside@?$vector@PAEV?$allocator@PAE@std@@@std@@IBE_NPBQAE@Z ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Inside
PUBLIC	?_Reallocate@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXI@Z ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Reallocate
PUBLIC	?_Reserve@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXI@Z ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Reserve
PUBLIC	?_Tidy@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXXZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Tidy
PUBLIC	?_Xlen@?$vector@PAEV?$allocator@PAE@std@@@std@@IBEXXZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Xlen
PUBLIC	?_Orphan_range@?$vector@PAEV?$allocator@PAE@std@@@std@@IBEXPAPAE0@Z ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Orphan_range
PUBLIC	??1?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@XZ ; std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >::~pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >
PUBLIC	??_G?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@QAEPAXI@Z ; std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >::`scalar deleting destructor'
PUBLIC	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEI@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,unsigned int>,int,std::pair<unsigned char * const,unsigned int> const *,std::pair<unsigned char * const,unsigned int> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,unsigned int>,int,std::pair<unsigned char * const,unsigned int> const *,std::pair<unsigned char * const,unsigned int> const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEI@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,unsigned int>,int,std::pair<unsigned char * const,unsigned int> const *,std::pair<unsigned char * const,unsigned int> const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,unsigned int>,int,std::pair<unsigned char * const,unsigned int> const *,std::pair<unsigned char * const,unsigned int> const &,std::_Iterator_base12>
PUBLIC	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEI@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,unsigned int>,int,std::pair<unsigned char * const,unsigned int> const *,std::pair<unsigned char * const,unsigned int> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,unsigned int>,int,std::pair<unsigned char * const,unsigned int> const *,std::pair<unsigned char * const,unsigned int> const &,std::_Iterator_base12>
PUBLIC	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEI@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@$$QAU01@@Z ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,unsigned int>,int,std::pair<unsigned char * const,unsigned int> const *,std::pair<unsigned char * const,unsigned int> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,unsigned int>,int,std::pair<unsigned char * const,unsigned int> const *,std::pair<unsigned char * const,unsigned int> const &,std::_Iterator_base12>
PUBLIC	??4?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEI@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,unsigned int>,int,std::pair<unsigned char * const,unsigned int> const *,std::pair<unsigned char * const,unsigned int> const &,std::_Iterator_base12>::operator=
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::operator++
PUBLIC	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::operator--
PUBLIC	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Mynode
PUBLIC	??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>
PUBLIC	??4?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@ABV01@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::operator=
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >
PUBLIC	??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBEABU?$pair@QAEI@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator*
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator++
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator++
PUBLIC	??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator--
PUBLIC	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator==
PUBLIC	??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator!=
PUBLIC	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::~_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >
PUBLIC	??4?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator=
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAEHPBQAEABQAEU_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,unsigned char *,int,unsigned char * const *,unsigned char * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,unsigned char *,int,unsigned char * const *,unsigned char * const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAEHPBQAEABQAEU_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,unsigned char *,int,unsigned char * const *,unsigned char * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,unsigned char *,int,unsigned char * const *,unsigned char * const &,std::_Iterator_base12>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAEHPBQAEABQAEU_Iterator_base12@2@@std@@QAE@ABU01@@Z ; std::_Iterator012<std::random_access_iterator_tag,unsigned char *,int,unsigned char * const *,unsigned char * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,unsigned char *,int,unsigned char * const *,unsigned char * const &,std::_Iterator_base12>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAEHPBQAEABQAEU_Iterator_base12@2@@std@@QAE@$$QAU01@@Z ; std::_Iterator012<std::random_access_iterator_tag,unsigned char *,int,unsigned char * const *,unsigned char * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,unsigned char *,int,unsigned char * const *,unsigned char * const &,std::_Iterator_base12>
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@PAPAEPBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBEABQAEXZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::operator++
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::operator!=
PUBLIC	??M?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::operator<
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::_Compat
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@$$QAV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@PAPAEPBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >
PUBLIC	?_Rechecked@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAEAAV12@PAPAE@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::_Rechecked
PUBLIC	?_Unchecked@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBEPAPAEXZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::_Unchecked
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBEAAPAEXZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::operator*
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::operator++
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >
PUBLIC	??$remove@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@PAE@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@V10@0ABQAE@Z ; std::remove<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >,unsigned char *>
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >
PUBLIC	??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBEAAU?$pair@QAEI@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator*
PUBLIC	??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBEPAU?$pair@QAEI@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator->
PUBLIC	??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator++
PUBLIC	??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator--
PUBLIC	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::~_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >
PUBLIC	??$_Debug_lt_pred@AAU?$less@I@std@@ABIABI@std@@YA_NAAU?$less@I@0@ABI1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned int> &,unsigned int const &,unsigned int const &>
PUBLIC	??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > >::~pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > >
PUBLIC	??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@0@Z ; std::distance<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > >
PUBLIC	??$try_emplace@$$V@?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABI@Z ; std::map<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::try_emplace<>
PUBLIC	??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@XZ ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool>::~pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool>
PUBLIC	??$_Move_unchecked@PAPAEPAPAE@std@@YAPAPAEPAPAE00@Z ; std::_Move_unchecked<unsigned char * *,unsigned char * *>
PUBLIC	??$addressof@QAE@std@@YAPBQAEABQAE@Z		; std::addressof<unsigned char * const>
PUBLIC	??$_Unfancy@PAE@std@@YAPAPAEPAPAE@Z		; std::_Unfancy<unsigned char *>
PUBLIC	??$construct@PAEAAPAE@?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QAEXPAPAEAAPAE@Z ; std::_Wrap_alloc<std::allocator<unsigned char *> >::construct<unsigned char *,unsigned char * &>
PUBLIC	??$construct@PAEABQAE@?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QAEXPAPAEABQAE@Z ; std::_Wrap_alloc<std::allocator<unsigned char *> >::construct<unsigned char *,unsigned char * const &>
PUBLIC	??$?9V?$allocator@PAE@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@0@Z ; std::operator!=<std::allocator<unsigned char *>,std::allocator<unsigned char *> >
PUBLIC	??$forward@V?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@YA$$QAV?$vector@PAEV?$allocator@PAE@std@@@0@AAV10@@Z ; std::forward<std::vector<unsigned char *,std::allocator<unsigned char *> > >
PUBLIC	??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > >::~pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > >
PUBLIC	??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@0@Z ; std::distance<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > >
PUBLIC	??$try_emplace@$$V@?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@ABQAE@Z ; std::map<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> > >::try_emplace<>
PUBLIC	??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@std@@QAE@XZ ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool>::~pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool>
PUBLIC	??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>
PUBLIC	??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >::~pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >
PUBLIC	??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0@Z ; std::distance<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >
PUBLIC	??$try_emplace@$$V@?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABQAE@Z ; std::map<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::try_emplace<>
PUBLIC	??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@XZ ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool>::~pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool>
PUBLIC	??$?9V?$allocator@E@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@E@std@@@0@0@Z ; std::operator!=<std::allocator<unsigned char>,std::allocator<unsigned char> >
PUBLIC	??$_Copy_unchecked@PAEPAE@std@@YAPAEPAE00@Z	; std::_Copy_unchecked<unsigned char *,unsigned char *>
PUBLIC	??$_Ucopy@PAE@?$vector@EV?$allocator@E@std@@@std@@IAEPAEPAE00@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Ucopy<unsigned char *>
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@E@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@E@std@@@1@@Z ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > ><std::_Wrap_alloc<std::allocator<unsigned char> >,void>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@EHPBEABEU_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,unsigned char,int,unsigned char const *,unsigned char const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,unsigned char,int,unsigned char const *,unsigned char const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@EHPBEABEU_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,unsigned char,int,unsigned char const *,unsigned char const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,unsigned char,int,unsigned char const *,unsigned char const &,std::_Iterator_base12>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@EHPBEABEU_Iterator_base12@2@@std@@QAE@ABU01@@Z ; std::_Iterator012<std::random_access_iterator_tag,unsigned char,int,unsigned char const *,unsigned char const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,unsigned char,int,unsigned char const *,unsigned char const &,std::_Iterator_base12>
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@PAEPBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >
PUBLIC	?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QBEPBEXZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >::_Unchecked
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >
PUBLIC	??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@@?$vector@EV?$allocator@E@std@@@std@@IAEPAEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@1@0PAE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > > >
PUBLIC	??$_Uninitialized_default_fill_n@PAEIV?$allocator@E@std@@@std@@YAXPAEIAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z ; std::_Uninitialized_default_fill_n<unsigned char *,unsigned int,std::allocator<unsigned char> >
PUBLIC	??$_Pocma@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@0@Z ; std::_Pocma<std::_Wrap_alloc<std::allocator<unsigned char *> > >
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAE@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char *> >,std::_Vector_val<std::_Simple_types<unsigned char *> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char *> >,std::_Vector_val<std::_Simple_types<unsigned char *> >,1><>
PUBLIC	??$?0V?$allocator@E@std@@@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAE@$$QAV?$allocator@E@1@@Z ; std::_Wrap_alloc<std::allocator<unsigned char> >::_Wrap_alloc<std::allocator<unsigned char> ><std::allocator<unsigned char> >
PUBLIC	??$_Pocca@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@ABU10@@Z ; std::_Pocca<std::_Wrap_alloc<std::allocator<unsigned char> > >
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1><>
PUBLIC	?pointer_to@?$pointer_traits@PAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@SAPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@AAU32@@Z ; std::pointer_traits<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > *>::pointer_to
PUBLIC	??$_Eqrange@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Eqrange<unsigned int>
PUBLIC	??$_Eqrange@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Eqrange<unsigned int>
PUBLIC	??$_Lbound@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Lbound<unsigned int>
PUBLIC	??$_Destroy_range@V?$allocator@PAE@std@@PAPAE@std@@YAXPAPAE0AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@@Z ; std::_Destroy_range<std::allocator<unsigned char *>,unsigned char * *>
PUBLIC	?pointer_to@?$pointer_traits@PAU?$pair@QAEI@std@@@std@@SAPAU?$pair@QAEI@2@AAU32@@Z ; std::pointer_traits<std::pair<unsigned char * const,unsigned int> *>::pointer_to
PUBLIC	??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Eqrange<unsigned char *>
PUBLIC	??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Eqrange<unsigned char *>
PUBLIC	?pointer_to@?$pointer_traits@PAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@SAPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@AAU32@@Z ; std::pointer_traits<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > *>::pointer_to
PUBLIC	??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Eqrange<unsigned char *>
PUBLIC	??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Eqrange<unsigned char *>
PUBLIC	??$_Lbound@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@ABQAE@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Lbound<unsigned char *>
PUBLIC	??$_Destroy_range@V?$allocator@E@std@@PAE@std@@YAXPAE0AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z ; std::_Destroy_range<std::allocator<unsigned char>,unsigned char *>
PUBLIC	??$addressof@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@0@AAU10@@Z ; std::addressof<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >
PUBLIC	??$addressof@U?$pair@QAEI@std@@@std@@YAPAU?$pair@QAEI@0@AAU10@@Z ; std::addressof<std::pair<unsigned char * const,unsigned int> >
PUBLIC	??$addressof@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@YAPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@0@AAU10@@Z ; std::addressof<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QBEPAU_Container_proxy@2@AAU32@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$?0AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<unsigned char *> > &>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$?0AAU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@E@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<unsigned char> > &>
PUBLIC	??$addressof@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
PUBLIC	??$destroy@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
PUBLIC	??$?0AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > > &>
PUBLIC	??$?0ABU?$less@I@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@I@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@I@1@$$QAU_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::less<unsigned int>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>,1>::_Compressed_pair<std::less<unsigned int>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>,1><std::less<unsigned int> const &,std::_Zero_then_variadic_args_t>
PUBLIC	??$_Kfn@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@SAABIABU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@@Z ; std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0>::_Kfn<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >
PUBLIC	??$swap@DX@std@@YAXAAD0@Z			; std::swap<char,void>
PUBLIC	??$destroy@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::destroy<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >
PUBLIC	??$_Umove@PAPAE@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEPAPAEPAPAE00@Z ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Umove<unsigned char * *>
PUBLIC	??$addressof@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
PUBLIC	??$destroy@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::destroy<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
PUBLIC	??$?0AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > > &>
PUBLIC	??$?0ABU?$less@PAE@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@PAE@1@$$QAU_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>,1>::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>,1><std::less<unsigned char *> const &,std::_Zero_then_variadic_args_t>
PUBLIC	??$destroy@U?$pair@QAEI@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAEI@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::destroy<std::pair<unsigned char * const,unsigned int> >
PUBLIC	??$addressof@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
PUBLIC	??$destroy@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
PUBLIC	??$?0AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > > &>
PUBLIC	??$?0ABU?$less@PAE@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@PAE@1@$$QAU_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1>::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1><std::less<unsigned char *> const &,std::_Zero_then_variadic_args_t>
PUBLIC	??$_Kfn@QAEV?$vector@EV?$allocator@E@std@@@std@@@?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@SAABQAEABU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@@Z ; std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0>::_Kfn<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >
PUBLIC	??$destroy@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::destroy<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >
PUBLIC	?pointer_to@?$pointer_traits@PAU_Container_proxy@std@@@std@@SAPAU_Container_proxy@2@AAU32@@Z ; std::pointer_traits<std::_Container_proxy *>::pointer_to
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$construct@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::construct<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> * &>
PUBLIC	??$construct@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::construct<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> * &>
PUBLIC	??$construct@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::construct<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &>
PUBLIC	??$_Debug_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@0PB_WI@Z ; std::_Debug_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > > >
PUBLIC	??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@YAPAPAEV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<std::_Simple_types<unsigned char *> > >
PUBLIC	??$_Remove_unchecked@PAPAEPAE@std@@YAPAPAEPAPAE0ABQAE@Z ; std::_Remove_unchecked<unsigned char * *,unsigned char *>
PUBLIC	??$_Rechecked@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@YAAAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@AAV10@PAPAE@Z ; std::_Rechecked<std::_Vector_val<std::_Simple_types<unsigned char *> > >
PUBLIC	??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z ; std::_Distance1<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > >
PUBLIC	??$_Try_emplace@ABI$$V@?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABI@Z ; std::map<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Try_emplace<unsigned int const &>
PUBLIC	??$_Ptr_move_cat@PAEPAE@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAPAE0@Z ; std::_Ptr_move_cat<unsigned char *,unsigned char *>
PUBLIC	??$_Move_unchecked1@PAPAEPAPAE@std@@YAPAPAEPAPAE00U_Trivially_copyable_ptr_iterator_tag@0@@Z ; std::_Move_unchecked1<unsigned char * *,unsigned char * *>
PUBLIC	??$forward@AAPAE@std@@YAAAPAEAAPAE@Z		; std::forward<unsigned char * &>
PUBLIC	??$construct@PAEAAPAE@?$allocator_traits@V?$allocator@PAE@std@@@std@@SAXAAV?$allocator@PAE@1@PAPAEAAPAE@Z ; std::allocator_traits<std::allocator<unsigned char *> >::construct<unsigned char *,unsigned char * &>
PUBLIC	??$forward@ABQAE@std@@YAABQAEABQAE@Z		; std::forward<unsigned char * const &>
PUBLIC	??$construct@PAEABQAE@?$allocator_traits@V?$allocator@PAE@std@@@std@@SAXAAV?$allocator@PAE@1@PAPAEABQAE@Z ; std::allocator_traits<std::allocator<unsigned char *> >::construct<unsigned char *,unsigned char * const &>
PUBLIC	??$?8V?$allocator@PAE@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@0@Z ; std::operator==<std::allocator<unsigned char *>,std::allocator<unsigned char *> >
PUBLIC	??$?8PAEPAE@std@@YA_NABV?$allocator@PAE@0@0@Z	; std::operator==<unsigned char *,unsigned char *>
PUBLIC	??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z ; std::_Distance1<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > >
PUBLIC	??$_Try_emplace@ABQAE$$V@?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@ABQAE@Z ; std::map<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> > >::_Try_emplace<unsigned char * const &>
PUBLIC	??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z ; std::_Distance1<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >
PUBLIC	??$_Try_emplace@ABQAE$$V@?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABQAE@Z ; std::map<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Try_emplace<unsigned char * const &>
PUBLIC	??$?8V?$allocator@E@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@E@std@@@0@0@Z ; std::operator==<std::allocator<unsigned char>,std::allocator<unsigned char> >
PUBLIC	??$?8EE@std@@YA_NABV?$allocator@E@0@0@Z		; std::operator==<unsigned char,unsigned char>
PUBLIC	??$_Ptr_copy_cat@EE@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAE0@Z ; std::_Ptr_copy_cat<unsigned char,unsigned char>
PUBLIC	??$_Copy_unchecked1@PAEPAE@std@@YAPAEPAE00U_Trivially_copyable_ptr_iterator_tag@0@@Z ; std::_Copy_unchecked1<unsigned char *,unsigned char *>
PUBLIC	??$_Uninitialized_copy@PAEPAEV?$allocator@E@std@@@std@@YAPAEPAE00AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z ; std::_Uninitialized_copy<unsigned char *,unsigned char *,std::allocator<unsigned char> >
PUBLIC	??$forward@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@E@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<unsigned char> > >
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@E@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@E@std@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1><std::_Wrap_alloc<std::allocator<unsigned char> > >
PUBLIC	??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@PAEV?$allocator@E@2@@std@@YAPAEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@0@0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >,unsigned char *,std::allocator<unsigned char> >
PUBLIC	??$_Uninitialized_default_fill_n1@PAEIV?$allocator@E@std@@@std@@YAXPAEIAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U?$integral_constant@_N$00@0@@Z ; std::_Uninitialized_default_fill_n1<unsigned char *,unsigned int,std::allocator<unsigned char> >
PUBLIC	??$_Pocma@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@0U?$integral_constant@_N$00@0@@Z ; std::_Pocma<std::_Wrap_alloc<std::allocator<unsigned char *> > >
PUBLIC	??$forward@V?$allocator@E@std@@@std@@YA$$QAV?$allocator@E@0@AAV10@@Z ; std::forward<std::allocator<unsigned char> >
PUBLIC	??$_Pocca@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@ABU10@U?$integral_constant@_N$0A@@0@@Z ; std::_Pocca<std::_Wrap_alloc<std::allocator<unsigned char> > >
PUBLIC	??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > >::~pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > >
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@0@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > >::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > ><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > &,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > &,void,0>
PUBLIC	??$_Destroy_range1@V?$allocator@PAE@std@@PAPAE@std@@YAXPAPAE0AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@U?$integral_constant@_N$00@0@@Z ; std::_Destroy_range1<std::allocator<unsigned char *>,unsigned char * *>
PUBLIC	??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > >::~pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > >
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@0@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > >::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > ><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > &,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > &,void,0>
PUBLIC	??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >::~pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@0@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > ><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &,void,0>
PUBLIC	??$_Destroy_range1@V?$allocator@E@std@@PAE@std@@YAXPAE0AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U?$integral_constant@_N$00@0@@Z ; std::_Destroy_range1<std::allocator<unsigned char>,unsigned char *>
PUBLIC	??$forward@AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<unsigned char *> > &>
PUBLIC	??$?0PAE@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAE@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned char *>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$forward@AAU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<unsigned char> > &>
PUBLIC	??$?0E@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@E@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned char>
PUBLIC	??$destroy@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
PUBLIC	??$forward@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > > &>
PUBLIC	??$?0U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >
PUBLIC	??$forward@ABU?$less@I@std@@@std@@YAABU?$less@I@0@ABU10@@Z ; std::forward<std::less<unsigned int> const &>
PUBLIC	??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z ; std::forward<std::_Zero_then_variadic_args_t>
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1><>
PUBLIC	??$move@AAD@std@@YA$$QADAAD@Z			; std::move<char &>
PUBLIC	??$destroy@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@1@PAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::destroy<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >
PUBLIC	??$_Uninitialized_move@PAPAEPAPAEV?$allocator@PAE@std@@@std@@YAPAPAEPAPAE00AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@@Z ; std::_Uninitialized_move<unsigned char * *,unsigned char * *,std::allocator<unsigned char *> >
PUBLIC	??$destroy@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::destroy<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
PUBLIC	??$forward@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > > &>
PUBLIC	??$?0U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >
PUBLIC	??$forward@ABU?$less@PAE@std@@@std@@YAABU?$less@PAE@0@ABU10@@Z ; std::forward<std::less<unsigned char *> const &>
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1><>
PUBLIC	??$destroy@U?$pair@QAEI@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@1@PAU?$pair@QAEI@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::destroy<std::pair<unsigned char * const,unsigned int> >
PUBLIC	??$destroy@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
PUBLIC	??$forward@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > > &>
PUBLIC	??$?0U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1><>
PUBLIC	??$destroy@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@1@PAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::destroy<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >
PUBLIC	??$forward@AAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> * &>
PUBLIC	??$construct@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAPAU31@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::construct<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> * &>
PUBLIC	??$forward@AAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> * &>
PUBLIC	??$construct@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAPAU31@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::construct<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> * &>
PUBLIC	??$forward@AAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &>
PUBLIC	??$construct@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAPAU31@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::construct<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &>
PUBLIC	??$_Debug_lt_pred@ABU?$less@I@std@@ABIABI@std@@YA_NABU?$less@I@0@ABI1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned int> const &,unsigned int const &,unsigned int const &>
PUBLIC	??$_Debug_lt_pred@ABU?$less@PAE@std@@ABQAEABQAE@std@@YA_NABU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> const &,unsigned char * const &,unsigned char * const &>
PUBLIC	??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@0@Z ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > &,void,0>
PUBLIC	??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@0@Z ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > &,void,0>
PUBLIC	??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@0@Z ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &,void,0>
PUBLIC	??$_Debug_range2@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > > >
PUBLIC	??$_Find_unchecked@PAPAEPAE@std@@YAPAPAEPAPAE0ABQAE@Z ; std::_Find_unchecked<unsigned char * *,unsigned char *>
PUBLIC	??$move@AAPAE@std@@YA$$QAPAEAAPAE@Z		; std::move<unsigned char * &>
PUBLIC	??$forward@ABI@std@@YAABIABI@Z			; std::forward<unsigned int const &>
PUBLIC	??$forward_as_tuple@ABI@std@@YA?AV?$tuple@ABI@0@ABI@Z ; std::forward_as_tuple<unsigned int const &>
PUBLIC	??0?$tuple@ABI@std@@QAE@$$QAV01@@Z		; std::tuple<unsigned int const &>::tuple<unsigned int const &>
PUBLIC	??$forward_as_tuple@$$V@std@@YA?AV?$tuple@$$V@0@XZ ; std::forward_as_tuple<>
PUBLIC	??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::emplace_hint<std::piecewise_construct_t const &,std::tuple<unsigned int const &>,std::tuple<> >
PUBLIC	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool,void,0>
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > &,bool,void,0>
PUBLIC	??$_Copy_memmove@PAPAEPAPAE@std@@YAPAPAEPAPAE00@Z ; std::_Copy_memmove<unsigned char * *,unsigned char * *>
PUBLIC	??$construct@PAEAAPAE@?$allocator@PAE@std@@QAEXPAPAEAAPAE@Z ; std::allocator<unsigned char *>::construct<unsigned char *,unsigned char * &>
PUBLIC	??$construct@PAEABQAE@?$allocator@PAE@std@@QAEXPAPAEABQAE@Z ; std::allocator<unsigned char *>::construct<unsigned char *,unsigned char * const &>
PUBLIC	??$forward_as_tuple@ABQAE@std@@YA?AV?$tuple@ABQAE@0@ABQAE@Z ; std::forward_as_tuple<unsigned char * const &>
PUBLIC	??0?$tuple@ABQAE@std@@QAE@$$QAV01@@Z		; std::tuple<unsigned char * const &>::tuple<unsigned char * const &>
PUBLIC	??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::emplace_hint<std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >
PUBLIC	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool,void,0>
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > &,bool,void,0>
PUBLIC	??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::emplace_hint<std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >
PUBLIC	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool,void,0>
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &,bool,void,0>
PUBLIC	??$_Copy_memmove@PAEPAE@std@@YAPAEPAE00@Z	; std::_Copy_memmove<unsigned char *,unsigned char *>
PUBLIC	??$_Unchecked@PAE@std@@YAPAEPAE@Z		; std::_Unchecked<unsigned char *>
PUBLIC	??$_Uninitialized_copy_al_unchecked@PAEPAEV?$allocator@E@std@@@std@@YAPAEPAE00AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z ; std::_Uninitialized_copy_al_unchecked<unsigned char *,unsigned char *,std::allocator<unsigned char> >
PUBLIC	??$_Rechecked@PAEPAE@std@@YAAAPAEAAPAEPAE@Z	; std::_Rechecked<unsigned char *,unsigned char *>
PUBLIC	??$_Unchecked@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@YAPBEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<std::_Simple_types<unsigned char> > >
PUBLIC	??$_Uninitialized_copy_al_unchecked@PBEPAEV?$allocator@E@std@@@std@@YAPAEPBE0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z ; std::_Uninitialized_copy_al_unchecked<unsigned char const *,unsigned char *,std::allocator<unsigned char> >
PUBLIC	??$move@AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@AAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<unsigned char *> > &>
PUBLIC	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > &>
PUBLIC	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > &>
PUBLIC	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z ; std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >::destroy<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
PUBLIC	??$destroy@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@@Z ; std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >::destroy<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >
PUBLIC	??$_Unchecked@PAPAE@std@@YAPAPAEPAPAE@Z		; std::_Unchecked<unsigned char * *>
PUBLIC	??$_Uninitialized_move_al_unchecked@PAPAEPAPAEV?$allocator@PAE@std@@@std@@YAPAPAEPAPAE00AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@@Z ; std::_Uninitialized_move_al_unchecked<unsigned char * *,unsigned char * *,std::allocator<unsigned char *> >
PUBLIC	??$_Rechecked@PAPAEPAPAE@std@@YAAAPAPAEAAPAPAEPAPAE@Z ; std::_Rechecked<unsigned char * *,unsigned char * *>
PUBLIC	??$destroy@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >::destroy<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
PUBLIC	??$destroy@U?$pair@QAEI@std@@@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEI@1@@Z ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >::destroy<std::pair<unsigned char * const,unsigned int> >
PUBLIC	??$destroy@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::destroy<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
PUBLIC	??$destroy@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@@Z ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::destroy<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >
PUBLIC	??$construct@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAPAU21@@Z ; std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >::construct<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> * &>
PUBLIC	??$construct@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAPAU21@@Z ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >::construct<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> * &>
PUBLIC	??$construct@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAPAU21@@Z ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::construct<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &>
PUBLIC	??$move@AAU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@E@std@@@0@AAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<unsigned char> > &>
PUBLIC	??$_Lbound@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@ABQAE@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Lbound<unsigned char *>
PUBLIC	??$_Kfn@QAEI@?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@SAABQAEABU?$pair@QAEI@1@@Z ; std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0>::_Kfn<unsigned char * const,unsigned int>
PUBLIC	??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > &>
PUBLIC	??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > &>
PUBLIC	??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &>
PUBLIC	??$_Debug_pointer@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXAAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@PB_WI@Z ; std::_Debug_pointer<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > > >
PUBLIC	??$_Find_unchecked1@PAPAEPAE@std@@YAPAPAEPAPAE0ABQAEU?$integral_constant@_N$0A@@0@@Z ; std::_Find_unchecked1<unsigned char * *,unsigned char *>
PUBLIC	??$?0ABI$0A@@?$tuple@ABI@std@@QAE@ABI@Z		; std::tuple<unsigned int const &>::tuple<unsigned int const &><unsigned int const &,0>
PUBLIC	??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z ; std::forward<std::piecewise_construct_t const &>
PUBLIC	??$forward@V?$tuple@ABI@std@@@std@@YA$$QAV?$tuple@ABI@0@AAV10@@Z ; std::forward<std::tuple<unsigned int const &> >
PUBLIC	??$forward@V?$tuple@$$V@std@@@std@@YA$$QAV?$tuple@$$V@0@AAV10@@Z ; std::forward<std::tuple<> >
PUBLIC	??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Buynode<std::piecewise_construct_t const &,std::tuple<unsigned int const &>,std::tuple<> >
PUBLIC	??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Insert_hint<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
PUBLIC	??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > >
PUBLIC	??$forward@_N@std@@YA$$QA_NAA_N@Z		; std::forward<bool>
PUBLIC	??$?0ABQAE$0A@@?$tuple@ABQAE@std@@QAE@ABQAE@Z	; std::tuple<unsigned char * const &>::tuple<unsigned char * const &><unsigned char * const &,0>
PUBLIC	??$forward@V?$tuple@ABQAE@std@@@std@@YA$$QAV?$tuple@ABQAE@0@AAV10@@Z ; std::forward<std::tuple<unsigned char * const &> >
PUBLIC	??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Buynode<std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >
PUBLIC	??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Insert_hint<std::pair<unsigned char * const,unsigned int> &,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
PUBLIC	??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > >
PUBLIC	??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Buynode<std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >
PUBLIC	??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Insert_hint<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
PUBLIC	??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >
PUBLIC	??$_Uninitialized_copy_al_unchecked1@EEV?$allocator@E@std@@@std@@YAPAEPAE00AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ; std::_Uninitialized_copy_al_unchecked1<unsigned char,unsigned char,std::allocator<unsigned char> >
PUBLIC	??$_Ptr_copy_cat@$$CBEE@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQBEABQAE@Z ; std::_Ptr_copy_cat<unsigned char const ,unsigned char>
PUBLIC	??$_Uninitialized_copy_al_unchecked1@$$CBEEV?$allocator@E@std@@@std@@YAPAEPBE0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ; std::_Uninitialized_copy_al_unchecked1<unsigned char const ,unsigned char,std::allocator<unsigned char> >
PUBLIC	??$_Uninitialized_move_al_unchecked1@PAEPAEV?$allocator@PAE@std@@@std@@YAPAPAEPAPAE00AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ; std::_Uninitialized_move_al_unchecked1<unsigned char *,unsigned char *,std::allocator<unsigned char *> >
PUBLIC	??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z ; std::tuple<>::tuple<><std::_Exact_args_t,0>
PUBLIC	??$?0ABI@?$_Tuple_val@ABI@std@@QAE@ABI@Z	; std::_Tuple_val<unsigned int const &>::_Tuple_val<unsigned int const &><unsigned int const &>
PUBLIC	??$construct@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::construct<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,std::piecewise_construct_t const &,std::tuple<unsigned int const &>,std::tuple<> >
PUBLIC	??$forward@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@YAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &>
PUBLIC	??$_Insert_at@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Insert_at<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
PUBLIC	??$_Insert_nohint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Insert_nohint<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
PUBLIC	??$?0ABQAE@?$_Tuple_val@ABQAE@std@@QAE@ABQAE@Z	; std::_Tuple_val<unsigned char * const &>::_Tuple_val<unsigned char * const &><unsigned char * const &>
PUBLIC	??$construct@U?$pair@QAEI@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAEI@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::construct<std::pair<unsigned char * const,unsigned int>,std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >
PUBLIC	??$forward@AAU?$pair@QAEI@std@@@std@@YAAAU?$pair@QAEI@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,unsigned int> &>
PUBLIC	??$_Insert_at@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAU?$pair@QAEI@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Insert_at<std::pair<unsigned char * const,unsigned int> &,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
PUBLIC	??$_Insert_nohint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Insert_nohint<std::pair<unsigned char * const,unsigned int> &,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
PUBLIC	??$construct@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::construct<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >
PUBLIC	??$forward@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &>
PUBLIC	??$_Insert_at@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Insert_at<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
PUBLIC	??$_Insert_nohint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Insert_nohint<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
PUBLIC	??$_Copy_memmove@PBEPAE@std@@YAPAEPBE0PAE@Z	; std::_Copy_memmove<unsigned char const *,unsigned char *>
PUBLIC	??$construct@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@1@PAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::construct<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,std::piecewise_construct_t const &,std::tuple<unsigned int const &>,std::tuple<> >
PUBLIC	??$_Buynode_if_nil@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PAU21@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Buynode_if_nil<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &>
PUBLIC	??$construct@U?$pair@QAEI@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@1@PAU?$pair@QAEI@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::construct<std::pair<unsigned char * const,unsigned int>,std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >
PUBLIC	??$_Buynode_if_nil@AAU?$pair@QAEI@std@@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PAU21@AAU?$pair@QAEI@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Buynode_if_nil<std::pair<unsigned char * const,unsigned int> &>
PUBLIC	??$construct@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@1@PAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::construct<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >
PUBLIC	??$_Buynode_if_nil@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PAU21@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Buynode_if_nil<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &>
PUBLIC	??$construct@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z ; std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >::construct<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,std::piecewise_construct_t const &,std::tuple<unsigned int const &>,std::tuple<> >
PUBLIC	??$construct@U?$pair@QAEI@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEI@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >::construct<std::pair<unsigned char * const,unsigned int>,std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >
PUBLIC	??$construct@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::construct<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >
PUBLIC	??$?0ABI$$Z$$V@?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABI@1@V?$tuple@$$V@1@@Z ; std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > ><unsigned int const &>
PUBLIC	??$?0ABQAE$$Z$$V@?$pair@QAEI@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABQAE@1@V?$tuple@$$V@1@@Z ; std::pair<unsigned char * const,unsigned int>::pair<unsigned char * const,unsigned int><unsigned char * const &>
PUBLIC	??$?0ABQAE$$Z$$V@?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABQAE@1@V?$tuple@$$V@1@@Z ; std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > ><unsigned char * const &>
PUBLIC	??$?0V?$tuple@ABI@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@AAV?$tuple@ABI@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z ; std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > ><std::tuple<unsigned int const &>,std::tuple<>,0>
PUBLIC	??$?0V?$tuple@ABQAE@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@QAEI@std@@QAE@AAV?$tuple@ABQAE@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z ; std::pair<unsigned char * const,unsigned int>::pair<unsigned char * const,unsigned int><std::tuple<unsigned char * const &>,std::tuple<>,0>
PUBLIC	??$?0V?$tuple@ABQAE@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@AAV?$tuple@ABQAE@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z ; std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > ><std::tuple<unsigned char * const &>,std::tuple<>,0>
PUBLIC	??$move@AAV?$tuple@ABI@std@@@std@@YA$$QAV?$tuple@ABI@0@AAV10@@Z ; std::move<std::tuple<unsigned int const &> &>
PUBLIC	??$get@$0A@ABI@std@@YAABI$$QAV?$tuple@ABI@0@@Z	; std::get<0,unsigned int const &>
PUBLIC	??$move@AAV?$tuple@ABQAE@std@@@std@@YA$$QAV?$tuple@ABQAE@0@AAV10@@Z ; std::move<std::tuple<unsigned char * const &> &>
PUBLIC	??$get@$0A@ABQAE@std@@YAABQAE$$QAV?$tuple@ABQAE@0@@Z ; std::get<0,unsigned char * const &>
PUBLIC	??_C@_1JA@MHADJNIL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0??_Allocate@std@@YAPAXII_N@Z@4JA	; `std::_Allocate'::`1'::__LINE__Var
PUBLIC	??_C@_0BE@LMNLACIC@_Ptr_container?5?$CB?$DN?50?$AA@ ; `string'
PUBLIC	??_C@_1DG@HGDKEBPG@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@	; `string'
PUBLIC	??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1BO@NKFMJPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_09GLJCAGLP@_Ptr?5?$CB?$DN?50?$AA@		; `string'
PUBLIC	??_C@_1CC@GKJLLHIM@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA ; `std::_Deallocate'::`1'::__LINE__Var
PUBLIC	??_C@_0BN@HMCJOMKN@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5_Sz?$AA@ ; `string'
PUBLIC	??_C@_1EI@MLOBABC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AA_?$AAS?$AAz?$AA?$CC?$AA?5?$AA?$CG@ ; `string'
PUBLIC	??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@ ; `string'
PUBLIC	??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@ ; `string'
PUBLIC	??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@ ; `string'
PUBLIC	??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@ ; `string'
PUBLIC	??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@ ; `string'
PUBLIC	??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ ; `string'
PUBLIC	??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@ ; `string'
PUBLIC	??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@ ; `string'
PUBLIC	??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@ ; `string'
PUBLIC	??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@ ; `string'
PUBLIC	??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1DO@CFEEPGGJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@ ; `string'
PUBLIC	??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@ ; `string'
PUBLIC	??_C@_1BKE@OPEFEOIF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1EI@HGIDLLCM@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa@ ; `string'
PUBLIC	??_C@_1BKA@BAPCOJKI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ ; `string'
PUBLIC	??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ ; `string'
PUBLIC	??_C@_1JK@PKCFAHNP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAu?$AAn?$AAs?$AAi?$AAg?$AAn?$AAe?$AAd?$AA?5?$AAc?$AAh?$AAa?$AAr?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@ ; `string'
PUBLIC	??_C@_1NO@HLNMIEPK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@ ; `string'
PUBLIC	??_C@_1NM@LMHMLLBJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1BCM@JEGMNCCB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1EG@EHJFMBHJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@ ; `string'
PUBLIC	??_C@_1BCM@DEJBDLOE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1EI@FHEHNNNM@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa@ ; `string'
PUBLIC	??_C@_1BCK@CDLOIDNF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1BKA@LAAPAAGN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1BJO@DGGMCDKA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1NG@JPNIJBOB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1EK@PPDBPCAN@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr@ ; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_C@_1BKE@EPLIKHEA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1BKC@EGJEPFJH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1JC@ELNBGKIG@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1CG@LEJCKCBB@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_C@_1IG@CDANFHMM@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1EM@MHOKKPFH@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAn?$AAs?$AAe?$AAr?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5@ ; `string'
PUBLIC	??_C@_1EG@OKCGOALM@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@ ; `string'
PUBLIC	??_C@_1BKE@LMIKBLIB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1BCM@MHKDIHCF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1BKA@EDDNLMKM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__invalid_parameter:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	??0ScopedUnprotect@GH3P@@QAE@PAXK@Z:PROC	; GH3P::ScopedUnprotect::ScopedUnprotect
EXTRN	??1ScopedUnprotect@GH3P@@QAE@XZ:PROC		; GH3P::ScopedUnprotect::~ScopedUnprotect
EXTRN	??0_Lockit@std@@QAE@H@Z:PROC			; std::_Lockit::_Lockit
EXTRN	??1_Lockit@std@@QAE@XZ:PROC			; std::_Lockit::~_Lockit
EXTRN	__CrtDbgReportW:PROC
EXTRN	?_Debug_message@std@@YAXPB_W0I@Z:PROC		; std::_Debug_message
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
?sOriginalCode@GH3P@@3V?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@A DB 0cH DUP (?) ; GH3P::sOriginalCode
?sPatchOwners@GH3P@@3V?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@A DB 0cH DUP (?) ; GH3P::sPatchOwners
?sOwnerPatches@GH3P@@3V?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@A DB 0cH DUP (?) ; GH3P::sOwnerPatches
_BSS	ENDS
CRT$XCU	SEGMENT
?sOriginalCode$initializer$@GH3P@@3P6AXXZA DD FLAT:??__EsOriginalCode@GH3P@@YAXXZ ; GH3P::sOriginalCode$initializer$
CRT$XCU	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BKA@EDDNLMKM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1BKA@EDDNLMKM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H
	DB	'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H, 'r'
	DB	00H, 'e', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'T', 00H, 'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p', 00H, 'a'
	DB	00H, 'i', 00H, 'r', 00H, '<', 00H, 'u', 00H, 'n', 00H, 's', 00H
	DB	'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'c'
	DB	00H, 'h', 00H, 'a', 00H, 'r', 00H, ' ', 00H, '*', 00H, ' ', 00H
	DB	'c', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, ',', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'u', 00H, 'n', 00H
	DB	's', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' '
	DB	00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, ',', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't'
	DB	00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<'
	DB	00H, 'u', 00H, 'n', 00H, 's', 00H, 'i', 00H, 'g', 00H, 'n', 00H
	DB	'e', 00H, 'd', 00H, ' ', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':'
	DB	00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, '-', 00H, '-', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BCM@MHKDIHCF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1BCM@MHKDIHCF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H
	DB	'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H, 'r'
	DB	00H, 'e', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'T', 00H, 'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p', 00H, 'a'
	DB	00H, 'i', 00H, 'r', 00H, '<', 00H, 'u', 00H, 'n', 00H, 's', 00H
	DB	'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'c'
	DB	00H, 'h', 00H, 'a', 00H, 'r', 00H, ' ', 00H, '*', 00H, ' ', 00H
	DB	'c', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, ',', 00H, 'u'
	DB	00H, 'n', 00H, 's', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H
	DB	'd', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 't', 00H, '>', 00H, ' '
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H
	DB	':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, '-', 00H, '-', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BKE@LMIKBLIB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1BKE@LMIKBLIB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H
	DB	'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H, 'r'
	DB	00H, 'e', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'T', 00H, 'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p', 00H, 'a'
	DB	00H, 'i', 00H, 'r', 00H, '<', 00H, 'u', 00H, 'n', 00H, 's', 00H
	DB	'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'i'
	DB	00H, 'n', 00H, 't', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'n', 00H
	DB	's', 00H, 't', 00H, ' ', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H
	DB	':', 00H, ':', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '<', 00H, 'u', 00H, 'n', 00H, 's', 00H, 'i', 00H
	DB	'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'c', 00H, 'h'
	DB	00H, 'a', 00H, 'r', 00H, ' ', 00H, '*', 00H, ',', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't'
	DB	00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<'
	DB	00H, 'u', 00H, 'n', 00H, 's', 00H, 'i', 00H, 'g', 00H, 'n', 00H
	DB	'e', 00H, 'd', 00H, ' ', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r'
	DB	00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>'
	DB	00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '-', 00H, '-'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@OKCGOALM@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@
CONST	SEGMENT
??_C@_1EG@OKCGOALM@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@ DB 'm'
	DB	00H, 'a', 00H, 'p', 00H, '/', 00H, 's', 00H, 'e', 00H, 't', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'd', 00H, 'e', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'b', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1EM@MHOKKPFH@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAn?$AAs?$AAe?$AAr?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5@
CONST	SEGMENT
??_C@_1EM@MHOKKPFH@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAn?$AAs?$AAe?$AAr?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5@ DB 'm'
	DB	00H, 'a', 00H, 'p', 00H, '/', 00H, 's', 00H, 'e', 00H, 't', 00H
	DB	' ', 00H, 'i', 00H, 'n', 00H, 's', 00H, 'e', 00H, 'r', 00H, 't'
	DB	00H, ' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't'
	DB	00H, 's', 00H, 'i', 00H, 'd', 00H, 'e', 00H, ' ', 00H, 'r', 00H
	DB	'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	'g', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1IG@CDANFHMM@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IG@CDANFHMM@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '4', 00H, '.', 00H, '0', 00H, '\', 00H, 'v'
	DB	00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'm', 00H, 'a', 00H, 'p'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@LEJCKCBB@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@LEJCKCBB@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 'r'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1JC@ELNBGKIG@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1JC@ELNBGKIG@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '4', 00H, '.', 00H, '0', 00H, '\', 00H, 'v'
	DB	00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H, 'g'
	DB	00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BKC@EGJEPFJH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1BKC@EGJEPFJH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H
	DB	'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H, 'r'
	DB	00H, 'e', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'T', 00H, 'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p', 00H, 'a'
	DB	00H, 'i', 00H, 'r', 00H, '<', 00H, 'u', 00H, 'n', 00H, 's', 00H
	DB	'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'i'
	DB	00H, 'n', 00H, 't', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'n', 00H
	DB	's', 00H, 't', 00H, ' ', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H
	DB	':', 00H, ':', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '<', 00H, 'u', 00H, 'n', 00H, 's', 00H, 'i', 00H
	DB	'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'c', 00H, 'h'
	DB	00H, 'a', 00H, 'r', 00H, ' ', 00H, '*', 00H, ',', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't'
	DB	00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<'
	DB	00H, 'u', 00H, 'n', 00H, 's', 00H, 'i', 00H, 'g', 00H, 'n', 00H
	DB	'e', 00H, 'd', 00H, ' ', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r'
	DB	00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>'
	DB	00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '*', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BKE@EPLIKHEA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1BKE@EPLIKHEA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H
	DB	'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H, 'r'
	DB	00H, 'e', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'T', 00H, 'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p', 00H, 'a'
	DB	00H, 'i', 00H, 'r', 00H, '<', 00H, 'u', 00H, 'n', 00H, 's', 00H
	DB	'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'i'
	DB	00H, 'n', 00H, 't', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'n', 00H
	DB	's', 00H, 't', 00H, ' ', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H
	DB	':', 00H, ':', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '<', 00H, 'u', 00H, 'n', 00H, 's', 00H, 'i', 00H
	DB	'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'c', 00H, 'h'
	DB	00H, 'a', 00H, 'r', 00H, ' ', 00H, '*', 00H, ',', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't'
	DB	00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<'
	DB	00H, 'u', 00H, 'n', 00H, 's', 00H, 'i', 00H, 'g', 00H, 'n', 00H
	DB	'e', 00H, 'd', 00H, ' ', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r'
	DB	00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>'
	DB	00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '+', 00H, '+'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@PPDBPCAN@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr@
CONST	SEGMENT
??_C@_1EK@PPDBPCAN@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr@ DB 'm'
	DB	00H, 'a', 00H, 'p', 00H, '/', 00H, 's', 00H, 'e', 00H, 't', 00H
	DB	' ', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 's', 00H, 'e', 00H, ' '
	DB	00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't', 00H, 's'
	DB	00H, 'i', 00H, 'd', 00H, 'e', 00H, ' ', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1NG@JPNIJBOB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1NG@JPNIJBOB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'u', 00H, 'n'
	DB	00H, 's', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, ' ', 00H, '*'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H
	DB	':', 00H, '_', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 't', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'b'
	DB	00H, 'l', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1BJO@DGGMCDKA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1BJO@DGGMCDKA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H
	DB	'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H, 'r'
	DB	00H, 'e', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'T', 00H, 'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p', 00H, 'a'
	DB	00H, 'i', 00H, 'r', 00H, '<', 00H, 'u', 00H, 'n', 00H, 's', 00H
	DB	'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'c'
	DB	00H, 'h', 00H, 'a', 00H, 'r', 00H, ' ', 00H, '*', 00H, ' ', 00H
	DB	'c', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, ',', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'u', 00H, 'n', 00H
	DB	's', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' '
	DB	00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, ',', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't'
	DB	00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<'
	DB	00H, 'u', 00H, 'n', 00H, 's', 00H, 'i', 00H, 'g', 00H, 'n', 00H
	DB	'e', 00H, 'd', 00H, ' ', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':'
	DB	00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, '*', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BKA@LAAPAAGN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1BKA@LAAPAAGN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H
	DB	'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H, 'r'
	DB	00H, 'e', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'T', 00H, 'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p', 00H, 'a'
	DB	00H, 'i', 00H, 'r', 00H, '<', 00H, 'u', 00H, 'n', 00H, 's', 00H
	DB	'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'c'
	DB	00H, 'h', 00H, 'a', 00H, 'r', 00H, ' ', 00H, '*', 00H, ' ', 00H
	DB	'c', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, ',', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'u', 00H, 'n', 00H
	DB	's', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' '
	DB	00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, ',', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't'
	DB	00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<'
	DB	00H, 'u', 00H, 'n', 00H, 's', 00H, 'i', 00H, 'g', 00H, 'n', 00H
	DB	'e', 00H, 'd', 00H, ' ', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':'
	DB	00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, '+', 00H, '+', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BCK@CDLOIDNF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1BCK@CDLOIDNF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H
	DB	'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H, 'r'
	DB	00H, 'e', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'T', 00H, 'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p', 00H, 'a'
	DB	00H, 'i', 00H, 'r', 00H, '<', 00H, 'u', 00H, 'n', 00H, 's', 00H
	DB	'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'c'
	DB	00H, 'h', 00H, 'a', 00H, 'r', 00H, ' ', 00H, '*', 00H, ' ', 00H
	DB	'c', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, ',', 00H, 'u'
	DB	00H, 'n', 00H, 's', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H
	DB	'd', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 't', 00H, '>', 00H, ' '
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H
	DB	':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, '*', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EI@FHEHNNNM@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa@
CONST	SEGMENT
??_C@_1EI@FHEHNNNM@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa@ DB 'm'
	DB	00H, 'a', 00H, 'p', 00H, '/', 00H, 's', 00H, 'e', 00H, 't', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e'
	DB	00H, 'r', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'a', 00H, 'b', 00H
	DB	'l', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BCM@DEJBDLOE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1BCM@DEJBDLOE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H
	DB	'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H, 'r'
	DB	00H, 'e', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'T', 00H, 'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p', 00H, 'a'
	DB	00H, 'i', 00H, 'r', 00H, '<', 00H, 'u', 00H, 'n', 00H, 's', 00H
	DB	'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'c'
	DB	00H, 'h', 00H, 'a', 00H, 'r', 00H, ' ', 00H, '*', 00H, ' ', 00H
	DB	'c', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, ',', 00H, 'u'
	DB	00H, 'n', 00H, 's', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H
	DB	'd', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 't', 00H, '>', 00H, ' '
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H
	DB	':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, '+', 00H, '+', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@EHJFMBHJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@
CONST	SEGMENT
??_C@_1EG@EHJFMBHJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@ DB 'm'
	DB	00H, 'a', 00H, 'p', 00H, '/', 00H, 's', 00H, 'e', 00H, 't', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'b', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BCM@JEGMNCCB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1BCM@JEGMNCCB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H
	DB	'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H, 'r'
	DB	00H, 'e', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'T', 00H, 'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p', 00H, 'a'
	DB	00H, 'i', 00H, 'r', 00H, '<', 00H, 'u', 00H, 'n', 00H, 's', 00H
	DB	'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'c'
	DB	00H, 'h', 00H, 'a', 00H, 'r', 00H, ' ', 00H, '*', 00H, ' ', 00H
	DB	'c', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, ',', 00H, 'u'
	DB	00H, 'n', 00H, 's', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H
	DB	'd', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 't', 00H, '>', 00H, ' '
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H
	DB	':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, '=', 00H, '=', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1NM@LMHMLLBJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1NM@LMHMLLBJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'u', 00H, 'n'
	DB	00H, 's', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, ' ', 00H, '*'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H
	DB	':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, '*', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
CONST	SEGMENT
??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, 'n', 00H, 'c', 00H, 'a', 00H, 'b', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NO@HLNMIEPK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1NO@HLNMIEPK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'u', 00H, 'n'
	DB	00H, 's', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, ' ', 00H, '*'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H
	DB	':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, '+', 00H, '+', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@
CONST	SEGMENT
??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'm', 00H, 'e'
	DB	00H, 'n', 00H, 't', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'o', 00H, 'u', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1JK@PKCFAHNP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAu?$AAn?$AAs?$AAi?$AAg?$AAn?$AAe?$AAd?$AA?5?$AAc?$AAh?$AAa?$AAr?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1JK@PKCFAHNP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAu?$AAn?$AAs?$AAi?$AAg?$AAn?$AAe?$AAd?$AA?5?$AAc?$AAh?$AAa?$AAr?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'u', 00H, 'n'
	DB	00H, 's', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, ',', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l'
	DB	00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'<', 00H, 'u', 00H, 'n', 00H, 's', 00H, 'i', 00H, 'g', 00H, 'n'
	DB	00H, 'e', 00H, 'd', 00H, ' ', 00H, 'c', 00H, 'h', 00H, 'a', 00H
	DB	'r', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o'
	DB	00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, ' ', 00H, '[', 00H, ']', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
CONST	SEGMENT
??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'O', 00H, 'u', 00H, 't'
	DB	00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'R', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
CONST	SEGMENT
??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ DB 'Stand'
	DB	'ard C++ Libraries Out of Range', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	's', 00H, 'u', 00H, 'b', 00H, 's', 00H, 'c', 00H, 'r', 00H, 'i'
	DB	00H, 'p', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't', 00H
	DB	' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n'
	DB	00H, 'g', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1BKA@BAPCOJKI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1BKA@BAPCOJKI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H
	DB	'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H, 'r'
	DB	00H, 'e', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'T', 00H, 'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p', 00H, 'a'
	DB	00H, 'i', 00H, 'r', 00H, '<', 00H, 'u', 00H, 'n', 00H, 's', 00H
	DB	'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'c'
	DB	00H, 'h', 00H, 'a', 00H, 'r', 00H, ' ', 00H, '*', 00H, ' ', 00H
	DB	'c', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, ',', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'u', 00H, 'n', 00H
	DB	's', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' '
	DB	00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, ',', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't'
	DB	00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<'
	DB	00H, 'u', 00H, 'n', 00H, 's', 00H, 'i', 00H, 'g', 00H, 'n', 00H
	DB	'e', 00H, 'd', 00H, ' ', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':'
	DB	00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, '=', 00H, '=', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EI@HGIDLLCM@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa@
CONST	SEGMENT
??_C@_1EI@HGIDLLCM@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 's', 00H, 'e', 00H, ' ', 00H, 'i'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't', 00H, 's', 00H, 'i'
	DB	00H, 'd', 00H, 'e', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	'g', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '4', 00H, '.', 00H, '0', 00H, '\', 00H, 'v'
	DB	00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BKE@OPEFEOIF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1BKE@OPEFEOIF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H
	DB	'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H, 'r'
	DB	00H, 'e', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'T', 00H, 'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p', 00H, 'a'
	DB	00H, 'i', 00H, 'r', 00H, '<', 00H, 'u', 00H, 'n', 00H, 's', 00H
	DB	'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'i'
	DB	00H, 'n', 00H, 't', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'n', 00H
	DB	's', 00H, 't', 00H, ' ', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H
	DB	':', 00H, ':', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '<', 00H, 'u', 00H, 'n', 00H, 's', 00H, 'i', 00H
	DB	'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'c', 00H, 'h'
	DB	00H, 'a', 00H, 'r', 00H, ' ', 00H, '*', 00H, ',', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't'
	DB	00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<'
	DB	00H, 'u', 00H, 'n', 00H, 's', 00H, 'i', 00H, 'g', 00H, 'n', 00H
	DB	'e', 00H, 'd', 00H, ' ', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r'
	DB	00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>'
	DB	00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '=', 00H, '='
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
CONST	SEGMENT
??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'I', 00H, 'n', 00H, 'v'
	DB	00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 'A', 00H
	DB	'r', 00H, 'g', 00H, 'u', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, '"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
CONST	SEGMENT
??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@ DB 'Standa'
	DB	'rd C++ Libraries Invalid Argument', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DO@CFEEPGGJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DO@CFEEPGGJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ DB 'm'
	DB	00H, 'a', 00H, 'p', 00H, '/', 00H, 's', 00H, 'e', 00H, 't', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'i'
	DB	00H, 'b', 00H, 'l', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '4', 00H, '.', 00H, '0', 00H, '\', 00H, 'v'
	DB	00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 't', 00H, 'r'
	DB	00H, 'e', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@
CONST	SEGMENT
??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@ DB '"'
	DB	00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, '_', 00H, 'u', 00H
	DB	's', 00H, 'e', 00H, 'r', 00H, ' ', 00H, '-', 00H, ' ', 00H, '_'
	DB	00H, 'P', 00H, 't', 00H, 'r', 00H, '_', 00H, 'c', 00H, 'o', 00H
	DB	'n', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'e', 00H, 'r'
	DB	00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, '_', 00H, 'N', 00H
	DB	'O', 00H, 'N', 00H, '_', 00H, 'U', 00H, 'S', 00H, 'E', 00H, 'R'
	DB	00H, '_', 00H, 'S', 00H, 'I', 00H, 'Z', 00H, 'E', 00H, '"', 00H
	DB	' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@
CONST	SEGMENT
??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@ DB '_Ptr_u'
	DB	'ser - _Ptr_container <= _NON_USER_SIZE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@
CONST	SEGMENT
??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@ DB '"'
	DB	00H, '2', 00H, ' ', 00H, '*', 00H, ' ', 00H, 's', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, 'o', 00H, 'f', 00H, '(', 00H, 'v', 00H, 'o'
	DB	00H, 'i', 00H, 'd', 00H, ' ', 00H, '*', 00H, ')', 00H, ' ', 00H
	DB	'<', 00H, '=', 00H, ' ', 00H, '_', 00H, 'P', 00H, 't', 00H, 'r'
	DB	00H, '_', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, ' ', 00H
	DB	'-', 00H, ' ', 00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, '_'
	DB	00H, 'c', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'i', 00H
	DB	'n', 00H, 'e', 00H, 'r', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@
CONST	SEGMENT
??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@ DB '2'
	DB	' * sizeof(void *) <= _Ptr_user - _Ptr_container', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
CONST	SEGMENT
??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ DB '"'
	DB	00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, '_', 00H, 'c', 00H
	DB	'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'e'
	DB	00H, 'r', 00H, ' ', 00H, '<', 00H, ' ', 00H, '_', 00H, 'P', 00H
	DB	't', 00H, 'r', 00H, '_', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r'
	DB	00H, '"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@
CONST	SEGMENT
??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@ DB '_Ptr_containe'
	DB	'r < _Ptr_user', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@
CONST	SEGMENT
??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@ DB '"'
	DB	00H, 'r', 00H, 'e', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'p', 00H, 'r', 00H, 'e', 00H, 't', 00H, '_', 00H, 'c'
	DB	00H, 'a', 00H, 's', 00H, 't', 00H, '<', 00H, 'u', 00H, 'i', 00H
	DB	'n', 00H, 't', 00H, 'p', 00H, 't', 00H, 'r', 00H, '_', 00H, 't'
	DB	00H, ' ', 00H, '*', 00H, '>', 00H, '(', 00H, '_', 00H, 'P', 00H
	DB	't', 00H, 'r', 00H, '_', 00H, 'p', 00H, 't', 00H, 'r', 00H, ')'
	DB	00H, '[', 00H, '-', 00H, '1', 00H, ']', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, '_', 00H, 'B', 00H, 'I', 00H, 'G', 00H, '_'
	DB	00H, 'A', 00H, 'L', 00H, 'L', 00H, 'O', 00H, 'C', 00H, 'A', 00H
	DB	'T', 00H, 'I', 00H, 'O', 00H, 'N', 00H, '_', 00H, 'S', 00H, 'E'
	DB	00H, 'N', 00H, 'T', 00H, 'I', 00H, 'N', 00H, 'E', 00H, 'L', 00H
	DB	'"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@
CONST	SEGMENT
??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@ DB 'rei'
	DB	'nterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] == _BIG_ALLOCATION_S'
	DB	'ENTINEL', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@
CONST	SEGMENT
??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@ DB '"'
	DB	00H, '(', 00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, '_', 00H
	DB	'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, ' ', 00H, '&', 00H, ' '
	DB	00H, '(', 00H, '_', 00H, 'B', 00H, 'I', 00H, 'G', 00H, '_', 00H
	DB	'A', 00H, 'L', 00H, 'L', 00H, 'O', 00H, 'C', 00H, 'A', 00H, 'T'
	DB	00H, 'I', 00H, 'O', 00H, 'N', 00H, '_', 00H, 'A', 00H, 'L', 00H
	DB	'I', 00H, 'G', 00H, 'N', 00H, 'M', 00H, 'E', 00H, 'N', 00H, 'T'
	DB	00H, ' ', 00H, '-', 00H, ' ', 00H, '1', 00H, ')', 00H, ')', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, '"', 00H, ' '
	DB	00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@
CONST	SEGMENT
??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@ DB '(_Ptr'
	DB	'_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'D', 00H
	DB	'e', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a'
	DB	00H, 't', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1EI@MLOBABC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AA_?$AAS?$AAz?$AA?$CC?$AA?5?$AA?$CG@
CONST	SEGMENT
??_C@_1EI@MLOBABC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AA_?$AAS?$AAz?$AA?$CC?$AA?5?$AA?$CG@ DB '"'
	DB	00H, '_', 00H, 'C', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H
	DB	' ', 00H, '<', 00H, '=', 00H, ' ', 00H, '(', 00H, 's', 00H, 'i'
	DB	00H, 'z', 00H, 'e', 00H, '_', 00H, 't', 00H, ')', 00H, '(', 00H
	DB	'-', 00H, '1', 00H, ')', 00H, ' ', 00H, '/', 00H, ' ', 00H, '_'
	DB	00H, 'S', 00H, 'z', 00H, '"', 00H, ' ', 00H, '&', 00H, '&', 00H
	DB	' ', 00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@HMCJOMKN@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5_Sz?$AA@
CONST	SEGMENT
??_C@_0BN@HMCJOMKN@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5_Sz?$AA@ DB '_'
	DB	'Count <= (size_t)(-1) / _Sz', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA DD 05cH ; `std::_Deallocate'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1CC@GKJLLHIM@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1CC@GKJLLHIM@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@ DB '"'
	DB	00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, ' ', 00H, '!', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09GLJCAGLP@_Ptr?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_09GLJCAGLP@_Ptr?5?$CB?$DN?50?$AA@ DB '_Ptr != 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@NKFMJPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@NKFMJPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '4', 00H, '.', 00H, '0', 00H, '\', 00H, 'v'
	DB	00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H, 'e'
	DB	00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@ DB '%', 00H, 'l', 00H, 's', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@HGDKEBPG@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1DG@HGDKEBPG@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@ DB '"'
	DB	00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, '_', 00H, 'c', 00H
	DB	'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'e'
	DB	00H, 'r', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H
	DB	'"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LMNLACIC@_Ptr_container?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0BE@LMNLACIC@_Ptr_container?5?$CB?$DN?50?$AA@ DB '_Ptr_container !='
	DB	' 0', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Allocate@std@@YAPAXII_N@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Allocate@std@@YAPAXII_N@Z@4JA DD 030H	; `std::_Allocate'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
CONST	SEGMENT
??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ DB 'I'
	DB	00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H, 'O', 00H
	DB	'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T', 00H, ' '
	DB	00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H, 'P', 00H
	DB	'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1JA@MHADJNIL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1JA@MHADJNIL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '4', 00H, '.', 00H, '0', 00H, '\', 00H, 'v'
	DB	00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'u', 00H, 't'
	DB	00H, 'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z$0
__ehfuncinfo$??$construct@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@U?$pair@QAEI@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEI@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@U?$pair@QAEI@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEI@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z$0
__ehfuncinfo$??$construct@U?$pair@QAEI@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEI@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@U?$pair@QAEI@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEI@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z$0
__ehfuncinfo$??$construct@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Insert_nohint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$8 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Insert_nohint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$0
__tryblocktable$??$_Insert_nohint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z DD 00H
	DD	05H
	DD	06H
	DD	01H
	DD	FLAT:__catchsym$??$_Insert_nohint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$8
__ehfuncinfo$??$_Insert_nohint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$??$_Insert_nohint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Insert_nohint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??$_Insert_nohint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Insert_nohint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Insert_nohint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Insert_nohint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$5
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Insert_nohint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$6
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Insert_nohint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$7
	DD	0ffffffffH
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Insert_nohint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$8 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Insert_nohint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$0
__tryblocktable$??$_Insert_nohint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z DD 00H
	DD	05H
	DD	06H
	DD	01H
	DD	FLAT:__catchsym$??$_Insert_nohint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$8
__ehfuncinfo$??$_Insert_nohint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$??$_Insert_nohint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Insert_nohint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??$_Insert_nohint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Insert_nohint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Insert_nohint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Insert_nohint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$5
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Insert_nohint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$6
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Insert_nohint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$7
	DD	0ffffffffH
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Insert_nohint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$8 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Insert_nohint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$0
__tryblocktable$??$_Insert_nohint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z DD 00H
	DD	05H
	DD	06H
	DD	01H
	DD	FLAT:__catchsym$??$_Insert_nohint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$8
__ehfuncinfo$??$_Insert_nohint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$??$_Insert_nohint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Insert_nohint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??$_Insert_nohint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Insert_nohint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Insert_nohint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Insert_nohint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$5
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Insert_nohint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$6
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Insert_nohint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$7
	DD	0ffffffffH
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$12 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$0
__tryblocktable$??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z DD 02H
	DD	08H
	DD	09H
	DD	01H
	DD	FLAT:__catchsym$??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$12
__ehfuncinfo$??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z DD 019930522H
	DD	0bH
	DD	FLAT:__unwindtable$??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$3
	DD	01H
	DD	00H
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$5
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$6
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$7
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$8
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$9
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$10
	DD	01H
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$11
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z$0
__unwindtable$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z$2
__ehfuncinfo$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$12 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$0
__tryblocktable$??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z DD 02H
	DD	08H
	DD	09H
	DD	01H
	DD	FLAT:__catchsym$??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$12
__ehfuncinfo$??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z DD 019930522H
	DD	0bH
	DD	FLAT:__unwindtable$??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$3
	DD	01H
	DD	00H
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$5
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$6
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$7
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$8
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$9
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$10
	DD	01H
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$11
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z$0
__unwindtable$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z$2
__ehfuncinfo$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$12 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$0
__tryblocktable$??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z DD 02H
	DD	08H
	DD	09H
	DD	01H
	DD	FLAT:__catchsym$??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$12
__ehfuncinfo$??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z DD 019930522H
	DD	0bH
	DD	FLAT:__unwindtable$??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$3
	DD	01H
	DD	00H
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$5
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$6
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$7
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$8
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$9
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$10
	DD	01H
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$11
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z$0
__unwindtable$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z$2
__ehfuncinfo$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@YAPBEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@YAPBEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@0@@Z$0
__ehfuncinfo$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@YAPBEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@YAPBEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z$0
__ehfuncinfo$??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z$0
__ehfuncinfo$??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$forward_as_tuple@ABQAE@std@@YA?AV?$tuple@ABQAE@0@ABQAE@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z$0
__ehfuncinfo$??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$forward_as_tuple@ABI@std@@YA?AV?$tuple@ABI@0@ABI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Debug_range2@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Debug_range2@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Debug_range2@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z$1
__ehfuncinfo$??$_Debug_range2@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Debug_range2@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@0@Z$0
__ehfuncinfo$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@0@Z$0
__ehfuncinfo$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@0@Z$0
__ehfuncinfo$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@0@Z$0
__ehfuncinfo$??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@0@Z$0
__ehfuncinfo$??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@0@Z$0
__ehfuncinfo$??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Pocma@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@0U?$integral_constant@_N$00@0@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@PAEV?$allocator@E@2@@std@@YAPAEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@0@0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@PAEV?$allocator@E@2@@std@@YAPAEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@0@0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@PAEV?$allocator@E@2@@std@@YAPAEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@0@0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z$1
__ehfuncinfo$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@PAEV?$allocator@E@2@@std@@YAPAEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@0@0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@PAEV?$allocator@E@2@@std@@YAPAEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@0@0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Try_emplace@ABQAE$$V@?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABQAE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Try_emplace@ABQAE$$V@?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABQAE@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Try_emplace@ABQAE$$V@?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABQAE@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Try_emplace@ABQAE$$V@?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABQAE@Z$3
__ehfuncinfo$??$_Try_emplace@ABQAE$$V@?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABQAE@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Try_emplace@ABQAE$$V@?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABQAE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z$1
__ehfuncinfo$??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Try_emplace@ABQAE$$V@?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@ABQAE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Try_emplace@ABQAE$$V@?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@ABQAE@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Try_emplace@ABQAE$$V@?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@ABQAE@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Try_emplace@ABQAE$$V@?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@ABQAE@Z$3
__ehfuncinfo$??$_Try_emplace@ABQAE$$V@?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@ABQAE@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Try_emplace@ABQAE$$V@?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@ABQAE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z$1
__ehfuncinfo$??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Try_emplace@ABI$$V@?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Try_emplace@ABI$$V@?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Try_emplace@ABI$$V@?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABI@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Try_emplace@ABI$$V@?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABI@Z$3
__ehfuncinfo$??$_Try_emplace@ABI$$V@?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABI@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Try_emplace@ABI$$V@?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z$1
__ehfuncinfo$??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@YAPAPAEV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@YAPAPAEV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@@Z$0
__ehfuncinfo$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@YAPAPAEV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@YAPAPAEV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Debug_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@0PB_WI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Debug_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@0PB_WI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Debug_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@0PB_WI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Debug_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@0PB_WI@Z$2
__ehfuncinfo$??$_Debug_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@0PB_WI@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Debug_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@0PB_WI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z$1
__ehfuncinfo$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z$2
__ehfuncinfo$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z$1
__ehfuncinfo$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z$2
__ehfuncinfo$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Eqrange@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Eqrange@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Eqrange@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABI@Z$1
__ehfuncinfo$??$_Eqrange@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Eqrange@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Eqrange@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Eqrange@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Eqrange@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Eqrange@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABI@Z$2
__ehfuncinfo$??$_Eqrange@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABI@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Eqrange@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@@?$vector@EV?$allocator@E@std@@@std@@IAEPAEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@1@0PAE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@@?$vector@EV?$allocator@E@std@@@std@@IAEPAEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@1@0PAE@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@@?$vector@EV?$allocator@E@std@@@std@@IAEPAEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@1@0PAE@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@@?$vector@EV?$allocator@E@std@@@std@@IAEPAEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@1@0PAE@Z$2
__ehfuncinfo$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@@?$vector@EV?$allocator@E@std@@@std@@IAEPAEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@1@0PAE@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@@?$vector@EV?$allocator@E@std@@@std@@IAEPAEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@1@0PAE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@PAEPBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@PAEPBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@PAEPBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@PAEPBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0U?$_Wrap_alloc@V?$allocator@E@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@E@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U?$_Wrap_alloc@V?$allocator@E@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@E@std@@@1@@Z$0
__ehfuncinfo$??$?0U?$_Wrap_alloc@V?$allocator@E@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@E@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0U?$_Wrap_alloc@V?$allocator@E@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@E@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0@Z$2
__ehfuncinfo$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@0@Z$2
__ehfuncinfo$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@0@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@0@Z$2
__ehfuncinfo$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@0@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$remove@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@PAE@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@V10@0ABQAE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$remove@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@PAE@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@V10@0ABQAE@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$remove@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@PAE@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@V10@0ABQAE@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$remove@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@PAE@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@V10@0ABQAE@Z$2
__ehfuncinfo$??$remove@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@PAE@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@V10@0ABQAE@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$remove@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@PAE@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@V10@0ABQAE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@PAPAEPBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@PAPAEPBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@PAPAEPBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@PAPAEPBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE?AV01@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE?AV01@H@Z$0
__ehfuncinfo$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE?AV01@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE?AV01@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@PAEV?$allocator@PAE@std@@@std@@IBEXPAPAE0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@PAEV?$allocator@PAE@std@@@std@@IBEXPAPAE0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@PAEV?$allocator@PAE@std@@@std@@IBEXPAPAE0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@PAEV?$allocator@PAE@std@@@std@@IBEXPAPAE0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?clear@?$vector@PAEV?$allocator@PAE@std@@@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?erase@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@0@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?erase@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?erase@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?erase@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?erase@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@0@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?erase@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@0@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?erase@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@0@Z$5
	DD	04H
	DD	FLAT:__unwindfunclet$?erase@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@0@Z$7
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Make_iter@?$vector@PAEV?$allocator@PAE@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Make_iter@?$vector@PAEV?$allocator@PAE@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@@Z$0
__ehfuncinfo$?_Make_iter@?$vector@PAEV?$allocator@PAE@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Make_iter@?$vector@PAEV?$allocator@PAE@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?end@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?begin@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$vector@PAEV?$allocator@PAE@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??4?$vector@PAEV?$allocator@PAE@std@@@std@@QAEAAV01@$$QAV01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$vector@PAEV?$allocator@PAE@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z$0
__ehfuncinfo$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?clear@?$vector@EV?$allocator@E@std@@@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?end@?$vector@EV?$allocator@E@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?begin@?$vector@EV?$allocator@E@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??4?$vector@EV?$allocator@E@std@@@std@@QAEAAV01@ABV01@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??4?$vector@EV?$allocator@E@std@@@std@@QAEAAV01@ABV01@@Z$0
__unwindtable$??4?$vector@EV?$allocator@E@std@@@std@@QAEAAV01@ABV01@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??4?$vector@EV?$allocator@E@std@@@std@@QAEAAV01@ABV01@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??4?$vector@EV?$allocator@E@std@@@std@@QAEAAV01@ABV01@@Z$2
__ehfuncinfo$??4?$vector@EV?$allocator@E@std@@@std@@QAEAAV01@ABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??4?$vector@EV?$allocator@E@std@@@std@@QAEAAV01@ABV01@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??4?$vector@EV?$allocator@E@std@@@std@@QAEAAV01@ABV01@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$vector@EV?$allocator@E@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??0?$vector@EV?$allocator@E@std@@@std@@QAE@ABV01@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??0?$vector@EV?$allocator@E@std@@@std@@QAE@ABV01@@Z$0
__tryblocktable$??0?$vector@EV?$allocator@E@std@@@std@@QAE@ABV01@@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??0?$vector@EV?$allocator@E@std@@@std@@QAE@ABV01@@Z$5
__unwindtable$??0?$vector@EV?$allocator@E@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@EV?$allocator@E@std@@@std@@QAE@ABV01@@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??0?$vector@EV?$allocator@E@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$vector@EV?$allocator@E@std@@@std@@QAE@ABV01@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??0?$vector@EV?$allocator@E@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??0?$vector@EV?$allocator@E@std@@@std@@QAE@I@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??0?$vector@EV?$allocator@E@std@@@std@@QAE@I@Z$0
__tryblocktable$??0?$vector@EV?$allocator@E@std@@@std@@QAE@I@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??0?$vector@EV?$allocator@E@std@@@std@@QAE@I@Z$3
__unwindtable$??0?$vector@EV?$allocator@E@std@@@std@@QAE@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@EV?$allocator@E@std@@@std@@QAE@I@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??0?$vector@EV?$allocator@E@std@@@std@@QAE@I@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$vector@EV?$allocator@E@std@@@std@@QAE@I@Z
	DD	01H
	DD	FLAT:__tryblocktable$??0?$vector@EV?$allocator@E@std@@@std@@QAE@I@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$vector@EV?$allocator@E@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z$0
__ehfuncinfo$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??A?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAEAAV?$vector@PAEV?$allocator@PAE@std@@@1@ABI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??A?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAEAAV?$vector@PAEV?$allocator@PAE@std@@@1@ABI@Z$0
__ehfuncinfo$??A?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAEAAV?$vector@PAEV?$allocator@PAE@std@@@1@ABI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??A?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAEAAV?$vector@PAEV?$allocator@PAE@std@@@1@ABI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Tidy@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ$2
	DD	00H
	DD	FLAT:__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ$2
__ehfuncinfo$?_Tidy@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Tidy@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z$0
__ehfuncinfo$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?find@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@ABI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@ABI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@ABI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@ABI@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@ABI@Z$3
__ehfuncinfo$?find@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@ABI@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?find@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@ABI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?clear@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEIABI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEIABI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEIABI@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEIABI@Z$3
__ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEIABI@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEIABI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@0@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@0@Z$3
__ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@0@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@@Z$0
__ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?end@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?begin@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ$0
__unwindtable$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ$2
__ehfuncinfo$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ$0
__unwindtable$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ$2
__ehfuncinfo$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ$0
__unwindtable$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ$2
__ehfuncinfo$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ
	DD	01H
	DD	FLAT:__tryblocktable$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@@Z$0
__ehfuncinfo$??0?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??A?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAEAAIABQAE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??A?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAEAAIABQAE@Z$0
__ehfuncinfo$??A?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAEAAIABQAE@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??A?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAEAAIABQAE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Tidy@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXXZ$2
	DD	00H
	DD	FLAT:__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXXZ$2
__ehfuncinfo$?_Tidy@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXXZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Tidy@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z$0
__ehfuncinfo$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?clear@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEIABQAE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEIABQAE@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEIABQAE@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEIABQAE@Z$3
__ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEIABQAE@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEIABQAE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@0@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@0@Z$3
__ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@0@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@@Z$0
__ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?end@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?begin@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ$0
__unwindtable$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ$2
__ehfuncinfo$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ$0
__unwindtable$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ$2
__ehfuncinfo$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ$0
__unwindtable$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ$2
__ehfuncinfo$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ
	DD	01H
	DD	FLAT:__tryblocktable$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z$0
__ehfuncinfo$??0?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??A?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAEAAV?$vector@EV?$allocator@E@std@@@1@ABQAE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??A?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAEAAV?$vector@EV?$allocator@E@std@@@1@ABQAE@Z$0
__ehfuncinfo$??A?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAEAAV?$vector@EV?$allocator@E@std@@@1@ABQAE@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??A?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAEAAV?$vector@EV?$allocator@E@std@@@1@ABQAE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Tidy@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ$2
	DD	00H
	DD	FLAT:__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ$2
__ehfuncinfo$?_Tidy@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Tidy@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z$0
__ehfuncinfo$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?find@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@ABQAE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@ABQAE@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@ABQAE@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@ABQAE@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@ABQAE@Z$3
__ehfuncinfo$?find@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@ABQAE@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?find@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@ABQAE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?clear@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEIABQAE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEIABQAE@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEIABQAE@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEIABQAE@Z$3
__ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEIABQAE@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEIABQAE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@0@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@0@Z$3
__ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@0@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@Z$0
__ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?end@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?begin@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ$0
__unwindtable$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ$2
__ehfuncinfo$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ$0
__unwindtable$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ$2
__ehfuncinfo$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ$0
__unwindtable$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ$2
__ehfuncinfo$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ
	DD	01H
	DD	FLAT:__tryblocktable$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z$0
__ehfuncinfo$??0?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1
__ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z$0
__ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1_Container_base12@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?RemovePatches@PatchManager@GH3P@@SA_NI@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?RemovePatches@PatchManager@GH3P@@SA_NI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?RemovePatches@PatchManager@GH3P@@SA_NI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RemovePatches@PatchManager@GH3P@@SA_NI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?RemovePatches@PatchManager@GH3P@@SA_NI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?RemovePatches@PatchManager@GH3P@@SA_NI@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?RemovePatches@PatchManager@GH3P@@SA_NI@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?RemovePatches@PatchManager@GH3P@@SA_NI@Z$4
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?RemovePatch@PatchManager@GH3P@@SA_NPAE@Z DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$?RemovePatch@PatchManager@GH3P@@SA_NPAE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?RemovePatch@PatchManager@GH3P@@SA_NPAE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RemovePatch@PatchManager@GH3P@@SA_NPAE@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?RemovePatch@PatchManager@GH3P@@SA_NPAE@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?RemovePatch@PatchManager@GH3P@@SA_NPAE@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?RemovePatch@PatchManager@GH3P@@SA_NPAE@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?RemovePatch@PatchManager@GH3P@@SA_NPAE@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?RemovePatch@PatchManager@GH3P@@SA_NPAE@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?RemovePatch@PatchManager@GH3P@@SA_NPAE@Z$8
	DD	04H
	DD	FLAT:__unwindfunclet$?RemovePatch@PatchManager@GH3P@@SA_NPAE@Z$8
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?ApplyPatch@PatchManager@GH3P@@SA_NPBEPAEII@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?ApplyPatch@PatchManager@GH3P@@SA_NPBEPAEII@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?ApplyPatch@PatchManager@GH3P@@SA_NPBEPAEII@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ApplyPatch@PatchManager@GH3P@@SA_NPBEPAEII@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?ApplyPatch@PatchManager@GH3P@@SA_NPBEPAEII@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?ApplyPatch@PatchManager@GH3P@@SA_NPBEPAEII@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?ApplyPatch@PatchManager@GH3P@@SA_NPBEPAEII@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?ApplyPatch@PatchManager@GH3P@@SA_NPBEPAEII@Z$4
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?FindPatch@PatchManager@GH3P@@SAXPBEIAAPAEAAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FindPatch@PatchManager@GH3P@@SAXPBEIAAPAEAAI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?FindPatch@PatchManager@GH3P@@SAXPBEIAAPAEAAI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?FindPatch@PatchManager@GH3P@@SAXPBEIAAPAEAAI@Z$2
__ehfuncinfo$?FindPatch@PatchManager@GH3P@@SAXPBEIAAPAEAAI@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?FindPatch@PatchManager@GH3P@@SAXPBEIAAPAEAAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
CRT$XCU	SEGMENT
?sPatchOwners$initializer$@GH3P@@3P6AXXZA DD FLAT:??__EsPatchOwners@GH3P@@YAXXZ ; GH3P::sPatchOwners$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?sOwnerPatches$initializer$@GH3P@@3P6AXXZA DD FLAT:??__EsOwnerPatches@GH3P@@YAXXZ ; GH3P::sOwnerPatches$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$get@$0A@ABQAE@std@@YAABQAE$$QAV?$tuple@ABQAE@0@@Z
_TEXT	SEGMENT
__Tuple$ = 8						; size = 4
??$get@$0A@ABQAE@std@@YAABQAE$$QAV?$tuple@ABQAE@0@@Z PROC ; std::get<0,unsigned char * const &>, COMDAT

; 903  : 	{	// get rvalue reference to _Index element of tuple

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 904  : 	typedef typename tuple_element<_Index, tuple<_Types...> >::_Ttype
; 905  : 		_Ttype;
; 906  : 	typedef typename tuple_element<_Index, tuple<_Types...> >::type&&
; 907  : 		_RRtype;
; 908  : 	return (_STD forward<_RRtype>(((_Ttype&)_Tuple)._Myfirst._Val));

	mov	eax, DWORD PTR __Tuple$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??$forward@ABQAE@std@@YAABQAEABQAE@Z	; std::forward<unsigned char * const &>
	add	esp, 4

; 909  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$get@$0A@ABQAE@std@@YAABQAE$$QAV?$tuple@ABQAE@0@@Z ENDP ; std::get<0,unsigned char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AAV?$tuple@ABQAE@std@@@std@@YA$$QAV?$tuple@ABQAE@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$tuple@ABQAE@std@@@std@@YA$$QAV?$tuple@ABQAE@0@AAV10@@Z PROC ; std::move<std::tuple<unsigned char * const &> &>, COMDAT

; 1291 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1293 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAV?$tuple@ABQAE@std@@@std@@YA$$QAV?$tuple@ABQAE@0@AAV10@@Z ENDP ; std::move<std::tuple<unsigned char * const &> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$get@$0A@ABI@std@@YAABI$$QAV?$tuple@ABI@0@@Z
_TEXT	SEGMENT
__Tuple$ = 8						; size = 4
??$get@$0A@ABI@std@@YAABI$$QAV?$tuple@ABI@0@@Z PROC	; std::get<0,unsigned int const &>, COMDAT

; 903  : 	{	// get rvalue reference to _Index element of tuple

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 904  : 	typedef typename tuple_element<_Index, tuple<_Types...> >::_Ttype
; 905  : 		_Ttype;
; 906  : 	typedef typename tuple_element<_Index, tuple<_Types...> >::type&&
; 907  : 		_RRtype;
; 908  : 	return (_STD forward<_RRtype>(((_Ttype&)_Tuple)._Myfirst._Val));

	mov	eax, DWORD PTR __Tuple$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??$forward@ABI@std@@YAABIABI@Z		; std::forward<unsigned int const &>
	add	esp, 4

; 909  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$get@$0A@ABI@std@@YAABI$$QAV?$tuple@ABI@0@@Z ENDP	; std::get<0,unsigned int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AAV?$tuple@ABI@std@@@std@@YA$$QAV?$tuple@ABI@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$tuple@ABI@std@@@std@@YA$$QAV?$tuple@ABI@0@AAV10@@Z PROC ; std::move<std::tuple<unsigned int const &> &>, COMDAT

; 1291 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1293 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAV?$tuple@ABI@std@@@std@@YA$$QAV?$tuple@ABI@0@AAV10@@Z ENDP ; std::move<std::tuple<unsigned int const &> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$?0V?$tuple@ABQAE@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@AAV?$tuple@ABQAE@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
___formal$ = 16						; size = 1
___formal$ = 20						; size = 1
??$?0V?$tuple@ABQAE@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@AAV?$tuple@ABQAE@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z PROC ; std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > ><std::tuple<unsigned char * const &>,std::tuple<>,0>, COMDAT
; _this$ = ecx

; 1180 : 		{	// construct from pair of tuples

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1178 : 		: first(_STD get<_Indexes1>(_STD move(_Val1))...),

	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$move@AAV?$tuple@ABQAE@std@@@std@@YA$$QAV?$tuple@ABQAE@0@AAV10@@Z ; std::move<std::tuple<unsigned char * const &> &>
	add	esp, 4
	push	eax
	call	??$get@$0A@ABQAE@std@@YAABQAE$$QAV?$tuple@ABQAE@0@@Z ; std::get<0,unsigned char * const &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 1179 : 			second(_STD get<_Indexes2>(_STD move(_Val2))...)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$vector@EV?$allocator@E@std@@@std@@QAE@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> >

; 1181 : 		(void) _Val1;	// TRANSITION, VSO#181496
; 1182 : 		(void) _Val2;
; 1183 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??$?0V?$tuple@ABQAE@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@AAV?$tuple@ABQAE@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z ENDP ; std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > ><std::tuple<unsigned char * const &>,std::tuple<>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$?0V?$tuple@ABQAE@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@QAEI@std@@QAE@AAV?$tuple@ABQAE@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
___formal$ = 16						; size = 1
___formal$ = 20						; size = 1
??$?0V?$tuple@ABQAE@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@QAEI@std@@QAE@AAV?$tuple@ABQAE@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z PROC ; std::pair<unsigned char * const,unsigned int>::pair<unsigned char * const,unsigned int><std::tuple<unsigned char * const &>,std::tuple<>,0>, COMDAT
; _this$ = ecx

; 1180 : 		{	// construct from pair of tuples

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1178 : 		: first(_STD get<_Indexes1>(_STD move(_Val1))...),

	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$move@AAV?$tuple@ABQAE@std@@@std@@YA$$QAV?$tuple@ABQAE@0@AAV10@@Z ; std::move<std::tuple<unsigned char * const &> &>
	add	esp, 4
	push	eax
	call	??$get@$0A@ABQAE@std@@YAABQAE$$QAV?$tuple@ABQAE@0@@Z ; std::get<0,unsigned char * const &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 1179 : 			second(_STD get<_Indexes2>(_STD move(_Val2))...)

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 1181 : 		(void) _Val1;	// TRANSITION, VSO#181496
; 1182 : 		(void) _Val2;
; 1183 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??$?0V?$tuple@ABQAE@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@QAEI@std@@QAE@AAV?$tuple@ABQAE@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z ENDP ; std::pair<unsigned char * const,unsigned int>::pair<unsigned char * const,unsigned int><std::tuple<unsigned char * const &>,std::tuple<>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$?0V?$tuple@ABI@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@AAV?$tuple@ABI@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
___formal$ = 16						; size = 1
___formal$ = 20						; size = 1
??$?0V?$tuple@ABI@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@AAV?$tuple@ABI@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z PROC ; std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > ><std::tuple<unsigned int const &>,std::tuple<>,0>, COMDAT
; _this$ = ecx

; 1180 : 		{	// construct from pair of tuples

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1178 : 		: first(_STD get<_Indexes1>(_STD move(_Val1))...),

	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$move@AAV?$tuple@ABI@std@@@std@@YA$$QAV?$tuple@ABI@0@AAV10@@Z ; std::move<std::tuple<unsigned int const &> &>
	add	esp, 4
	push	eax
	call	??$get@$0A@ABI@std@@YAABI$$QAV?$tuple@ABI@0@@Z ; std::get<0,unsigned int const &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 1179 : 			second(_STD get<_Indexes2>(_STD move(_Val2))...)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$vector@PAEV?$allocator@PAE@std@@@std@@QAE@XZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::vector<unsigned char *,std::allocator<unsigned char *> >

; 1181 : 		(void) _Val1;	// TRANSITION, VSO#181496
; 1182 : 		(void) _Val2;
; 1183 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??$?0V?$tuple@ABI@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@AAV?$tuple@ABI@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z ENDP ; std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > ><std::tuple<unsigned int const &>,std::tuple<>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$?0ABQAE$$Z$$V@?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABQAE@1@V?$tuple@$$V@1@@Z
_TEXT	SEGMENT
$T1 = -221						; size = 1
$T2 = -209						; size = 1
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
__Val2$ = 16						; size = 1
??$?0ABQAE$$Z$$V@?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABQAE@1@V?$tuple@$$V@1@@Z PROC ; std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > ><unsigned char * const &>, COMDAT
; _this$ = ecx

; 1196 : 		{	// construct from pair of tuples

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1193 : 		: pair(_Val1, _Val2,

	movzx	eax, BYTE PTR $T2[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T1[ebp]
	push	ecx
	lea	edx, DWORD PTR __Val2$[ebp]
	push	edx
	lea	eax, DWORD PTR __Val1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0V?$tuple@ABQAE@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@AAV?$tuple@ABQAE@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z ; std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > ><std::tuple<unsigned char * const &>,std::tuple<>,0>

; 1197 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$?0ABQAE$$Z$$V@?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABQAE@1@V?$tuple@$$V@1@@Z ENDP ; std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > ><unsigned char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$?0ABQAE$$Z$$V@?$pair@QAEI@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABQAE@1@V?$tuple@$$V@1@@Z
_TEXT	SEGMENT
$T1 = -221						; size = 1
$T2 = -209						; size = 1
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
__Val2$ = 16						; size = 1
??$?0ABQAE$$Z$$V@?$pair@QAEI@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABQAE@1@V?$tuple@$$V@1@@Z PROC ; std::pair<unsigned char * const,unsigned int>::pair<unsigned char * const,unsigned int><unsigned char * const &>, COMDAT
; _this$ = ecx

; 1196 : 		{	// construct from pair of tuples

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1193 : 		: pair(_Val1, _Val2,

	movzx	eax, BYTE PTR $T2[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T1[ebp]
	push	ecx
	lea	edx, DWORD PTR __Val2$[ebp]
	push	edx
	lea	eax, DWORD PTR __Val1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0V?$tuple@ABQAE@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@QAEI@std@@QAE@AAV?$tuple@ABQAE@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z ; std::pair<unsigned char * const,unsigned int>::pair<unsigned char * const,unsigned int><std::tuple<unsigned char * const &>,std::tuple<>,0>

; 1197 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$?0ABQAE$$Z$$V@?$pair@QAEI@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABQAE@1@V?$tuple@$$V@1@@Z ENDP ; std::pair<unsigned char * const,unsigned int>::pair<unsigned char * const,unsigned int><unsigned char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$?0ABI$$Z$$V@?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABI@1@V?$tuple@$$V@1@@Z
_TEXT	SEGMENT
$T1 = -221						; size = 1
$T2 = -209						; size = 1
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
__Val2$ = 16						; size = 1
??$?0ABI$$Z$$V@?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABI@1@V?$tuple@$$V@1@@Z PROC ; std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > ><unsigned int const &>, COMDAT
; _this$ = ecx

; 1196 : 		{	// construct from pair of tuples

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1193 : 		: pair(_Val1, _Val2,

	movzx	eax, BYTE PTR $T2[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T1[ebp]
	push	ecx
	lea	edx, DWORD PTR __Val2$[ebp]
	push	edx
	lea	eax, DWORD PTR __Val1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0V?$tuple@ABI@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@AAV?$tuple@ABI@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z ; std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > ><std::tuple<unsigned int const &>,std::tuple<>,0>

; 1197 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$?0ABI$$Z$$V@?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABI@1@V?$tuple@$$V@1@@Z ENDP ; std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > ><unsigned int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z
_TEXT	SEGMENT
tv137 = -268						; size = 4
$T2 = -260						; size = 4
$T3 = -248						; size = 4
$T4 = -236						; size = 4
$T5 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
_<_Args_1>$ = 16					; size = 4
_<_Args_2>$ = 20					; size = 4
??$construct@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z PROC ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::construct<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >, COMDAT
; _this$ = ecx

; 736  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 737  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	20					; 00000014H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_2>$[ebp]
	push	ecx
	call	??$forward@V?$tuple@$$V@std@@@std@@YA$$QAV?$tuple@$$V@0@AAV10@@Z ; std::forward<std::tuple<> >
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	push	eax
	call	??0?$tuple@$$V@std@@QAE@ABV01@@Z	; std::tuple<>::tuple<>
	mov	edx, DWORD PTR _<_Args_1>$[ebp]
	push	edx
	call	??$forward@V?$tuple@ABQAE@std@@@std@@YA$$QAV?$tuple@ABQAE@0@AAV10@@Z ; std::forward<std::tuple<unsigned char * const &> >
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	push	eax
	call	??0?$tuple@ABQAE@std@@QAE@$$QAV01@@Z	; std::tuple<unsigned char * const &>::tuple<unsigned char * const &>
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z ; std::forward<std::piecewise_construct_t const &>
	add	esp, 4
	mov	cl, BYTE PTR [eax]
	movzx	edx, cl
	push	edx
	mov	ecx, DWORD PTR $T4[ebp]
	call	??$?0ABQAE$$Z$$V@?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABQAE@1@V?$tuple@$$V@1@@Z ; std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > ><unsigned char * const &>
	mov	DWORD PTR tv137[ebp], eax
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv137[ebp], 0
$LN4@construct:
	mov	eax, DWORD PTR tv137[ebp]
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1

; 738  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z ENDP ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::construct<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@QAEI@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEI@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z
_TEXT	SEGMENT
tv137 = -268						; size = 4
$T2 = -260						; size = 4
$T3 = -248						; size = 4
$T4 = -236						; size = 4
$T5 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
_<_Args_1>$ = 16					; size = 4
_<_Args_2>$ = 20					; size = 4
??$construct@U?$pair@QAEI@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEI@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z PROC ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >::construct<std::pair<unsigned char * const,unsigned int>,std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >, COMDAT
; _this$ = ecx

; 736  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@U?$pair@QAEI@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEI@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 737  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_2>$[ebp]
	push	ecx
	call	??$forward@V?$tuple@$$V@std@@@std@@YA$$QAV?$tuple@$$V@0@AAV10@@Z ; std::forward<std::tuple<> >
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	push	eax
	call	??0?$tuple@$$V@std@@QAE@ABV01@@Z	; std::tuple<>::tuple<>
	mov	edx, DWORD PTR _<_Args_1>$[ebp]
	push	edx
	call	??$forward@V?$tuple@ABQAE@std@@@std@@YA$$QAV?$tuple@ABQAE@0@AAV10@@Z ; std::forward<std::tuple<unsigned char * const &> >
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	push	eax
	call	??0?$tuple@ABQAE@std@@QAE@$$QAV01@@Z	; std::tuple<unsigned char * const &>::tuple<unsigned char * const &>
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z ; std::forward<std::piecewise_construct_t const &>
	add	esp, 4
	mov	cl, BYTE PTR [eax]
	movzx	edx, cl
	push	edx
	mov	ecx, DWORD PTR $T4[ebp]
	call	??$?0ABQAE$$Z$$V@?$pair@QAEI@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABQAE@1@V?$tuple@$$V@1@@Z ; std::pair<unsigned char * const,unsigned int>::pair<unsigned char * const,unsigned int><unsigned char * const &>
	mov	DWORD PTR tv137[ebp], eax
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv137[ebp], 0
$LN4@construct:
	mov	eax, DWORD PTR tv137[ebp]
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1

; 738  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@U?$pair@QAEI@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEI@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@U?$pair@QAEI@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEI@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@U?$pair@QAEI@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEI@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@U?$pair@QAEI@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEI@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z ENDP ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >::construct<std::pair<unsigned char * const,unsigned int>,std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z
_TEXT	SEGMENT
tv137 = -268						; size = 4
$T2 = -260						; size = 4
$T3 = -248						; size = 4
$T4 = -236						; size = 4
$T5 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
_<_Args_1>$ = 16					; size = 4
_<_Args_2>$ = 20					; size = 4
??$construct@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z PROC ; std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >::construct<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,std::piecewise_construct_t const &,std::tuple<unsigned int const &>,std::tuple<> >, COMDAT
; _this$ = ecx

; 736  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 737  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	20					; 00000014H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_2>$[ebp]
	push	ecx
	call	??$forward@V?$tuple@$$V@std@@@std@@YA$$QAV?$tuple@$$V@0@AAV10@@Z ; std::forward<std::tuple<> >
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	push	eax
	call	??0?$tuple@$$V@std@@QAE@ABV01@@Z	; std::tuple<>::tuple<>
	mov	edx, DWORD PTR _<_Args_1>$[ebp]
	push	edx
	call	??$forward@V?$tuple@ABI@std@@@std@@YA$$QAV?$tuple@ABI@0@AAV10@@Z ; std::forward<std::tuple<unsigned int const &> >
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	push	eax
	call	??0?$tuple@ABI@std@@QAE@$$QAV01@@Z	; std::tuple<unsigned int const &>::tuple<unsigned int const &>
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z ; std::forward<std::piecewise_construct_t const &>
	add	esp, 4
	mov	cl, BYTE PTR [eax]
	movzx	edx, cl
	push	edx
	mov	ecx, DWORD PTR $T4[ebp]
	call	??$?0ABI$$Z$$V@?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABI@1@V?$tuple@$$V@1@@Z ; std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > ><unsigned int const &>
	mov	DWORD PTR tv137[ebp], eax
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv137[ebp], 0
$LN4@construct:
	mov	eax, DWORD PTR tv137[ebp]
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1

; 738  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z ENDP ; std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >::construct<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,std::piecewise_construct_t const &,std::tuple<unsigned int const &>,std::tuple<> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??$_Buynode_if_nil@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PAU21@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Node$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Buynode_if_nil@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PAU21@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Buynode_if_nil<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &>, COMDAT
; _this$ = ecx

; 1629 : 		{	// node exists, just return it

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1630 : 		return (_Node);

	mov	eax, DWORD PTR __Node$[ebp]

; 1631 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??$_Buynode_if_nil@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PAU21@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Buynode_if_nil<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@1@PAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
_<_Args_1>$ = 20					; size = 4
_<_Args_2>$ = 24					; size = 4
??$construct@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@1@PAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::construct<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >, COMDAT

; 856  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 857  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_2>$[ebp]
	push	eax
	call	??$forward@V?$tuple@$$V@std@@@std@@YA$$QAV?$tuple@$$V@0@AAV10@@Z ; std::forward<std::tuple<> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Args_1>$[ebp]
	push	ecx
	call	??$forward@V?$tuple@ABQAE@std@@@std@@YA$$QAV?$tuple@ABQAE@0@AAV10@@Z ; std::forward<std::tuple<unsigned char * const &> >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _<_Args_0>$[ebp]
	push	edx
	call	??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z ; std::forward<std::piecewise_construct_t const &>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::construct<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >

; 858  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@1@PAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::construct<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??$_Buynode_if_nil@AAU?$pair@QAEI@std@@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PAU21@AAU?$pair@QAEI@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Node$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Buynode_if_nil@AAU?$pair@QAEI@std@@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PAU21@AAU?$pair@QAEI@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Buynode_if_nil<std::pair<unsigned char * const,unsigned int> &>, COMDAT
; _this$ = ecx

; 1629 : 		{	// node exists, just return it

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1630 : 		return (_Node);

	mov	eax, DWORD PTR __Node$[ebp]

; 1631 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??$_Buynode_if_nil@AAU?$pair@QAEI@std@@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PAU21@AAU?$pair@QAEI@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Buynode_if_nil<std::pair<unsigned char * const,unsigned int> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@QAEI@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@1@PAU?$pair@QAEI@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
_<_Args_1>$ = 20					; size = 4
_<_Args_2>$ = 24					; size = 4
??$construct@U?$pair@QAEI@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@1@PAU?$pair@QAEI@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::construct<std::pair<unsigned char * const,unsigned int>,std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >, COMDAT

; 856  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 857  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_2>$[ebp]
	push	eax
	call	??$forward@V?$tuple@$$V@std@@@std@@YA$$QAV?$tuple@$$V@0@AAV10@@Z ; std::forward<std::tuple<> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Args_1>$[ebp]
	push	ecx
	call	??$forward@V?$tuple@ABQAE@std@@@std@@YA$$QAV?$tuple@ABQAE@0@AAV10@@Z ; std::forward<std::tuple<unsigned char * const &> >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _<_Args_0>$[ebp]
	push	edx
	call	??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z ; std::forward<std::piecewise_construct_t const &>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@U?$pair@QAEI@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEI@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >::construct<std::pair<unsigned char * const,unsigned int>,std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >

; 858  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@U?$pair@QAEI@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@1@PAU?$pair@QAEI@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::construct<std::pair<unsigned char * const,unsigned int>,std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??$_Buynode_if_nil@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PAU21@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Node$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Buynode_if_nil@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PAU21@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Buynode_if_nil<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &>, COMDAT
; _this$ = ecx

; 1629 : 		{	// node exists, just return it

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1630 : 		return (_Node);

	mov	eax, DWORD PTR __Node$[ebp]

; 1631 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??$_Buynode_if_nil@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PAU21@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Buynode_if_nil<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@1@PAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
_<_Args_1>$ = 20					; size = 4
_<_Args_2>$ = 24					; size = 4
??$construct@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@1@PAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::construct<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,std::piecewise_construct_t const &,std::tuple<unsigned int const &>,std::tuple<> >, COMDAT

; 856  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 857  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_2>$[ebp]
	push	eax
	call	??$forward@V?$tuple@$$V@std@@@std@@YA$$QAV?$tuple@$$V@0@AAV10@@Z ; std::forward<std::tuple<> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Args_1>$[ebp]
	push	ecx
	call	??$forward@V?$tuple@ABI@std@@@std@@YA$$QAV?$tuple@ABI@0@AAV10@@Z ; std::forward<std::tuple<unsigned int const &> >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _<_Args_0>$[ebp]
	push	edx
	call	??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z ; std::forward<std::piecewise_construct_t const &>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z ; std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >::construct<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,std::piecewise_construct_t const &,std::tuple<unsigned int const &>,std::tuple<> >

; 858  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@1@PAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::construct<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,std::piecewise_construct_t const &,std::tuple<unsigned int const &>,std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Copy_memmove@PBEPAE@std@@YAPAEPBE0PAE@Z
_TEXT	SEGMENT
__Count$ = -44						; size = 4
__Dest_ch$ = -32					; size = 4
__Last_ch$ = -20					; size = 4
__First_ch$ = -8					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PBEPAE@std@@YAPAEPBE0PAE@Z PROC	; std::_Copy_memmove<unsigned char const *,unsigned char *>, COMDAT

; 2301 : 	{	// implement copy-like function as memmove

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 2302 : 	const char * const _First_ch = reinterpret_cast<const char *>(_First);

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __First_ch$[ebp], eax

; 2303 : 	const char * const _Last_ch = reinterpret_cast<const char *>(_Last);

	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR __Last_ch$[ebp], eax

; 2304 : 	char * const _Dest_ch = reinterpret_cast<char *>(_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Dest_ch$[ebp], eax

; 2305 : 	const size_t _Count = _Last_ch - _First_ch;

	mov	eax, DWORD PTR __Last_ch$[ebp]
	sub	eax, DWORD PTR __First_ch$[ebp]
	mov	DWORD PTR __Count$[ebp], eax

; 2306 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First_ch$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest_ch$[ebp]
	push	edx
	call	_memmove
	add	esp, 12					; 0000000cH

; 2307 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	mov	eax, DWORD PTR __Dest_ch$[ebp]
	add	eax, DWORD PTR __Count$[ebp]

; 2308 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Copy_memmove@PBEPAE@std@@YAPAEPBE0PAE@Z ENDP	; std::_Copy_memmove<unsigned char const *,unsigned char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??$_Insert_nohint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z
_TEXT	SEGMENT
tv130 = -444						; size = 4
tv309 = -441						; size = 1
tv308 = -440						; size = 4
tv300 = -440						; size = 4
tv304 = -437						; size = 1
tv298 = -437						; size = 1
tv295 = -437						; size = 1
tv307 = -436						; size = 4
tv297 = -436						; size = 4
tv289 = -436						; size = 4
tv285 = -436						; size = 4
tv283 = -436						; size = 4
tv276 = -436						; size = 4
tv159 = -436						; size = 4
tv156 = -436						; size = 4
tv310 = -432						; size = 4
tv306 = -432						; size = 4
tv305 = -432						; size = 4
tv303 = -432						; size = 4
tv302 = -432						; size = 4
tv301 = -432						; size = 4
tv299 = -432						; size = 4
tv296 = -432						; size = 4
tv267 = -432						; size = 4
tv249 = -432						; size = 4
tv206 = -432						; size = 4
$T2 = -424						; size = 4
$T3 = -409						; size = 1
$T4 = -400						; size = 12
$T5 = -377						; size = 1
$T6 = -368						; size = 12
$T7 = -345						; size = 1
$T8 = -336						; size = 12
$T9 = -313						; size = 1
$T10 = -304						; size = 12
$T11 = -281						; size = 1
__Where$12 = -80					; size = 12
__Addleft$13 = -57					; size = 1
__Wherenode$14 = -48					; size = 4
__Trynode$15 = -36					; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
__Leftish$ = 12						; size = 1
__Val$ = 16						; size = 4
__Newnode$ = 20						; size = 4
??$_Insert_nohint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Insert_nohint<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>, COMDAT
; _this$ = ecx

; 1771 : 		{	// try to insert node, on left if _Leftish

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Insert_nohint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 428				; 000001acH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-444]
	mov	ecx, 107				; 0000006bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0

; 1772 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1773 : 		_Nodeptr _Trynode = _Root();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Root
	mov	DWORD PTR tv267[ebp], eax
	mov	eax, DWORD PTR tv267[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Trynode$15[ebp], ecx

; 1774 : 		_Nodeptr _Wherenode = this->_Myhead();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myhead
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Wherenode$14[ebp], eax

; 1775 : 		bool _Addleft = true;	// add to left of head if tree empty

	mov	BYTE PTR __Addleft$13[ebp], 1
$LN2@Insert_noh:

; 1776 : 
; 1777 : 		while (!this->_Isnil(_Trynode))

	mov	eax, DWORD PTR __Trynode$15[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Isnil
	add	esp, 4
	mov	DWORD PTR tv249[ebp], eax
	mov	ecx, DWORD PTR tv249[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	jne	$LN3@Insert_noh

; 1778 : 			{	// look for leaf to insert before (_Addleft) or after
; 1779 : 			_Wherenode = _Trynode;

	mov	eax, DWORD PTR __Trynode$15[ebp]
	mov	DWORD PTR __Wherenode$14[ebp], eax

; 1780 : 			if (_Leftish)

	movzx	eax, BYTE PTR __Leftish$[ebp]
	test	eax, eax
	je	SHORT $LN5@Insert_noh

; 1781 : 				_Addleft = !_DEBUG_LT_PRED(this->_Getcomp(),

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Kfn
	mov	DWORD PTR tv206[ebp], eax
	mov	ecx, DWORD PTR __Trynode$15[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Key
	mov	DWORD PTR tv159[ebp], eax
	push	1783					; 000006f7H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR tv206[ebp]
	push	edx
	mov	eax, DWORD PTR tv159[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv295[ebp], al
	movzx	ecx, BYTE PTR tv295[ebp]
	test	ecx, ecx
	jne	SHORT $LN16@Insert_noh
	mov	DWORD PTR tv130[ebp], 1
	jmp	SHORT $LN17@Insert_noh
$LN16@Insert_noh:
	mov	DWORD PTR tv130[ebp], 0
$LN17@Insert_noh:
	mov	dl, BYTE PTR tv130[ebp]
	mov	BYTE PTR __Addleft$13[ebp], dl

; 1782 : 					this->_Key(_Trynode),
; 1783 : 					this->_Kfn(_Val));	// favor left end
; 1784 : 			else

	jmp	SHORT $LN6@Insert_noh
$LN5@Insert_noh:

; 1785 : 				_Addleft = _DEBUG_LT_PRED(this->_Getcomp(),

	mov	eax, DWORD PTR __Trynode$15[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Key
	mov	DWORD PTR tv296[ebp], eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Kfn
	mov	DWORD PTR tv297[ebp], eax
	push	1787					; 000006fbH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR tv296[ebp]
	push	edx
	mov	eax, DWORD PTR tv297[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv298[ebp], al
	mov	cl, BYTE PTR tv298[ebp]
	mov	BYTE PTR __Addleft$13[ebp], cl
$LN6@Insert_noh:

; 1786 : 					this->_Kfn(_Val),
; 1787 : 					this->_Key(_Trynode));	// favor right end
; 1788 : 			_Trynode = _Addleft ? this->_Left(_Trynode)

	movzx	eax, BYTE PTR __Addleft$13[ebp]
	test	eax, eax
	je	SHORT $LN18@Insert_noh
	mov	ecx, DWORD PTR __Trynode$15[ebp]
	push	ecx
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	DWORD PTR tv299[ebp], eax
	mov	edx, DWORD PTR tv299[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv156[ebp], eax
	jmp	SHORT $LN19@Insert_noh
$LN18@Insert_noh:
	mov	ecx, DWORD PTR __Trynode$15[ebp]
	push	ecx
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	DWORD PTR tv300[ebp], eax
	mov	edx, DWORD PTR tv300[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv156[ebp], eax
$LN19@Insert_noh:
	mov	ecx, DWORD PTR tv156[ebp]
	mov	DWORD PTR __Trynode$15[ebp], ecx

; 1789 : 				: this->_Right(_Trynode);
; 1790 : 			}

	jmp	$LN2@Insert_noh
$LN3@Insert_noh:

; 1791 : 
; 1792 : 		if (this->_Multi)

	xor	eax, eax
	je	$LN7@Insert_noh

; 1793 : 			return (_Pairib(_Insert_at(_Addleft, _Wherenode,

	mov	BYTE PTR $T11[ebp], 1
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Wherenode$14[ebp]
	push	edx
	movzx	eax, BYTE PTR __Addleft$13[ebp]
	push	eax
	lea	ecx, DWORD PTR $T10[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Insert_at<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
	mov	DWORD PTR tv301[ebp], eax
	mov	edx, DWORD PTR tv301[ebp]
	mov	DWORD PTR tv276[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	eax, DWORD PTR $T11[ebp]
	push	eax
	mov	ecx, DWORD PTR tv276[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool,void,0>
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR $T10[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN15@Insert_noh

; 1794 : 				_STD forward<_Valty>(_Val), _Newnode), true));
; 1795 : 		else

	jmp	$LN8@Insert_noh
$LN7@Insert_noh:

; 1796 : 			{	// insert only if unique
; 1797 : 			iterator _Where = iterator(_Wherenode, &this->_Get_data());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Get_data
	push	eax
	mov	eax, DWORD PTR __Wherenode$14[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$12[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
	mov	DWORD PTR tv302[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 1798 : 			if (!_Addleft)

	movzx	eax, BYTE PTR __Addleft$13[ebp]
	test	eax, eax
	jne	SHORT $LN9@Insert_noh
	jmp	$LN10@Insert_noh
$LN9@Insert_noh:

; 1799 : 				;	// need to test if insert after is okay
; 1800 : 			else if (_Where == begin())

	lea	eax, DWORD PTR $T8[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::begin
	mov	DWORD PTR tv303[ebp], eax
	mov	ecx, DWORD PTR tv303[ebp]
	mov	DWORD PTR tv283[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	mov	edx, DWORD PTR tv283[ebp]
	push	edx
	lea	ecx, DWORD PTR __Where$12[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator==
	mov	BYTE PTR tv304[ebp], al
	mov	al, BYTE PTR tv304[ebp]
	mov	BYTE PTR $T9[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T8[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	ecx, BYTE PTR $T9[ebp]
	test	ecx, ecx
	je	$LN11@Insert_noh

; 1801 : 				return (_Pairib(_Insert_at(true, _Wherenode,

	mov	BYTE PTR $T7[ebp], 1
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Wherenode$14[ebp]
	push	edx
	push	1
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Insert_at<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
	mov	DWORD PTR tv305[ebp], eax
	mov	ecx, DWORD PTR tv305[ebp]
	mov	DWORD PTR tv285[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	edx, DWORD PTR $T7[ebp]
	push	edx
	mov	eax, DWORD PTR tv285[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool,void,0>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T6[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Where$12[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN15@Insert_noh

; 1802 : 					_STD forward<_Valty>(_Val), _Newnode), true));
; 1803 : 			else

	jmp	SHORT $LN10@Insert_noh
$LN11@Insert_noh:

; 1804 : 				--_Where;	// need to test if insert before is okay

	lea	ecx, DWORD PTR __Where$12[ebp]
	call	??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator--
$LN10@Insert_noh:

; 1805 : 
; 1806 : 			if (_DEBUG_LT_PRED(this->_Getcomp(),

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Kfn
	mov	DWORD PTR tv306[ebp], eax
	lea	ecx, DWORD PTR __Where$12[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv307[ebp], eax
	mov	ecx, DWORD PTR tv307[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Key
	mov	DWORD PTR tv308[ebp], eax
	push	1808					; 00000710H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR tv306[ebp]
	push	edx
	mov	eax, DWORD PTR tv308[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv309[ebp], al
	movzx	ecx, BYTE PTR tv309[ebp]
	test	ecx, ecx
	je	$LN13@Insert_noh

; 1807 : 				this->_Key(_Where._Mynode()),
; 1808 : 				this->_Kfn(_Val)))
; 1809 : 				return (_Pairib(_Insert_at(_Addleft, _Wherenode,

	mov	BYTE PTR $T5[ebp], 1
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Wherenode$14[ebp]
	push	edx
	movzx	eax, BYTE PTR __Addleft$13[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Insert_at<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
	mov	DWORD PTR tv310[ebp], eax
	mov	edx, DWORD PTR tv310[ebp]
	mov	DWORD PTR tv289[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, DWORD PTR tv289[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool,void,0>
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Where$12[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN15@Insert_noh

; 1810 : 					_STD forward<_Valty>(_Val), _Newnode), true));
; 1811 : 			else

	jmp	SHORT $LN14@Insert_noh
$LN13@Insert_noh:

; 1812 : 				{	// duplicate, don't insert
; 1813 : 				_Destroy_if_not_nil(_Newnode);

	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Destroy_if_not_nil

; 1814 : 				return (_Pairib(_Where, false));

	mov	BYTE PTR $T3[ebp], 0
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$12[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &,bool,void,0>
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Where$12[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN15@Insert_noh
$LN14@Insert_noh:

; 1815 : 				}
; 1816 : 			}

	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Where$12[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN8@Insert_noh:
	jmp	SHORT $LN20@Insert_noh
__catch$??$_Insert_nohint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$0:

; 1817 : 		_CATCH_ALL
; 1818 : 		_Destroy_if_not_nil(_Newnode);

	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Destroy_if_not_nil

; 1819 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1820 : 		_CATCH_END

	mov	eax, $LN30@Insert_noh
	ret	0
$LN20@Insert_noh:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN15@Insert_noh
$LN30@Insert_noh:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN15@Insert_noh:

; 1821 : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN34@Insert_noh
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 444				; 000001bcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN34@Insert_noh:
	DD	1
	DD	$LN33@Insert_noh
$LN33@Insert_noh:
	DD	-80					; ffffffb0H
	DD	12					; 0000000cH
	DD	$LN31@Insert_noh
$LN31@Insert_noh:
	DB	95					; 0000005fH
	DB	87					; 00000057H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Insert_nohint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$2:
	lea	ecx, DWORD PTR $T10[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Insert_nohint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$4:
	lea	ecx, DWORD PTR __Where$12[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Insert_nohint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$5:
	lea	ecx, DWORD PTR $T8[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Insert_nohint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$6:
	lea	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Insert_nohint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$7:
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Insert_nohint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-448]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Insert_nohint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insert_nohint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Insert_nohint<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??$_Insert_at@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@1@Z
_TEXT	SEGMENT
tv89 = -244						; size = 4
$T1 = -236						; size = 4
__Pnode$2 = -32						; size = 4
__Newnode$ = -20					; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Val$ = 20						; size = 4
__Node$ = 24						; size = 4
??$_Insert_at@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@1@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Insert_at<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>, COMDAT
; _this$ = ecx

; 1827 : 		{	// add node with value next to _Wherenode, to left if _Addleft

	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 1828 : 		if (max_size() - 1 <= this->_Mysize())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::max_size
	mov	esi, eax
	sub	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAIXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Mysize
	cmp	esi, DWORD PTR [eax]
	ja	SHORT $LN5@Insert_at

; 1829 : 			{	// tree would get too big, fail
; 1830 : 			_Destroy_if_not_nil(_Node);

	mov	eax, DWORD PTR __Node$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Destroy_if_not_nil

; 1831 : 			_Xlength_error("map/set<T> too long");

	push	OFFSET ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN5@Insert_at:

; 1832 : 			}
; 1833 : 		_Nodeptr _Newnode = _Buynode_if_nil(_Node,

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Node$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Buynode_if_nil@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PAU21@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Buynode_if_nil<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &>
	mov	DWORD PTR __Newnode$[ebp], eax

; 1834 : 			_STD forward<_Valty>(_Val));
; 1835 : 
; 1836 : 		++this->_Mysize();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAIXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Mysize
	mov	DWORD PTR tv89[ebp], eax
	mov	eax, DWORD PTR tv89[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR tv89[ebp]
	mov	DWORD PTR [edx], ecx

; 1837 : 		_Newnode->_Parent = _Wherenode;

	mov	eax, DWORD PTR __Newnode$[ebp]
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 1838 : 
; 1839 : 		if (_Wherenode == this->_Myhead())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myhead
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN6@Insert_at

; 1840 : 			{	// first node in tree, just set head values
; 1841 : 			_Root() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Root
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1842 : 			_Lmost() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Lmost
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1843 : 			_Rmost() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Rmost
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN7@Insert_at
$LN6@Insert_at:

; 1844 : 			}
; 1845 : 		else if (_Addleft)

	movzx	eax, BYTE PTR __Addleft$[ebp]
	test	eax, eax
	je	SHORT $LN8@Insert_at

; 1846 : 			{	// add to left of _Wherenode
; 1847 : 			this->_Left(_Wherenode) = _Newnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1848 : 			if (_Wherenode == _Lmost())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Lmost
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN10@Insert_at

; 1849 : 				_Lmost() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Lmost
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN10@Insert_at:

; 1850 : 			}
; 1851 : 		else

	jmp	SHORT $LN7@Insert_at
$LN8@Insert_at:

; 1852 : 			{	// add to right of _Wherenode
; 1853 : 			this->_Right(_Wherenode) = _Newnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1854 : 			if (_Wherenode == _Rmost())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Rmost
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN7@Insert_at

; 1855 : 				_Rmost() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Rmost
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN7@Insert_at:

; 1856 : 			}
; 1857 : 
; 1858 : 		for (_Nodeptr _Pnode = _Newnode;

	mov	eax, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR __Pnode$2[ebp], eax
$LN4@Insert_at:

; 1859 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	$LN3@Insert_at

; 1860 : 			if (this->_Parent(_Pnode)
; 1861 : 				== this->_Left(this->_Parent(this->_Parent(_Pnode))))

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$2[ebp]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	cmp	ecx, DWORD PTR [eax]
	jne	$LN12@Insert_at

; 1862 : 				{	// fixup red-red in left subtree
; 1863 : 				_Wherenode =

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Wherenode$[ebp], eax

; 1864 : 					this->_Right(this->_Parent(this->_Parent(_Pnode)));
; 1865 : 				if (this->_Color(_Wherenode) == this->_Red)

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN14@Insert_at

; 1866 : 					{	// parent has two red children, blacken both
; 1867 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1868 : 					this->_Color(_Wherenode) = this->_Black;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1869 : 					this->_Color(this->_Parent(this->_Parent(_Pnode)))

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1870 : 						= this->_Red;
; 1871 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$2[ebp], edx

; 1872 : 					}
; 1873 : 				else

	jmp	$LN15@Insert_at
$LN14@Insert_at:

; 1874 : 					{	// parent has red and black children
; 1875 : 					if (_Pnode == this->_Right(this->_Parent(_Pnode)))

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR __Pnode$2[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN16@Insert_at

; 1876 : 						{	// rotate right child to left
; 1877 : 						_Pnode = this->_Parent(_Pnode);

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$2[ebp], ecx

; 1878 : 						_Lrotate(_Pnode);

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Lrotate
$LN16@Insert_at:

; 1879 : 						}
; 1880 : 					this->_Color(this->_Parent(_Pnode)) =

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1881 : 						this->_Black;	// propagate red up
; 1882 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1883 : 						this->_Red;
; 1884 : 					_Rrotate(this->_Parent(this->_Parent(_Pnode)));

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Rrotate
$LN15@Insert_at:

; 1885 : 					}
; 1886 : 				}
; 1887 : 			else

	jmp	$LN13@Insert_at
$LN12@Insert_at:

; 1888 : 				{	// fixup red-red in right subtree
; 1889 : 				_Wherenode =

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Wherenode$[ebp], eax

; 1890 : 					this->_Left(this->_Parent(this->_Parent(_Pnode)));
; 1891 : 				if (this->_Color(_Wherenode) == this->_Red)

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN17@Insert_at

; 1892 : 					{	// parent has two red children, blacken both
; 1893 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1894 : 					this->_Color(_Wherenode) = this->_Black;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1895 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1896 : 						this->_Red;
; 1897 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$2[ebp], edx

; 1898 : 					}
; 1899 : 				else

	jmp	$LN13@Insert_at
$LN17@Insert_at:

; 1900 : 					{	// parent has red and black children
; 1901 : 					if (_Pnode == this->_Left(this->_Parent(_Pnode)))

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR __Pnode$2[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN19@Insert_at

; 1902 : 						{	// rotate left child to right
; 1903 : 						_Pnode = this->_Parent(_Pnode);

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$2[ebp], ecx

; 1904 : 						_Rrotate(_Pnode);

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Rrotate
$LN19@Insert_at:

; 1905 : 						}
; 1906 : 					this->_Color(this->_Parent(_Pnode)) =

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1907 : 						this->_Black;	// propagate red up
; 1908 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1909 : 						this->_Red;
; 1910 : 					_Lrotate(this->_Parent(this->_Parent(_Pnode)));

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Lrotate
$LN13@Insert_at:

; 1911 : 					}
; 1912 : 				}

	jmp	$LN4@Insert_at
$LN3@Insert_at:

; 1913 : 
; 1914 : 		this->_Color(_Root()) = this->_Black;	// root is always black

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Root
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1915 : 		return (iterator(_Newnode, &this->_Get_data()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Get_data
	push	eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN20@Insert_at:

; 1916 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
??$_Insert_at@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@1@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Insert_at<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@0@AAU10@@Z PROC ; std::forward<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@0@AAU10@@Z ENDP ; std::forward<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
_<_Args_1>$ = 16					; size = 4
_<_Args_2>$ = 20					; size = 4
??$construct@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::construct<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >, COMDAT
; _this$ = ecx

; 994  : 		{	// construct _Ty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 995  : 		_Mytraits::construct(*this, _Ptr,

	mov	eax, DWORD PTR _<_Args_2>$[ebp]
	push	eax
	call	??$forward@V?$tuple@$$V@std@@@std@@YA$$QAV?$tuple@$$V@0@AAV10@@Z ; std::forward<std::tuple<> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Args_1>$[ebp]
	push	ecx
	call	??$forward@V?$tuple@ABQAE@std@@@std@@YA$$QAV?$tuple@ABQAE@0@AAV10@@Z ; std::forward<std::tuple<unsigned char * const &> >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _<_Args_0>$[ebp]
	push	edx
	call	??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z ; std::forward<std::piecewise_construct_t const &>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$construct@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@1@PAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::construct<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >
	add	esp, 20					; 00000014H

; 996  : 			_STD forward<_Types>(_Args)...);
; 997  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??$construct@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::construct<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??$_Insert_nohint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z
_TEXT	SEGMENT
tv130 = -444						; size = 4
tv309 = -441						; size = 1
tv308 = -440						; size = 4
tv300 = -440						; size = 4
tv304 = -437						; size = 1
tv298 = -437						; size = 1
tv295 = -437						; size = 1
tv307 = -436						; size = 4
tv297 = -436						; size = 4
tv289 = -436						; size = 4
tv285 = -436						; size = 4
tv283 = -436						; size = 4
tv276 = -436						; size = 4
tv159 = -436						; size = 4
tv156 = -436						; size = 4
tv310 = -432						; size = 4
tv306 = -432						; size = 4
tv305 = -432						; size = 4
tv303 = -432						; size = 4
tv302 = -432						; size = 4
tv301 = -432						; size = 4
tv299 = -432						; size = 4
tv296 = -432						; size = 4
tv267 = -432						; size = 4
tv249 = -432						; size = 4
tv206 = -432						; size = 4
$T2 = -424						; size = 4
$T3 = -409						; size = 1
$T4 = -400						; size = 12
$T5 = -377						; size = 1
$T6 = -368						; size = 12
$T7 = -345						; size = 1
$T8 = -336						; size = 12
$T9 = -313						; size = 1
$T10 = -304						; size = 12
$T11 = -281						; size = 1
__Where$12 = -80					; size = 12
__Addleft$13 = -57					; size = 1
__Wherenode$14 = -48					; size = 4
__Trynode$15 = -36					; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
__Leftish$ = 12						; size = 1
__Val$ = 16						; size = 4
__Newnode$ = 20						; size = 4
??$_Insert_nohint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Insert_nohint<std::pair<unsigned char * const,unsigned int> &,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>, COMDAT
; _this$ = ecx

; 1771 : 		{	// try to insert node, on left if _Leftish

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Insert_nohint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 428				; 000001acH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-444]
	mov	ecx, 107				; 0000006bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0

; 1772 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1773 : 		_Nodeptr _Trynode = _Root();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Root
	mov	DWORD PTR tv267[ebp], eax
	mov	eax, DWORD PTR tv267[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Trynode$15[ebp], ecx

; 1774 : 		_Nodeptr _Wherenode = this->_Myhead();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myhead
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Wherenode$14[ebp], eax

; 1775 : 		bool _Addleft = true;	// add to left of head if tree empty

	mov	BYTE PTR __Addleft$13[ebp], 1
$LN2@Insert_noh:

; 1776 : 
; 1777 : 		while (!this->_Isnil(_Trynode))

	mov	eax, DWORD PTR __Trynode$15[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Isnil
	add	esp, 4
	mov	DWORD PTR tv249[ebp], eax
	mov	ecx, DWORD PTR tv249[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	jne	$LN3@Insert_noh

; 1778 : 			{	// look for leaf to insert before (_Addleft) or after
; 1779 : 			_Wherenode = _Trynode;

	mov	eax, DWORD PTR __Trynode$15[ebp]
	mov	DWORD PTR __Wherenode$14[ebp], eax

; 1780 : 			if (_Leftish)

	movzx	eax, BYTE PTR __Leftish$[ebp]
	test	eax, eax
	je	SHORT $LN5@Insert_noh

; 1781 : 				_Addleft = !_DEBUG_LT_PRED(this->_Getcomp(),

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEI@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Kfn
	mov	DWORD PTR tv206[ebp], eax
	mov	ecx, DWORD PTR __Trynode$15[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Key
	mov	DWORD PTR tv159[ebp], eax
	push	1783					; 000006f7H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR tv206[ebp]
	push	edx
	mov	eax, DWORD PTR tv159[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv295[ebp], al
	movzx	ecx, BYTE PTR tv295[ebp]
	test	ecx, ecx
	jne	SHORT $LN16@Insert_noh
	mov	DWORD PTR tv130[ebp], 1
	jmp	SHORT $LN17@Insert_noh
$LN16@Insert_noh:
	mov	DWORD PTR tv130[ebp], 0
$LN17@Insert_noh:
	mov	dl, BYTE PTR tv130[ebp]
	mov	BYTE PTR __Addleft$13[ebp], dl

; 1782 : 					this->_Key(_Trynode),
; 1783 : 					this->_Kfn(_Val));	// favor left end
; 1784 : 			else

	jmp	SHORT $LN6@Insert_noh
$LN5@Insert_noh:

; 1785 : 				_Addleft = _DEBUG_LT_PRED(this->_Getcomp(),

	mov	eax, DWORD PTR __Trynode$15[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Key
	mov	DWORD PTR tv296[ebp], eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEI@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Kfn
	mov	DWORD PTR tv297[ebp], eax
	push	1787					; 000006fbH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR tv296[ebp]
	push	edx
	mov	eax, DWORD PTR tv297[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv298[ebp], al
	mov	cl, BYTE PTR tv298[ebp]
	mov	BYTE PTR __Addleft$13[ebp], cl
$LN6@Insert_noh:

; 1786 : 					this->_Kfn(_Val),
; 1787 : 					this->_Key(_Trynode));	// favor right end
; 1788 : 			_Trynode = _Addleft ? this->_Left(_Trynode)

	movzx	eax, BYTE PTR __Addleft$13[ebp]
	test	eax, eax
	je	SHORT $LN18@Insert_noh
	mov	ecx, DWORD PTR __Trynode$15[ebp]
	push	ecx
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	DWORD PTR tv299[ebp], eax
	mov	edx, DWORD PTR tv299[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv156[ebp], eax
	jmp	SHORT $LN19@Insert_noh
$LN18@Insert_noh:
	mov	ecx, DWORD PTR __Trynode$15[ebp]
	push	ecx
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	DWORD PTR tv300[ebp], eax
	mov	edx, DWORD PTR tv300[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv156[ebp], eax
$LN19@Insert_noh:
	mov	ecx, DWORD PTR tv156[ebp]
	mov	DWORD PTR __Trynode$15[ebp], ecx

; 1789 : 				: this->_Right(_Trynode);
; 1790 : 			}

	jmp	$LN2@Insert_noh
$LN3@Insert_noh:

; 1791 : 
; 1792 : 		if (this->_Multi)

	xor	eax, eax
	je	$LN7@Insert_noh

; 1793 : 			return (_Pairib(_Insert_at(_Addleft, _Wherenode,

	mov	BYTE PTR $T11[ebp], 1
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@QAEI@std@@@std@@YAAAU?$pair@QAEI@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,unsigned int> &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Wherenode$14[ebp]
	push	edx
	movzx	eax, BYTE PTR __Addleft$13[ebp]
	push	eax
	lea	ecx, DWORD PTR $T10[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAU?$pair@QAEI@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Insert_at<std::pair<unsigned char * const,unsigned int> &,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
	mov	DWORD PTR tv301[ebp], eax
	mov	edx, DWORD PTR tv301[ebp]
	mov	DWORD PTR tv276[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	eax, DWORD PTR $T11[ebp]
	push	eax
	mov	ecx, DWORD PTR tv276[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool,void,0>
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR $T10[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN15@Insert_noh

; 1794 : 				_STD forward<_Valty>(_Val), _Newnode), true));
; 1795 : 		else

	jmp	$LN8@Insert_noh
$LN7@Insert_noh:

; 1796 : 			{	// insert only if unique
; 1797 : 			iterator _Where = iterator(_Wherenode, &this->_Get_data());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Get_data
	push	eax
	mov	eax, DWORD PTR __Wherenode$14[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$12[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >
	mov	DWORD PTR tv302[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 1798 : 			if (!_Addleft)

	movzx	eax, BYTE PTR __Addleft$13[ebp]
	test	eax, eax
	jne	SHORT $LN9@Insert_noh
	jmp	$LN10@Insert_noh
$LN9@Insert_noh:

; 1799 : 				;	// need to test if insert after is okay
; 1800 : 			else if (_Where == begin())

	lea	eax, DWORD PTR $T8[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::begin
	mov	DWORD PTR tv303[ebp], eax
	mov	ecx, DWORD PTR tv303[ebp]
	mov	DWORD PTR tv283[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	mov	edx, DWORD PTR tv283[ebp]
	push	edx
	lea	ecx, DWORD PTR __Where$12[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator==
	mov	BYTE PTR tv304[ebp], al
	mov	al, BYTE PTR tv304[ebp]
	mov	BYTE PTR $T9[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T8[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	movzx	ecx, BYTE PTR $T9[ebp]
	test	ecx, ecx
	je	$LN11@Insert_noh

; 1801 : 				return (_Pairib(_Insert_at(true, _Wherenode,

	mov	BYTE PTR $T7[ebp], 1
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@QAEI@std@@@std@@YAAAU?$pair@QAEI@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,unsigned int> &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Wherenode$14[ebp]
	push	edx
	push	1
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAU?$pair@QAEI@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Insert_at<std::pair<unsigned char * const,unsigned int> &,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
	mov	DWORD PTR tv305[ebp], eax
	mov	ecx, DWORD PTR tv305[ebp]
	mov	DWORD PTR tv285[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	edx, DWORD PTR $T7[ebp]
	push	edx
	mov	eax, DWORD PTR tv285[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool,void,0>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T6[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Where$12[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN15@Insert_noh

; 1802 : 					_STD forward<_Valty>(_Val), _Newnode), true));
; 1803 : 			else

	jmp	SHORT $LN10@Insert_noh
$LN11@Insert_noh:

; 1804 : 				--_Where;	// need to test if insert before is okay

	lea	ecx, DWORD PTR __Where$12[ebp]
	call	??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator--
$LN10@Insert_noh:

; 1805 : 
; 1806 : 			if (_DEBUG_LT_PRED(this->_Getcomp(),

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEI@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Kfn
	mov	DWORD PTR tv306[ebp], eax
	lea	ecx, DWORD PTR __Where$12[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv307[ebp], eax
	mov	ecx, DWORD PTR tv307[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Key
	mov	DWORD PTR tv308[ebp], eax
	push	1808					; 00000710H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR tv306[ebp]
	push	edx
	mov	eax, DWORD PTR tv308[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv309[ebp], al
	movzx	ecx, BYTE PTR tv309[ebp]
	test	ecx, ecx
	je	$LN13@Insert_noh

; 1807 : 				this->_Key(_Where._Mynode()),
; 1808 : 				this->_Kfn(_Val)))
; 1809 : 				return (_Pairib(_Insert_at(_Addleft, _Wherenode,

	mov	BYTE PTR $T5[ebp], 1
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@QAEI@std@@@std@@YAAAU?$pair@QAEI@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,unsigned int> &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Wherenode$14[ebp]
	push	edx
	movzx	eax, BYTE PTR __Addleft$13[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAU?$pair@QAEI@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Insert_at<std::pair<unsigned char * const,unsigned int> &,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
	mov	DWORD PTR tv310[ebp], eax
	mov	edx, DWORD PTR tv310[ebp]
	mov	DWORD PTR tv289[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, DWORD PTR tv289[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool,void,0>
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Where$12[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN15@Insert_noh

; 1810 : 					_STD forward<_Valty>(_Val), _Newnode), true));
; 1811 : 			else

	jmp	SHORT $LN14@Insert_noh
$LN13@Insert_noh:

; 1812 : 				{	// duplicate, don't insert
; 1813 : 				_Destroy_if_not_nil(_Newnode);

	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Destroy_if_not_nil

; 1814 : 				return (_Pairib(_Where, false));

	mov	BYTE PTR $T3[ebp], 0
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$12[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > &,bool,void,0>
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Where$12[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN15@Insert_noh
$LN14@Insert_noh:

; 1815 : 				}
; 1816 : 			}

	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Where$12[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
$LN8@Insert_noh:
	jmp	SHORT $LN20@Insert_noh
__catch$??$_Insert_nohint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$0:

; 1817 : 		_CATCH_ALL
; 1818 : 		_Destroy_if_not_nil(_Newnode);

	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Destroy_if_not_nil

; 1819 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1820 : 		_CATCH_END

	mov	eax, $LN30@Insert_noh
	ret	0
$LN20@Insert_noh:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN15@Insert_noh
$LN30@Insert_noh:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN15@Insert_noh:

; 1821 : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN34@Insert_noh
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 444				; 000001bcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN34@Insert_noh:
	DD	1
	DD	$LN33@Insert_noh
$LN33@Insert_noh:
	DD	-80					; ffffffb0H
	DD	12					; 0000000cH
	DD	$LN31@Insert_noh
$LN31@Insert_noh:
	DB	95					; 0000005fH
	DB	87					; 00000057H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Insert_nohint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$2:
	lea	ecx, DWORD PTR $T10[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Insert_nohint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$4:
	lea	ecx, DWORD PTR __Where$12[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Insert_nohint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$5:
	lea	ecx, DWORD PTR $T8[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Insert_nohint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$6:
	lea	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Insert_nohint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$7:
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Insert_nohint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-448]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Insert_nohint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insert_nohint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Insert_nohint<std::pair<unsigned char * const,unsigned int> &,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??$_Insert_at@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAU?$pair@QAEI@1@1@Z
_TEXT	SEGMENT
tv89 = -244						; size = 4
$T1 = -236						; size = 4
__Pnode$2 = -32						; size = 4
__Newnode$ = -20					; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Val$ = 20						; size = 4
__Node$ = 24						; size = 4
??$_Insert_at@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAU?$pair@QAEI@1@1@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Insert_at<std::pair<unsigned char * const,unsigned int> &,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>, COMDAT
; _this$ = ecx

; 1827 : 		{	// add node with value next to _Wherenode, to left if _Addleft

	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 1828 : 		if (max_size() - 1 <= this->_Mysize())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::max_size
	mov	esi, eax
	sub	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAIXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Mysize
	cmp	esi, DWORD PTR [eax]
	ja	SHORT $LN5@Insert_at

; 1829 : 			{	// tree would get too big, fail
; 1830 : 			_Destroy_if_not_nil(_Node);

	mov	eax, DWORD PTR __Node$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Destroy_if_not_nil

; 1831 : 			_Xlength_error("map/set<T> too long");

	push	OFFSET ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN5@Insert_at:

; 1832 : 			}
; 1833 : 		_Nodeptr _Newnode = _Buynode_if_nil(_Node,

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@AAU?$pair@QAEI@std@@@std@@YAAAU?$pair@QAEI@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,unsigned int> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Node$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Buynode_if_nil@AAU?$pair@QAEI@std@@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PAU21@AAU?$pair@QAEI@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Buynode_if_nil<std::pair<unsigned char * const,unsigned int> &>
	mov	DWORD PTR __Newnode$[ebp], eax

; 1834 : 			_STD forward<_Valty>(_Val));
; 1835 : 
; 1836 : 		++this->_Mysize();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAIXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Mysize
	mov	DWORD PTR tv89[ebp], eax
	mov	eax, DWORD PTR tv89[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR tv89[ebp]
	mov	DWORD PTR [edx], ecx

; 1837 : 		_Newnode->_Parent = _Wherenode;

	mov	eax, DWORD PTR __Newnode$[ebp]
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 1838 : 
; 1839 : 		if (_Wherenode == this->_Myhead())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myhead
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN6@Insert_at

; 1840 : 			{	// first node in tree, just set head values
; 1841 : 			_Root() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Root
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1842 : 			_Lmost() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Lmost
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1843 : 			_Rmost() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Rmost
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN7@Insert_at
$LN6@Insert_at:

; 1844 : 			}
; 1845 : 		else if (_Addleft)

	movzx	eax, BYTE PTR __Addleft$[ebp]
	test	eax, eax
	je	SHORT $LN8@Insert_at

; 1846 : 			{	// add to left of _Wherenode
; 1847 : 			this->_Left(_Wherenode) = _Newnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1848 : 			if (_Wherenode == _Lmost())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Lmost
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN10@Insert_at

; 1849 : 				_Lmost() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Lmost
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN10@Insert_at:

; 1850 : 			}
; 1851 : 		else

	jmp	SHORT $LN7@Insert_at
$LN8@Insert_at:

; 1852 : 			{	// add to right of _Wherenode
; 1853 : 			this->_Right(_Wherenode) = _Newnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1854 : 			if (_Wherenode == _Rmost())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Rmost
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN7@Insert_at

; 1855 : 				_Rmost() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Rmost
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN7@Insert_at:

; 1856 : 			}
; 1857 : 
; 1858 : 		for (_Nodeptr _Pnode = _Newnode;

	mov	eax, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR __Pnode$2[ebp], eax
$LN4@Insert_at:

; 1859 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	$LN3@Insert_at

; 1860 : 			if (this->_Parent(_Pnode)
; 1861 : 				== this->_Left(this->_Parent(this->_Parent(_Pnode))))

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$2[ebp]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	cmp	ecx, DWORD PTR [eax]
	jne	$LN12@Insert_at

; 1862 : 				{	// fixup red-red in left subtree
; 1863 : 				_Wherenode =

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Wherenode$[ebp], eax

; 1864 : 					this->_Right(this->_Parent(this->_Parent(_Pnode)));
; 1865 : 				if (this->_Color(_Wherenode) == this->_Red)

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN14@Insert_at

; 1866 : 					{	// parent has two red children, blacken both
; 1867 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1868 : 					this->_Color(_Wherenode) = this->_Black;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1869 : 					this->_Color(this->_Parent(this->_Parent(_Pnode)))

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1870 : 						= this->_Red;
; 1871 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$2[ebp], edx

; 1872 : 					}
; 1873 : 				else

	jmp	$LN15@Insert_at
$LN14@Insert_at:

; 1874 : 					{	// parent has red and black children
; 1875 : 					if (_Pnode == this->_Right(this->_Parent(_Pnode)))

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR __Pnode$2[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN16@Insert_at

; 1876 : 						{	// rotate right child to left
; 1877 : 						_Pnode = this->_Parent(_Pnode);

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$2[ebp], ecx

; 1878 : 						_Lrotate(_Pnode);

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Lrotate
$LN16@Insert_at:

; 1879 : 						}
; 1880 : 					this->_Color(this->_Parent(_Pnode)) =

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1881 : 						this->_Black;	// propagate red up
; 1882 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1883 : 						this->_Red;
; 1884 : 					_Rrotate(this->_Parent(this->_Parent(_Pnode)));

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Rrotate
$LN15@Insert_at:

; 1885 : 					}
; 1886 : 				}
; 1887 : 			else

	jmp	$LN13@Insert_at
$LN12@Insert_at:

; 1888 : 				{	// fixup red-red in right subtree
; 1889 : 				_Wherenode =

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Wherenode$[ebp], eax

; 1890 : 					this->_Left(this->_Parent(this->_Parent(_Pnode)));
; 1891 : 				if (this->_Color(_Wherenode) == this->_Red)

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN17@Insert_at

; 1892 : 					{	// parent has two red children, blacken both
; 1893 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1894 : 					this->_Color(_Wherenode) = this->_Black;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1895 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1896 : 						this->_Red;
; 1897 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$2[ebp], edx

; 1898 : 					}
; 1899 : 				else

	jmp	$LN13@Insert_at
$LN17@Insert_at:

; 1900 : 					{	// parent has red and black children
; 1901 : 					if (_Pnode == this->_Left(this->_Parent(_Pnode)))

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR __Pnode$2[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN19@Insert_at

; 1902 : 						{	// rotate left child to right
; 1903 : 						_Pnode = this->_Parent(_Pnode);

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$2[ebp], ecx

; 1904 : 						_Rrotate(_Pnode);

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Rrotate
$LN19@Insert_at:

; 1905 : 						}
; 1906 : 					this->_Color(this->_Parent(_Pnode)) =

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1907 : 						this->_Black;	// propagate red up
; 1908 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1909 : 						this->_Red;
; 1910 : 					_Lrotate(this->_Parent(this->_Parent(_Pnode)));

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Lrotate
$LN13@Insert_at:

; 1911 : 					}
; 1912 : 				}

	jmp	$LN4@Insert_at
$LN3@Insert_at:

; 1913 : 
; 1914 : 		this->_Color(_Root()) = this->_Black;	// root is always black

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Root
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1915 : 		return (iterator(_Newnode, &this->_Get_data()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Get_data
	push	eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN20@Insert_at:

; 1916 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
??$_Insert_at@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAU?$pair@QAEI@1@1@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Insert_at<std::pair<unsigned char * const,unsigned int> &,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAU?$pair@QAEI@std@@@std@@YAAAU?$pair@QAEI@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$pair@QAEI@std@@@std@@YAAAU?$pair@QAEI@0@AAU10@@Z PROC ; std::forward<std::pair<unsigned char * const,unsigned int> &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAU?$pair@QAEI@std@@@std@@YAAAU?$pair@QAEI@0@AAU10@@Z ENDP ; std::forward<std::pair<unsigned char * const,unsigned int> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@QAEI@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAEI@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
_<_Args_1>$ = 16					; size = 4
_<_Args_2>$ = 20					; size = 4
??$construct@U?$pair@QAEI@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAEI@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::construct<std::pair<unsigned char * const,unsigned int>,std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >, COMDAT
; _this$ = ecx

; 994  : 		{	// construct _Ty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 995  : 		_Mytraits::construct(*this, _Ptr,

	mov	eax, DWORD PTR _<_Args_2>$[ebp]
	push	eax
	call	??$forward@V?$tuple@$$V@std@@@std@@YA$$QAV?$tuple@$$V@0@AAV10@@Z ; std::forward<std::tuple<> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Args_1>$[ebp]
	push	ecx
	call	??$forward@V?$tuple@ABQAE@std@@@std@@YA$$QAV?$tuple@ABQAE@0@AAV10@@Z ; std::forward<std::tuple<unsigned char * const &> >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _<_Args_0>$[ebp]
	push	edx
	call	??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z ; std::forward<std::piecewise_construct_t const &>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$construct@U?$pair@QAEI@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@1@PAU?$pair@QAEI@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::construct<std::pair<unsigned char * const,unsigned int>,std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >
	add	esp, 20					; 00000014H

; 996  : 			_STD forward<_Types>(_Args)...);
; 997  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??$construct@U?$pair@QAEI@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAEI@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::construct<std::pair<unsigned char * const,unsigned int>,std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$?0ABQAE@?$_Tuple_val@ABQAE@std@@QAE@ABQAE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Arg$ = 8						; size = 4
??$?0ABQAE@?$_Tuple_val@ABQAE@std@@QAE@ABQAE@Z PROC	; std::_Tuple_val<unsigned char * const &>::_Tuple_val<unsigned char * const &><unsigned char * const &>, COMDAT
; _this$ = ecx

; 164  : 		{	// construct with argument

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 163  : 		: _Val(_STD forward<_Other>(_Arg))

	mov	eax, DWORD PTR __Arg$[ebp]
	push	eax
	call	??$forward@ABQAE@std@@YAABQAEABQAE@Z	; std::forward<unsigned char * const &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 165  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0ABQAE@?$_Tuple_val@ABQAE@std@@QAE@ABQAE@Z ENDP	; std::_Tuple_val<unsigned char * const &>::_Tuple_val<unsigned char * const &><unsigned char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??$_Insert_nohint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z
_TEXT	SEGMENT
tv130 = -444						; size = 4
tv309 = -441						; size = 1
tv308 = -440						; size = 4
tv300 = -440						; size = 4
tv304 = -437						; size = 1
tv298 = -437						; size = 1
tv295 = -437						; size = 1
tv307 = -436						; size = 4
tv297 = -436						; size = 4
tv289 = -436						; size = 4
tv285 = -436						; size = 4
tv283 = -436						; size = 4
tv276 = -436						; size = 4
tv159 = -436						; size = 4
tv156 = -436						; size = 4
tv310 = -432						; size = 4
tv306 = -432						; size = 4
tv305 = -432						; size = 4
tv303 = -432						; size = 4
tv302 = -432						; size = 4
tv301 = -432						; size = 4
tv299 = -432						; size = 4
tv296 = -432						; size = 4
tv267 = -432						; size = 4
tv249 = -432						; size = 4
tv206 = -432						; size = 4
$T2 = -424						; size = 4
$T3 = -409						; size = 1
$T4 = -400						; size = 12
$T5 = -377						; size = 1
$T6 = -368						; size = 12
$T7 = -345						; size = 1
$T8 = -336						; size = 12
$T9 = -313						; size = 1
$T10 = -304						; size = 12
$T11 = -281						; size = 1
__Where$12 = -80					; size = 12
__Addleft$13 = -57					; size = 1
__Wherenode$14 = -48					; size = 4
__Trynode$15 = -36					; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
__Leftish$ = 12						; size = 1
__Val$ = 16						; size = 4
__Newnode$ = 20						; size = 4
??$_Insert_nohint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Insert_nohint<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>, COMDAT
; _this$ = ecx

; 1771 : 		{	// try to insert node, on left if _Leftish

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Insert_nohint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 428				; 000001acH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-444]
	mov	ecx, 107				; 0000006bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0

; 1772 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1773 : 		_Nodeptr _Trynode = _Root();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Root
	mov	DWORD PTR tv267[ebp], eax
	mov	eax, DWORD PTR tv267[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Trynode$15[ebp], ecx

; 1774 : 		_Nodeptr _Wherenode = this->_Myhead();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myhead
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Wherenode$14[ebp], eax

; 1775 : 		bool _Addleft = true;	// add to left of head if tree empty

	mov	BYTE PTR __Addleft$13[ebp], 1
$LN2@Insert_noh:

; 1776 : 
; 1777 : 		while (!this->_Isnil(_Trynode))

	mov	eax, DWORD PTR __Trynode$15[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Isnil
	add	esp, 4
	mov	DWORD PTR tv249[ebp], eax
	mov	ecx, DWORD PTR tv249[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	jne	$LN3@Insert_noh

; 1778 : 			{	// look for leaf to insert before (_Addleft) or after
; 1779 : 			_Wherenode = _Trynode;

	mov	eax, DWORD PTR __Trynode$15[ebp]
	mov	DWORD PTR __Wherenode$14[ebp], eax

; 1780 : 			if (_Leftish)

	movzx	eax, BYTE PTR __Leftish$[ebp]
	test	eax, eax
	je	SHORT $LN5@Insert_noh

; 1781 : 				_Addleft = !_DEBUG_LT_PRED(this->_Getcomp(),

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIABU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Kfn
	mov	DWORD PTR tv206[ebp], eax
	mov	ecx, DWORD PTR __Trynode$15[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Key
	mov	DWORD PTR tv159[ebp], eax
	push	1783					; 000006f7H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR tv206[ebp]
	push	edx
	mov	eax, DWORD PTR tv159[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@I@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@I@std@@ABIABI@std@@YA_NAAU?$less@I@0@ABI1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned int> &,unsigned int const &,unsigned int const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv295[ebp], al
	movzx	ecx, BYTE PTR tv295[ebp]
	test	ecx, ecx
	jne	SHORT $LN16@Insert_noh
	mov	DWORD PTR tv130[ebp], 1
	jmp	SHORT $LN17@Insert_noh
$LN16@Insert_noh:
	mov	DWORD PTR tv130[ebp], 0
$LN17@Insert_noh:
	mov	dl, BYTE PTR tv130[ebp]
	mov	BYTE PTR __Addleft$13[ebp], dl

; 1782 : 					this->_Key(_Trynode),
; 1783 : 					this->_Kfn(_Val));	// favor left end
; 1784 : 			else

	jmp	SHORT $LN6@Insert_noh
$LN5@Insert_noh:

; 1785 : 				_Addleft = _DEBUG_LT_PRED(this->_Getcomp(),

	mov	eax, DWORD PTR __Trynode$15[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Key
	mov	DWORD PTR tv296[ebp], eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIABU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Kfn
	mov	DWORD PTR tv297[ebp], eax
	push	1787					; 000006fbH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR tv296[ebp]
	push	edx
	mov	eax, DWORD PTR tv297[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@I@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@I@std@@ABIABI@std@@YA_NAAU?$less@I@0@ABI1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned int> &,unsigned int const &,unsigned int const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv298[ebp], al
	mov	cl, BYTE PTR tv298[ebp]
	mov	BYTE PTR __Addleft$13[ebp], cl
$LN6@Insert_noh:

; 1786 : 					this->_Kfn(_Val),
; 1787 : 					this->_Key(_Trynode));	// favor right end
; 1788 : 			_Trynode = _Addleft ? this->_Left(_Trynode)

	movzx	eax, BYTE PTR __Addleft$13[ebp]
	test	eax, eax
	je	SHORT $LN18@Insert_noh
	mov	ecx, DWORD PTR __Trynode$15[ebp]
	push	ecx
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	DWORD PTR tv299[ebp], eax
	mov	edx, DWORD PTR tv299[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv156[ebp], eax
	jmp	SHORT $LN19@Insert_noh
$LN18@Insert_noh:
	mov	ecx, DWORD PTR __Trynode$15[ebp]
	push	ecx
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	DWORD PTR tv300[ebp], eax
	mov	edx, DWORD PTR tv300[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv156[ebp], eax
$LN19@Insert_noh:
	mov	ecx, DWORD PTR tv156[ebp]
	mov	DWORD PTR __Trynode$15[ebp], ecx

; 1789 : 				: this->_Right(_Trynode);
; 1790 : 			}

	jmp	$LN2@Insert_noh
$LN3@Insert_noh:

; 1791 : 
; 1792 : 		if (this->_Multi)

	xor	eax, eax
	je	$LN7@Insert_noh

; 1793 : 			return (_Pairib(_Insert_at(_Addleft, _Wherenode,

	mov	BYTE PTR $T11[ebp], 1
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@YAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Wherenode$14[ebp]
	push	edx
	movzx	eax, BYTE PTR __Addleft$13[ebp]
	push	eax
	lea	ecx, DWORD PTR $T10[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Insert_at<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
	mov	DWORD PTR tv301[ebp], eax
	mov	edx, DWORD PTR tv301[ebp]
	mov	DWORD PTR tv276[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	eax, DWORD PTR $T11[ebp]
	push	eax
	mov	ecx, DWORD PTR tv276[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool,void,0>
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR $T10[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN15@Insert_noh

; 1794 : 				_STD forward<_Valty>(_Val), _Newnode), true));
; 1795 : 		else

	jmp	$LN8@Insert_noh
$LN7@Insert_noh:

; 1796 : 			{	// insert only if unique
; 1797 : 			iterator _Where = iterator(_Wherenode, &this->_Get_data());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Get_data
	push	eax
	mov	eax, DWORD PTR __Wherenode$14[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$12[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >
	mov	DWORD PTR tv302[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 1798 : 			if (!_Addleft)

	movzx	eax, BYTE PTR __Addleft$13[ebp]
	test	eax, eax
	jne	SHORT $LN9@Insert_noh
	jmp	$LN10@Insert_noh
$LN9@Insert_noh:

; 1799 : 				;	// need to test if insert after is okay
; 1800 : 			else if (_Where == begin())

	lea	eax, DWORD PTR $T8[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::begin
	mov	DWORD PTR tv303[ebp], eax
	mov	ecx, DWORD PTR tv303[ebp]
	mov	DWORD PTR tv283[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	mov	edx, DWORD PTR tv283[ebp]
	push	edx
	lea	ecx, DWORD PTR __Where$12[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator==
	mov	BYTE PTR tv304[ebp], al
	mov	al, BYTE PTR tv304[ebp]
	mov	BYTE PTR $T9[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T8[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	ecx, BYTE PTR $T9[ebp]
	test	ecx, ecx
	je	$LN11@Insert_noh

; 1801 : 				return (_Pairib(_Insert_at(true, _Wherenode,

	mov	BYTE PTR $T7[ebp], 1
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@YAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Wherenode$14[ebp]
	push	edx
	push	1
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Insert_at<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
	mov	DWORD PTR tv305[ebp], eax
	mov	ecx, DWORD PTR tv305[ebp]
	mov	DWORD PTR tv285[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	edx, DWORD PTR $T7[ebp]
	push	edx
	mov	eax, DWORD PTR tv285[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool,void,0>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T6[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Where$12[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN15@Insert_noh

; 1802 : 					_STD forward<_Valty>(_Val), _Newnode), true));
; 1803 : 			else

	jmp	SHORT $LN10@Insert_noh
$LN11@Insert_noh:

; 1804 : 				--_Where;	// need to test if insert before is okay

	lea	ecx, DWORD PTR __Where$12[ebp]
	call	??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator--
$LN10@Insert_noh:

; 1805 : 
; 1806 : 			if (_DEBUG_LT_PRED(this->_Getcomp(),

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIABU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Kfn
	mov	DWORD PTR tv306[ebp], eax
	lea	ecx, DWORD PTR __Where$12[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv307[ebp], eax
	mov	ecx, DWORD PTR tv307[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Key
	mov	DWORD PTR tv308[ebp], eax
	push	1808					; 00000710H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR tv306[ebp]
	push	edx
	mov	eax, DWORD PTR tv308[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@I@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@I@std@@ABIABI@std@@YA_NAAU?$less@I@0@ABI1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned int> &,unsigned int const &,unsigned int const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv309[ebp], al
	movzx	ecx, BYTE PTR tv309[ebp]
	test	ecx, ecx
	je	$LN13@Insert_noh

; 1807 : 				this->_Key(_Where._Mynode()),
; 1808 : 				this->_Kfn(_Val)))
; 1809 : 				return (_Pairib(_Insert_at(_Addleft, _Wherenode,

	mov	BYTE PTR $T5[ebp], 1
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@YAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Wherenode$14[ebp]
	push	edx
	movzx	eax, BYTE PTR __Addleft$13[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Insert_at<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
	mov	DWORD PTR tv310[ebp], eax
	mov	edx, DWORD PTR tv310[ebp]
	mov	DWORD PTR tv289[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, DWORD PTR tv289[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool,void,0>
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Where$12[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN15@Insert_noh

; 1810 : 					_STD forward<_Valty>(_Val), _Newnode), true));
; 1811 : 			else

	jmp	SHORT $LN14@Insert_noh
$LN13@Insert_noh:

; 1812 : 				{	// duplicate, don't insert
; 1813 : 				_Destroy_if_not_nil(_Newnode);

	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Destroy_if_not_nil

; 1814 : 				return (_Pairib(_Where, false));

	mov	BYTE PTR $T3[ebp], 0
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$12[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > &,bool,void,0>
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Where$12[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN15@Insert_noh
$LN14@Insert_noh:

; 1815 : 				}
; 1816 : 			}

	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Where$12[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN8@Insert_noh:
	jmp	SHORT $LN20@Insert_noh
__catch$??$_Insert_nohint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$0:

; 1817 : 		_CATCH_ALL
; 1818 : 		_Destroy_if_not_nil(_Newnode);

	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Destroy_if_not_nil

; 1819 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1820 : 		_CATCH_END

	mov	eax, $LN30@Insert_noh
	ret	0
$LN20@Insert_noh:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN15@Insert_noh
$LN30@Insert_noh:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN15@Insert_noh:

; 1821 : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN34@Insert_noh
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 444				; 000001bcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN34@Insert_noh:
	DD	1
	DD	$LN33@Insert_noh
$LN33@Insert_noh:
	DD	-80					; ffffffb0H
	DD	12					; 0000000cH
	DD	$LN31@Insert_noh
$LN31@Insert_noh:
	DB	95					; 0000005fH
	DB	87					; 00000057H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Insert_nohint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$2:
	lea	ecx, DWORD PTR $T10[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Insert_nohint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$4:
	lea	ecx, DWORD PTR __Where$12[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Insert_nohint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$5:
	lea	ecx, DWORD PTR $T8[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Insert_nohint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$6:
	lea	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Insert_nohint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$7:
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Insert_nohint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-448]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Insert_nohint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insert_nohint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Insert_nohint<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??$_Insert_at@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@1@Z
_TEXT	SEGMENT
tv89 = -244						; size = 4
$T1 = -236						; size = 4
__Pnode$2 = -32						; size = 4
__Newnode$ = -20					; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Val$ = 20						; size = 4
__Node$ = 24						; size = 4
??$_Insert_at@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@1@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Insert_at<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>, COMDAT
; _this$ = ecx

; 1827 : 		{	// add node with value next to _Wherenode, to left if _Addleft

	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 1828 : 		if (max_size() - 1 <= this->_Mysize())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::max_size
	mov	esi, eax
	sub	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAIXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Mysize
	cmp	esi, DWORD PTR [eax]
	ja	SHORT $LN5@Insert_at

; 1829 : 			{	// tree would get too big, fail
; 1830 : 			_Destroy_if_not_nil(_Node);

	mov	eax, DWORD PTR __Node$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Destroy_if_not_nil

; 1831 : 			_Xlength_error("map/set<T> too long");

	push	OFFSET ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN5@Insert_at:

; 1832 : 			}
; 1833 : 		_Nodeptr _Newnode = _Buynode_if_nil(_Node,

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@YAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Node$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Buynode_if_nil@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PAU21@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Buynode_if_nil<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &>
	mov	DWORD PTR __Newnode$[ebp], eax

; 1834 : 			_STD forward<_Valty>(_Val));
; 1835 : 
; 1836 : 		++this->_Mysize();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAIXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Mysize
	mov	DWORD PTR tv89[ebp], eax
	mov	eax, DWORD PTR tv89[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR tv89[ebp]
	mov	DWORD PTR [edx], ecx

; 1837 : 		_Newnode->_Parent = _Wherenode;

	mov	eax, DWORD PTR __Newnode$[ebp]
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 1838 : 
; 1839 : 		if (_Wherenode == this->_Myhead())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myhead
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN6@Insert_at

; 1840 : 			{	// first node in tree, just set head values
; 1841 : 			_Root() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Root
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1842 : 			_Lmost() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Lmost
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1843 : 			_Rmost() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Rmost
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN7@Insert_at
$LN6@Insert_at:

; 1844 : 			}
; 1845 : 		else if (_Addleft)

	movzx	eax, BYTE PTR __Addleft$[ebp]
	test	eax, eax
	je	SHORT $LN8@Insert_at

; 1846 : 			{	// add to left of _Wherenode
; 1847 : 			this->_Left(_Wherenode) = _Newnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1848 : 			if (_Wherenode == _Lmost())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Lmost
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN10@Insert_at

; 1849 : 				_Lmost() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Lmost
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN10@Insert_at:

; 1850 : 			}
; 1851 : 		else

	jmp	SHORT $LN7@Insert_at
$LN8@Insert_at:

; 1852 : 			{	// add to right of _Wherenode
; 1853 : 			this->_Right(_Wherenode) = _Newnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1854 : 			if (_Wherenode == _Rmost())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Rmost
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN7@Insert_at

; 1855 : 				_Rmost() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Rmost
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN7@Insert_at:

; 1856 : 			}
; 1857 : 
; 1858 : 		for (_Nodeptr _Pnode = _Newnode;

	mov	eax, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR __Pnode$2[ebp], eax
$LN4@Insert_at:

; 1859 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	$LN3@Insert_at

; 1860 : 			if (this->_Parent(_Pnode)
; 1861 : 				== this->_Left(this->_Parent(this->_Parent(_Pnode))))

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$2[ebp]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	cmp	ecx, DWORD PTR [eax]
	jne	$LN12@Insert_at

; 1862 : 				{	// fixup red-red in left subtree
; 1863 : 				_Wherenode =

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Wherenode$[ebp], eax

; 1864 : 					this->_Right(this->_Parent(this->_Parent(_Pnode)));
; 1865 : 				if (this->_Color(_Wherenode) == this->_Red)

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN14@Insert_at

; 1866 : 					{	// parent has two red children, blacken both
; 1867 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1868 : 					this->_Color(_Wherenode) = this->_Black;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1869 : 					this->_Color(this->_Parent(this->_Parent(_Pnode)))

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1870 : 						= this->_Red;
; 1871 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$2[ebp], edx

; 1872 : 					}
; 1873 : 				else

	jmp	$LN15@Insert_at
$LN14@Insert_at:

; 1874 : 					{	// parent has red and black children
; 1875 : 					if (_Pnode == this->_Right(this->_Parent(_Pnode)))

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR __Pnode$2[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN16@Insert_at

; 1876 : 						{	// rotate right child to left
; 1877 : 						_Pnode = this->_Parent(_Pnode);

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$2[ebp], ecx

; 1878 : 						_Lrotate(_Pnode);

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Lrotate
$LN16@Insert_at:

; 1879 : 						}
; 1880 : 					this->_Color(this->_Parent(_Pnode)) =

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1881 : 						this->_Black;	// propagate red up
; 1882 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1883 : 						this->_Red;
; 1884 : 					_Rrotate(this->_Parent(this->_Parent(_Pnode)));

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Rrotate
$LN15@Insert_at:

; 1885 : 					}
; 1886 : 				}
; 1887 : 			else

	jmp	$LN13@Insert_at
$LN12@Insert_at:

; 1888 : 				{	// fixup red-red in right subtree
; 1889 : 				_Wherenode =

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Wherenode$[ebp], eax

; 1890 : 					this->_Left(this->_Parent(this->_Parent(_Pnode)));
; 1891 : 				if (this->_Color(_Wherenode) == this->_Red)

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN17@Insert_at

; 1892 : 					{	// parent has two red children, blacken both
; 1893 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1894 : 					this->_Color(_Wherenode) = this->_Black;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1895 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1896 : 						this->_Red;
; 1897 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$2[ebp], edx

; 1898 : 					}
; 1899 : 				else

	jmp	$LN13@Insert_at
$LN17@Insert_at:

; 1900 : 					{	// parent has red and black children
; 1901 : 					if (_Pnode == this->_Left(this->_Parent(_Pnode)))

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR __Pnode$2[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN19@Insert_at

; 1902 : 						{	// rotate left child to right
; 1903 : 						_Pnode = this->_Parent(_Pnode);

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$2[ebp], ecx

; 1904 : 						_Rrotate(_Pnode);

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Rrotate
$LN19@Insert_at:

; 1905 : 						}
; 1906 : 					this->_Color(this->_Parent(_Pnode)) =

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1907 : 						this->_Black;	// propagate red up
; 1908 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1909 : 						this->_Red;
; 1910 : 					_Lrotate(this->_Parent(this->_Parent(_Pnode)));

	mov	eax, DWORD PTR __Pnode$2[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Lrotate
$LN13@Insert_at:

; 1911 : 					}
; 1912 : 				}

	jmp	$LN4@Insert_at
$LN3@Insert_at:

; 1913 : 
; 1914 : 		this->_Color(_Root()) = this->_Black;	// root is always black

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Root
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1915 : 		return (iterator(_Newnode, &this->_Get_data()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Get_data
	push	eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN20@Insert_at:

; 1916 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
??$_Insert_at@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@1@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Insert_at<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@YAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@YAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@0@AAU10@@Z PROC ; std::forward<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@YAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@0@AAU10@@Z ENDP ; std::forward<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
_<_Args_1>$ = 16					; size = 4
_<_Args_2>$ = 20					; size = 4
??$construct@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::construct<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,std::piecewise_construct_t const &,std::tuple<unsigned int const &>,std::tuple<> >, COMDAT
; _this$ = ecx

; 994  : 		{	// construct _Ty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 995  : 		_Mytraits::construct(*this, _Ptr,

	mov	eax, DWORD PTR _<_Args_2>$[ebp]
	push	eax
	call	??$forward@V?$tuple@$$V@std@@@std@@YA$$QAV?$tuple@$$V@0@AAV10@@Z ; std::forward<std::tuple<> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Args_1>$[ebp]
	push	ecx
	call	??$forward@V?$tuple@ABI@std@@@std@@YA$$QAV?$tuple@ABI@0@AAV10@@Z ; std::forward<std::tuple<unsigned int const &> >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _<_Args_0>$[ebp]
	push	edx
	call	??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z ; std::forward<std::piecewise_construct_t const &>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$construct@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@1@PAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::construct<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,std::piecewise_construct_t const &,std::tuple<unsigned int const &>,std::tuple<> >
	add	esp, 20					; 00000014H

; 996  : 			_STD forward<_Types>(_Args)...);
; 997  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??$construct@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::construct<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,std::piecewise_construct_t const &,std::tuple<unsigned int const &>,std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$?0ABI@?$_Tuple_val@ABI@std@@QAE@ABI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Arg$ = 8						; size = 4
??$?0ABI@?$_Tuple_val@ABI@std@@QAE@ABI@Z PROC		; std::_Tuple_val<unsigned int const &>::_Tuple_val<unsigned int const &><unsigned int const &>, COMDAT
; _this$ = ecx

; 164  : 		{	// construct with argument

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 163  : 		: _Val(_STD forward<_Other>(_Arg))

	mov	eax, DWORD PTR __Arg$[ebp]
	push	eax
	call	??$forward@ABI@std@@YAABIABI@Z		; std::forward<unsigned int const &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 165  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0ABI@?$_Tuple_val@ABI@std@@QAE@ABI@Z ENDP		; std::_Tuple_val<unsigned int const &>::_Tuple_val<unsigned int const &><unsigned int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z PROC ; std::tuple<>::tuple<><std::_Exact_args_t,0>, COMDAT
; _this$ = ecx

; 255  : 		{	// construct from one arg per element

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 256  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z ENDP ; std::tuple<>::tuple<><std::_Exact_args_t,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move_al_unchecked1@PAEPAEV?$allocator@PAE@std@@@std@@YAPAPAEPAPAE00AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninitialized_move_al_unchecked1@PAEPAEV?$allocator@PAE@std@@@std@@YAPAPAEPAPAE00AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Uninitialized_move_al_unchecked1<unsigned char *,unsigned char *,std::allocator<unsigned char *> >, COMDAT

; 292  : 	{	// move [_First, _Last) to raw _Dest, using default _Alloc construct, memmove optimization

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 293  : 	return (_Copy_memmove(_First, _Last, _Dest));

	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Copy_memmove@PAPAEPAPAE@std@@YAPAPAEPAPAE00@Z ; std::_Copy_memmove<unsigned char * *,unsigned char * *>
	add	esp, 12					; 0000000cH

; 294  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_move_al_unchecked1@PAEPAEV?$allocator@PAE@std@@@std@@YAPAPAEPAPAE00AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Uninitialized_move_al_unchecked1<unsigned char *,unsigned char *,std::allocator<unsigned char *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_copy_al_unchecked1@$$CBEEV?$allocator@E@std@@@std@@YAPAEPBE0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninitialized_copy_al_unchecked1@$$CBEEV?$allocator@E@std@@@std@@YAPAEPBE0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Uninitialized_copy_al_unchecked1<unsigned char const ,unsigned char,std::allocator<unsigned char> >, COMDAT

; 239  : 	{	// copy [_First, _Last) to raw _Dest, using default _Alloc construct, memmove optimization

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 240  : 	return (_Copy_memmove(_First, _Last, _Dest));

	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Copy_memmove@PBEPAE@std@@YAPAEPBE0PAE@Z ; std::_Copy_memmove<unsigned char const *,unsigned char *>
	add	esp, 12					; 0000000cH

; 241  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_copy_al_unchecked1@$$CBEEV?$allocator@E@std@@@std@@YAPAEPBE0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Uninitialized_copy_al_unchecked1<unsigned char const ,unsigned char,std::allocator<unsigned char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Ptr_copy_cat@$$CBEE@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQBEABQAE@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Ptr_copy_cat@$$CBEE@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQBEABQAE@Z PROC ; std::_Ptr_copy_cat<unsigned char const ,unsigned char>, COMDAT

; 792  : 	{	// return pointer copy optimization category for pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 793  : 	return {};

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 794  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_copy_cat@$$CBEE@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQBEABQAE@Z ENDP ; std::_Ptr_copy_cat<unsigned char const ,unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_copy_al_unchecked1@EEV?$allocator@E@std@@@std@@YAPAEPAE00AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninitialized_copy_al_unchecked1@EEV?$allocator@E@std@@@std@@YAPAEPAE00AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Uninitialized_copy_al_unchecked1<unsigned char,unsigned char,std::allocator<unsigned char> >, COMDAT

; 239  : 	{	// copy [_First, _Last) to raw _Dest, using default _Alloc construct, memmove optimization

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 240  : 	return (_Copy_memmove(_First, _Last, _Dest));

	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Copy_memmove@PAEPAE@std@@YAPAEPAE00@Z ; std::_Copy_memmove<unsigned char *,unsigned char *>
	add	esp, 12					; 0000000cH

; 241  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_copy_al_unchecked1@EEV?$allocator@E@std@@@std@@YAPAEPAE00AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Uninitialized_copy_al_unchecked1<unsigned char,unsigned char,std::allocator<unsigned char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z
_TEXT	SEGMENT
tv740 = -536						; size = 4
tv416 = -536						; size = 4
tv957 = -529						; size = 1
tv908 = -529						; size = 1
tv956 = -528						; size = 4
tv907 = -528						; size = 4
tv955 = -524						; size = 4
tv906 = -524						; size = 4
tv954 = -520						; size = 4
tv905 = -520						; size = 4
tv953 = -513						; size = 1
tv904 = -513						; size = 1
tv952 = -512						; size = 4
tv903 = -512						; size = 4
tv951 = -508						; size = 4
tv902 = -508						; size = 4
tv864 = -504						; size = 4
tv835 = -504						; size = 4
tv937 = -501						; size = 1
tv888 = -501						; size = 1
tv947 = -500						; size = 4
tv936 = -500						; size = 4
tv898 = -500						; size = 4
tv887 = -500						; size = 4
tv935 = -496						; size = 4
tv886 = -496						; size = 4
tv946 = -493						; size = 1
tv931 = -493						; size = 1
tv926 = -493						; size = 1
tv919 = -493						; size = 1
tv897 = -493						; size = 1
tv882 = -493						; size = 1
tv557 = -493						; size = 1
tv181 = -493						; size = 1
tv960 = -492						; size = 4
tv945 = -492						; size = 4
tv940 = -492						; size = 4
tv934 = -492						; size = 4
tv930 = -492						; size = 4
tv925 = -492						; size = 4
tv918 = -492						; size = 4
tv911 = -492						; size = 4
tv896 = -492						; size = 4
tv891 = -492						; size = 4
tv885 = -492						; size = 4
tv881 = -492						; size = 4
tv638 = -492						; size = 4
tv233 = -492						; size = 4
tv922 = -489						; size = 1
tv915 = -489						; size = 1
tv773 = -489						; size = 1
tv433 = -489						; size = 1
tv959 = -488						; size = 4
tv944 = -488						; size = 4
tv939 = -488						; size = 4
tv933 = -488						; size = 4
tv929 = -488						; size = 4
tv924 = -488						; size = 4
tv917 = -488						; size = 4
tv910 = -488						; size = 4
tv895 = -488						; size = 4
tv890 = -488						; size = 4
tv884 = -488						; size = 4
tv880 = -488						; size = 4
tv875 = -488						; size = 4
tv850 = -488						; size = 4
tv845 = -488						; size = 4
tv821 = -488						; size = 4
tv816 = -488						; size = 4
tv654 = -488						; size = 4
tv314 = -488						; size = 4
tv963 = -484						; size = 4
tv962 = -484						; size = 4
tv961 = -484						; size = 4
tv958 = -484						; size = 4
tv943 = -484						; size = 4
tv942 = -484						; size = 4
tv941 = -484						; size = 4
tv938 = -484						; size = 4
tv932 = -484						; size = 4
tv928 = -484						; size = 4
tv927 = -484						; size = 4
tv923 = -484						; size = 4
tv921 = -484						; size = 4
tv920 = -484						; size = 4
tv916 = -484						; size = 4
tv914 = -484						; size = 4
tv913 = -484						; size = 4
tv912 = -484						; size = 4
tv909 = -484						; size = 4
tv894 = -484						; size = 4
tv893 = -484						; size = 4
tv892 = -484						; size = 4
tv889 = -484						; size = 4
tv883 = -484						; size = 4
tv879 = -484						; size = 4
tv793 = -484						; size = 4
tv757 = -484						; size = 4
tv505 = -484						; size = 4
tv449 = -484						; size = 4
tv330 = -484						; size = 4
tv92 = -484						; size = 4
tv66 = -484						; size = 4
$T2 = -476						; size = 4
$T3 = -464						; size = 16
$T4 = -440						; size = 12
$T5 = -417						; size = 1
$T6 = -408						; size = 12
$T7 = -385						; size = 1
$T8 = -376						; size = 12
$T9 = -353						; size = 1
$T10 = -344						; size = 12
$T11 = -321						; size = 1
$T12 = -312						; size = 12
$T13 = -289						; size = 1
$T14 = -280						; size = 12
$T15 = -257						; size = 1
__Leftish$ = -53					; size = 1
__Next$ = -44						; size = 12
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
__Val$ = 24						; size = 4
__Newnode$ = 28						; size = 4
??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Insert_hint<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>, COMDAT
; _this$ = ecx

; 1655 : 		{	// try to insert node using _Where as a hint

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 520				; 00000208H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-536]
	mov	ecx, 130				; 00000082H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1656 : 		const_iterator _Next;

	lea	ecx, DWORD PTR __Next$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 1

; 1657 : 		bool _Leftish = false;	// assume nearest point is end of sequence

	mov	BYTE PTR __Leftish$[ebp], 0

; 1658 : 
; 1659 : 		_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 1660 : 
; 1661 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1662 : 		if (_Where._Getcont() != &this->_Get_data())

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	DWORD PTR tv66[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Get_data
	cmp	DWORD PTR tv66[ebp], eax
	je	SHORT $LN3@Insert_hin

; 1663 : 			_DEBUG_ERROR("map/set insert iterator outside range");

	push	1663					; 0000067fH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EM@MHOKKPFH@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAn?$AAs?$AAe?$AAr?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN3@Insert_hin:

; 1664 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1665 : 
; 1666 : 		if (size() == 0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::size
	test	eax, eax
	jne	SHORT $LN4@Insert_hin

; 1667 : 			return (_Insert_at(true, this->_Myhead(),

	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myhead
	mov	edx, DWORD PTR [eax]
	push	edx
	push	1
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Insert_at<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin
	jmp	$LN5@Insert_hin
$LN4@Insert_hin:

; 1668 : 				_STD forward<_Valty>(_Val), _Newnode));	// empty tree
; 1669 : 		else if (this->_Multi)

	xor	eax, eax
	je	$LN6@Insert_hin

; 1670 : 			{	// insert even if duplicate
; 1671 : 			if (_Where == begin())

	lea	eax, DWORD PTR $T14[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::begin
	mov	DWORD PTR tv793[ebp], eax
	mov	ecx, DWORD PTR tv793[ebp]
	mov	DWORD PTR tv816[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	mov	edx, DWORD PTR tv816[ebp]
	push	edx
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator==
	mov	BYTE PTR tv773[ebp], al
	mov	al, BYTE PTR tv773[ebp]
	mov	BYTE PTR $T15[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T14[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	ecx, BYTE PTR $T15[ebp]
	test	ecx, ecx
	je	$LN8@Insert_hin

; 1672 : 				{	// insert at beginning if before first element
; 1673 : 				if (!_DEBUG_LT_PRED(this->_Getcomp(),

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Kfn
	mov	DWORD PTR tv757[ebp], eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv654[ebp], eax
	mov	ecx, DWORD PTR tv654[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Key
	mov	DWORD PTR tv638[ebp], eax
	push	1674					; 0000068aH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR tv757[ebp]
	push	edx
	mov	eax, DWORD PTR tv638[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv557[ebp], al
	movzx	ecx, BYTE PTR tv557[ebp]
	test	ecx, ecx
	jne	SHORT $LN10@Insert_hin

; 1674 : 					this->_Key(_Where._Mynode()), this->_Kfn(_Val)))
; 1675 : 					return (_Insert_at(true, _Where._Mynode(),

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv505[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv505[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Insert_at<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin
$LN10@Insert_hin:

; 1676 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1677 : 				_Leftish = true;	// nearest point is beginning of sequence

	mov	BYTE PTR __Leftish$[ebp], 1
	jmp	$LN9@Insert_hin
$LN8@Insert_hin:

; 1678 : 				}
; 1679 : 			else if (_Where == end())

	lea	eax, DWORD PTR $T12[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::end
	mov	DWORD PTR tv449[ebp], eax
	mov	ecx, DWORD PTR tv449[ebp]
	mov	DWORD PTR tv821[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	mov	edx, DWORD PTR tv821[ebp]
	push	edx
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator==
	mov	BYTE PTR tv433[ebp], al
	mov	al, BYTE PTR tv433[ebp]
	mov	BYTE PTR $T13[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T12[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	ecx, BYTE PTR $T13[ebp]
	test	ecx, ecx
	je	$LN11@Insert_hin

; 1680 : 				{	// insert at end if after last element
; 1681 : 				if (!_DEBUG_LT_PRED(this->_Getcomp(),

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Rmost
	mov	DWORD PTR tv330[ebp], eax
	mov	eax, DWORD PTR tv330[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Key
	mov	DWORD PTR tv314[ebp], eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Kfn
	mov	DWORD PTR tv233[ebp], eax
	push	1682					; 00000692H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR tv314[ebp]
	push	eax
	mov	ecx, DWORD PTR tv233[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv181[ebp], al
	movzx	edx, BYTE PTR tv181[ebp]
	test	edx, edx
	jne	SHORT $LN13@Insert_hin

; 1682 : 					this->_Kfn(_Val), this->_Key(_Rmost())))
; 1683 : 					return (_Insert_at(false, _Rmost(),

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Rmost
	mov	DWORD PTR tv92[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv92[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	push	0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Insert_at<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin
$LN13@Insert_hin:

; 1684 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1685 : 				}
; 1686 : 			else if (!_DEBUG_LT_PRED(this->_Getcomp(),

	jmp	$LN9@Insert_hin
$LN11@Insert_hin:

; 1687 : 				this->_Key(_Where._Mynode()), this->_Kfn(_Val))
; 1688 : 				&& !_DEBUG_LT_PRED(this->_Getcomp(),

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Kfn
	mov	DWORD PTR tv879[ebp], eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv880[ebp], eax
	mov	ecx, DWORD PTR tv880[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Key
	mov	DWORD PTR tv881[ebp], eax
	push	1687					; 00000697H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR tv879[ebp]
	push	edx
	mov	eax, DWORD PTR tv881[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv882[ebp], al
	movzx	ecx, BYTE PTR tv882[ebp]
	test	ecx, ecx
	jne	$LN14@Insert_hin
	lea	eax, DWORD PTR __Where$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??4?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
	mov	DWORD PTR tv883[ebp], eax
	mov	ecx, DWORD PTR tv883[ebp]
	call	??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator--
	mov	DWORD PTR tv884[ebp], eax
	mov	ecx, DWORD PTR tv884[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv885[ebp], eax
	mov	ecx, DWORD PTR tv885[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Key
	mov	DWORD PTR tv886[ebp], eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Kfn
	mov	DWORD PTR tv887[ebp], eax
	push	1690					; 0000069aH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR tv886[ebp]
	push	eax
	mov	ecx, DWORD PTR tv887[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv888[ebp], al
	movzx	edx, BYTE PTR tv888[ebp]
	test	edx, edx
	jne	$LN14@Insert_hin

; 1689 : 					this->_Kfn(_Val),
; 1690 : 					this->_Key((--(_Next = _Where))._Mynode())))
; 1691 : 				{	// insert before _Where
; 1692 : 				if (this->_Isnil(this->_Right(_Next._Mynode())))

	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv889[ebp], eax
	mov	eax, DWORD PTR tv889[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	DWORD PTR tv890[ebp], eax
	mov	ecx, DWORD PTR tv890[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Isnil
	add	esp, 4
	mov	DWORD PTR tv891[ebp], eax
	mov	eax, DWORD PTR tv891[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN16@Insert_hin

; 1693 : 					return (_Insert_at(false, _Next._Mynode(),

	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv892[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv892[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Insert_at<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin

; 1694 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1695 : 				else

	jmp	SHORT $LN17@Insert_hin
$LN16@Insert_hin:

; 1696 : 					return (_Insert_at(true, _Where._Mynode(),

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv893[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv893[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Insert_at<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin
$LN17@Insert_hin:

; 1697 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1698 : 				}
; 1699 : 			else if (!_DEBUG_LT_PRED(this->_Getcomp(),

	jmp	$LN9@Insert_hin
$LN14@Insert_hin:

; 1700 : 				this->_Kfn(_Val), this->_Key(_Where._Mynode()))
; 1701 : 				&& (++(_Next = _Where) == end()

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv894[ebp], eax
	mov	eax, DWORD PTR tv894[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Key
	mov	DWORD PTR tv895[ebp], eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Kfn
	mov	DWORD PTR tv896[ebp], eax
	push	1700					; 000006a4H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR tv895[ebp]
	push	edx
	mov	eax, DWORD PTR tv896[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv897[ebp], al
	movzx	ecx, BYTE PTR tv897[ebp]
	test	ecx, ecx
	jne	$LN37@Insert_hin
	lea	edx, DWORD PTR $T10[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::end
	mov	DWORD PTR tv898[ebp], eax
	mov	eax, DWORD PTR tv898[ebp]
	mov	DWORD PTR tv835[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 2
	mov	DWORD PTR $T2[ebp], ecx
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??4?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
	mov	DWORD PTR tv902[ebp], eax
	mov	ecx, DWORD PTR tv902[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator++
	mov	DWORD PTR tv903[ebp], eax
	mov	eax, DWORD PTR tv835[ebp]
	push	eax
	mov	ecx, DWORD PTR tv903[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator==
	mov	BYTE PTR tv904[ebp], al
	movzx	ecx, BYTE PTR tv904[ebp]
	test	ecx, ecx
	jne	SHORT $LN36@Insert_hin
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Kfn
	mov	DWORD PTR tv905[ebp], eax
	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv906[ebp], eax
	mov	eax, DWORD PTR tv906[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Key
	mov	DWORD PTR tv907[ebp], eax
	push	1703					; 000006a7H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	ecx, DWORD PTR tv905[ebp]
	push	ecx
	mov	edx, DWORD PTR tv907[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv908[ebp], al
	movzx	eax, BYTE PTR tv908[ebp]
	test	eax, eax
	jne	SHORT $LN37@Insert_hin
$LN36@Insert_hin:
	mov	DWORD PTR tv416[ebp], 1
	jmp	SHORT $LN38@Insert_hin
$LN37@Insert_hin:
	mov	DWORD PTR tv416[ebp], 0
$LN38@Insert_hin:
	mov	cl, BYTE PTR tv416[ebp]
	mov	BYTE PTR $T11[ebp], cl
	mov	DWORD PTR __$EHRec$[ebp+12], 2
	mov	edx, DWORD PTR $T2[ebp]
	and	edx, 2
	je	SHORT $LN52@Insert_hin
	and	DWORD PTR $T2[ebp], -3			; fffffffdH
	lea	ecx, DWORD PTR $T10[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN52@Insert_hin:
	movzx	eax, BYTE PTR $T11[ebp]
	test	eax, eax
	je	$LN18@Insert_hin

; 1702 : 					|| !_DEBUG_LT_PRED(this->_Getcomp(),
; 1703 : 						this->_Key(_Next._Mynode()), this->_Kfn(_Val))))
; 1704 : 				{	// insert after _Where
; 1705 : 				if (this->_Isnil(this->_Right(_Where._Mynode())))

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv909[ebp], eax
	mov	eax, DWORD PTR tv909[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	DWORD PTR tv910[ebp], eax
	mov	ecx, DWORD PTR tv910[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Isnil
	add	esp, 4
	mov	DWORD PTR tv911[ebp], eax
	mov	eax, DWORD PTR tv911[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN20@Insert_hin

; 1706 : 					return (_Insert_at(false, _Where._Mynode(),

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv912[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv912[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Insert_at<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin

; 1707 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1708 : 				else

	jmp	SHORT $LN21@Insert_hin
$LN20@Insert_hin:

; 1709 : 					return (_Insert_at(true, _Next._Mynode(),

	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv913[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv913[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Insert_at<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin
$LN21@Insert_hin:

; 1710 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1711 : 				}
; 1712 : 			else

	jmp	SHORT $LN9@Insert_hin
$LN18@Insert_hin:

; 1713 : 				_Leftish = true;	// nearest point is beginning of sequence

	mov	BYTE PTR __Leftish$[ebp], 1
$LN9@Insert_hin:

; 1714 : 			}
; 1715 : 		else

	jmp	$LN5@Insert_hin
$LN6@Insert_hin:

; 1716 : 			{	// insert only if unique
; 1717 : 			if (_Where == begin())

	lea	eax, DWORD PTR $T8[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::begin
	mov	DWORD PTR tv914[ebp], eax
	mov	ecx, DWORD PTR tv914[ebp]
	mov	DWORD PTR tv845[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	mov	edx, DWORD PTR tv845[ebp]
	push	edx
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator==
	mov	BYTE PTR tv915[ebp], al
	mov	al, BYTE PTR tv915[ebp]
	mov	BYTE PTR $T9[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T8[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	ecx, BYTE PTR $T9[ebp]
	test	ecx, ecx
	je	$LN22@Insert_hin

; 1718 : 				{	// insert at beginning if before first element
; 1719 : 				if (_DEBUG_LT_PRED(this->_Getcomp(),

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv916[ebp], eax
	mov	eax, DWORD PTR tv916[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Key
	mov	DWORD PTR tv917[ebp], eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Kfn
	mov	DWORD PTR tv918[ebp], eax
	push	1720					; 000006b8H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR tv917[ebp]
	push	edx
	mov	eax, DWORD PTR tv918[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv919[ebp], al
	movzx	ecx, BYTE PTR tv919[ebp]
	test	ecx, ecx
	je	SHORT $LN24@Insert_hin

; 1720 : 					this->_Kfn(_Val), this->_Key(_Where._Mynode())))
; 1721 : 					return (_Insert_at(true, _Where._Mynode(),

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv920[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv920[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Insert_at<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin
$LN24@Insert_hin:

; 1722 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1723 : 				}

	jmp	$LN5@Insert_hin
$LN22@Insert_hin:

; 1724 : 			else if (_Where == end())

	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::end
	mov	DWORD PTR tv921[ebp], eax
	mov	ecx, DWORD PTR tv921[ebp]
	mov	DWORD PTR tv850[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 7
	mov	edx, DWORD PTR tv850[ebp]
	push	edx
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator==
	mov	BYTE PTR tv922[ebp], al
	mov	al, BYTE PTR tv922[ebp]
	mov	BYTE PTR $T7[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T6[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	ecx, BYTE PTR $T7[ebp]
	test	ecx, ecx
	je	$LN25@Insert_hin

; 1725 : 				{	// insert at end if after last element
; 1726 : 				if (_DEBUG_LT_PRED(this->_Getcomp(),

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Kfn
	mov	DWORD PTR tv923[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Rmost
	mov	DWORD PTR tv924[ebp], eax
	mov	ecx, DWORD PTR tv924[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Key
	mov	DWORD PTR tv925[ebp], eax
	push	1727					; 000006bfH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR tv923[ebp]
	push	eax
	mov	ecx, DWORD PTR tv925[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv926[ebp], al
	movzx	edx, BYTE PTR tv926[ebp]
	test	edx, edx
	je	SHORT $LN27@Insert_hin

; 1727 : 					this->_Key(_Rmost()), this->_Kfn(_Val)))
; 1728 : 					return (_Insert_at(false, _Rmost(),

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Rmost
	mov	DWORD PTR tv927[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv927[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	push	0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Insert_at<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin
$LN27@Insert_hin:

; 1729 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1730 : 				}
; 1731 : 			else if (_DEBUG_LT_PRED(this->_Getcomp(),

	jmp	$LN5@Insert_hin
$LN25@Insert_hin:

; 1732 : 				this->_Kfn(_Val), this->_Key(_Where._Mynode()))
; 1733 : 				&& _DEBUG_LT_PRED(this->_Getcomp(),

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv928[ebp], eax
	mov	eax, DWORD PTR tv928[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Key
	mov	DWORD PTR tv929[ebp], eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Kfn
	mov	DWORD PTR tv930[ebp], eax
	push	1732					; 000006c4H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR tv929[ebp]
	push	edx
	mov	eax, DWORD PTR tv930[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv931[ebp], al
	movzx	ecx, BYTE PTR tv931[ebp]
	test	ecx, ecx
	je	$LN28@Insert_hin
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Kfn
	mov	DWORD PTR tv932[ebp], eax
	lea	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??4?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
	mov	DWORD PTR tv933[ebp], eax
	mov	ecx, DWORD PTR tv933[ebp]
	call	??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator--
	mov	DWORD PTR tv934[ebp], eax
	mov	ecx, DWORD PTR tv934[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv935[ebp], eax
	mov	edx, DWORD PTR tv935[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Key
	mov	DWORD PTR tv936[ebp], eax
	push	1735					; 000006c7H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR tv932[ebp]
	push	eax
	mov	ecx, DWORD PTR tv936[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv937[ebp], al
	movzx	edx, BYTE PTR tv937[ebp]
	test	edx, edx
	je	$LN28@Insert_hin

; 1734 : 					this->_Key((--(_Next = _Where))._Mynode()),
; 1735 : 					this->_Kfn(_Val)))
; 1736 : 				{	// insert before _Where
; 1737 : 				if (this->_Isnil(this->_Right(_Next._Mynode())))

	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv938[ebp], eax
	mov	eax, DWORD PTR tv938[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	DWORD PTR tv939[ebp], eax
	mov	ecx, DWORD PTR tv939[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Isnil
	add	esp, 4
	mov	DWORD PTR tv940[ebp], eax
	mov	eax, DWORD PTR tv940[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN30@Insert_hin

; 1738 : 					return (_Insert_at(false, _Next._Mynode(),

	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv941[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv941[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Insert_at<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin

; 1739 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1740 : 				else

	jmp	SHORT $LN31@Insert_hin
$LN30@Insert_hin:

; 1741 : 					return (_Insert_at(true, _Where._Mynode(),

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv942[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv942[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Insert_at<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin
$LN31@Insert_hin:

; 1742 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1743 : 				}
; 1744 : 			else if (_DEBUG_LT_PRED(this->_Getcomp(),

	jmp	$LN5@Insert_hin
$LN28@Insert_hin:

; 1745 : 				this->_Key(_Where._Mynode()), this->_Kfn(_Val))
; 1746 : 				&& (++(_Next = _Where) == end()

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Kfn
	mov	DWORD PTR tv943[ebp], eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv944[ebp], eax
	mov	ecx, DWORD PTR tv944[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Key
	mov	DWORD PTR tv945[ebp], eax
	push	1745					; 000006d1H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR tv943[ebp]
	push	edx
	mov	eax, DWORD PTR tv945[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv946[ebp], al
	movzx	ecx, BYTE PTR tv946[ebp]
	test	ecx, ecx
	je	$LN40@Insert_hin
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::end
	mov	DWORD PTR tv947[ebp], eax
	mov	eax, DWORD PTR tv947[ebp]
	mov	DWORD PTR tv864[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 8
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 4
	mov	DWORD PTR $T2[ebp], ecx
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??4?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
	mov	DWORD PTR tv951[ebp], eax
	mov	ecx, DWORD PTR tv951[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator++
	mov	DWORD PTR tv952[ebp], eax
	mov	eax, DWORD PTR tv864[ebp]
	push	eax
	mov	ecx, DWORD PTR tv952[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator==
	mov	BYTE PTR tv953[ebp], al
	movzx	ecx, BYTE PTR tv953[ebp]
	test	ecx, ecx
	jne	SHORT $LN39@Insert_hin
	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv954[ebp], eax
	mov	edx, DWORD PTR tv954[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Key
	mov	DWORD PTR tv955[ebp], eax
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Kfn
	mov	DWORD PTR tv956[ebp], eax
	push	1748					; 000006d4H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	ecx, DWORD PTR tv955[ebp]
	push	ecx
	mov	edx, DWORD PTR tv956[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv957[ebp], al
	movzx	eax, BYTE PTR tv957[ebp]
	test	eax, eax
	je	SHORT $LN40@Insert_hin
$LN39@Insert_hin:
	mov	DWORD PTR tv740[ebp], 1
	jmp	SHORT $LN41@Insert_hin
$LN40@Insert_hin:
	mov	DWORD PTR tv740[ebp], 0
$LN41@Insert_hin:
	mov	cl, BYTE PTR tv740[ebp]
	mov	BYTE PTR $T5[ebp], cl
	mov	DWORD PTR __$EHRec$[ebp+12], 2
	mov	edx, DWORD PTR $T2[ebp]
	and	edx, 4
	je	SHORT $LN57@Insert_hin
	and	DWORD PTR $T2[ebp], -5			; fffffffbH
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN57@Insert_hin:
	movzx	eax, BYTE PTR $T5[ebp]
	test	eax, eax
	je	$LN5@Insert_hin

; 1747 : 					|| _DEBUG_LT_PRED(this->_Getcomp(),
; 1748 : 						this->_Kfn(_Val), this->_Key(_Next._Mynode()))))
; 1749 : 				{	// insert after _Where
; 1750 : 				if (this->_Isnil(this->_Right(_Where._Mynode())))

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv958[ebp], eax
	mov	eax, DWORD PTR tv958[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	DWORD PTR tv959[ebp], eax
	mov	ecx, DWORD PTR tv959[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Isnil
	add	esp, 4
	mov	DWORD PTR tv960[ebp], eax
	mov	eax, DWORD PTR tv960[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN33@Insert_hin

; 1751 : 					return (_Insert_at(false, _Where._Mynode(),

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv961[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv961[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Insert_at<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin

; 1752 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1753 : 				else

	jmp	SHORT $LN5@Insert_hin
$LN33@Insert_hin:

; 1754 : 					return (_Insert_at(true, _Next._Mynode(),

	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv962[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv962[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Insert_at<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin
$LN5@Insert_hin:
	jmp	SHORT $LN42@Insert_hin
__catch$??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$0:

; 1755 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1756 : 				}
; 1757 : 			}
; 1758 : 		_CATCH_ALL
; 1759 : 		_Destroy_if_not_nil(_Newnode);

	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Destroy_if_not_nil

; 1760 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1761 : 		_CATCH_END

	mov	eax, $LN60@Insert_hin
	ret	0
$LN42@Insert_hin:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$1
$LN60@Insert_hin:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$1:

; 1762 : 
; 1763 : 		return (_Insert_nohint(_Leftish,

	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &>
	add	esp, 4
	push	eax
	movzx	edx, BYTE PTR __Leftish$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_nohint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Insert_nohint<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
	mov	DWORD PTR tv963[ebp], eax
	mov	ecx, DWORD PTR tv963[ebp]
	mov	DWORD PTR tv875[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 10		; 0000000aH
	mov	edx, DWORD PTR tv875[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN35@Insert_hin:

; 1764 : 			_STD forward<_Valty>(_Val), _Newnode).first);
; 1765 : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN90@Insert_hin
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 536				; 00000218H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
	npad	3
$LN90@Insert_hin:
	DD	1
	DD	$LN89@Insert_hin
$LN89@Insert_hin:
	DD	-44					; ffffffd4H
	DD	12					; 0000000cH
	DD	$LN87@Insert_hin
$LN87@Insert_hin:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$2:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$3:
	lea	ecx, DWORD PTR __Next$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$5:
	lea	ecx, DWORD PTR $T14[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$6:
	lea	ecx, DWORD PTR $T12[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$7:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 2
	je	$LN51@Insert_hin
	and	DWORD PTR $T2[ebp], -3			; fffffffdH
	lea	ecx, DWORD PTR $T10[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN51@Insert_hin:
	ret	0
__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$8:
	lea	ecx, DWORD PTR $T8[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$9:
	lea	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$10:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 4
	je	$LN56@Insert_hin
	and	DWORD PTR $T2[ebp], -5			; fffffffbH
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN56@Insert_hin:
	ret	0
__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z$11:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@XZ
__ehhandler$??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-540]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Insert_hint<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z
_TEXT	SEGMENT
tv92 = -236						; size = 4
__Pnode$ = -36						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
_<_Val_0>$ = 8						; size = 4
_<_Val_1>$ = 12						; size = 4
_<_Val_2>$ = 16						; size = 4
??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Buynode<std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >, COMDAT
; _this$ = ecx

; 880  : 		{	// allocate a node with defaults and set links and value

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 881  : 		_Nodeptr _Pnode = _Buynode0();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Buynode0
	mov	DWORD PTR __Pnode$[ebp], eax

; 882  : 
; 883  : 		this->_Color(_Pnode) = _Red;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 884  : 		this->_Isnil(_Pnode) = false;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Isnil
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 885  : 
; 886  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 887  : 		this->_Getal().construct(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myval
	add	esp, 4
	mov	DWORD PTR tv92[ebp], eax
	mov	ecx, DWORD PTR _<_Val_2>$[ebp]
	push	ecx
	call	??$forward@V?$tuple@$$V@std@@@std@@YA$$QAV?$tuple@$$V@0@AAV10@@Z ; std::forward<std::tuple<> >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _<_Val_1>$[ebp]
	push	edx
	call	??$forward@V?$tuple@ABQAE@std@@@std@@YA$$QAV?$tuple@ABQAE@0@AAV10@@Z ; std::forward<std::tuple<unsigned char * const &> >
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _<_Val_0>$[ebp]
	push	eax
	call	??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z ; std::forward<std::piecewise_construct_t const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR tv92[ebp]
	push	ecx
	call	??$addressof@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@0@AAU10@@Z ; std::addressof<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
	mov	ecx, eax
	call	??$construct@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::construct<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >
	jmp	SHORT $LN4@Buynode
__catch$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z$0:

; 888  : 			_STD addressof(_Myval(_Pnode)),
; 889  : 				_STD forward<_Valty>(_Val)...);
; 890  : 		_CATCH_ALL
; 891  : 		_Freenode0(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Freenode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Freenode0

; 892  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 893  : 		_CATCH_END

	mov	eax, $LN7@Buynode
	ret	0
$LN4@Buynode:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z$1
$LN7@Buynode:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z$1:

; 894  : 
; 895  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
$LN3@Buynode:

; 896  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-240]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Buynode<std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > >, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z
_TEXT	SEGMENT
tv740 = -536						; size = 4
tv416 = -536						; size = 4
tv957 = -529						; size = 1
tv908 = -529						; size = 1
tv956 = -528						; size = 4
tv907 = -528						; size = 4
tv955 = -524						; size = 4
tv906 = -524						; size = 4
tv954 = -520						; size = 4
tv905 = -520						; size = 4
tv953 = -513						; size = 1
tv904 = -513						; size = 1
tv952 = -512						; size = 4
tv903 = -512						; size = 4
tv951 = -508						; size = 4
tv902 = -508						; size = 4
tv864 = -504						; size = 4
tv835 = -504						; size = 4
tv937 = -501						; size = 1
tv888 = -501						; size = 1
tv947 = -500						; size = 4
tv936 = -500						; size = 4
tv898 = -500						; size = 4
tv887 = -500						; size = 4
tv935 = -496						; size = 4
tv886 = -496						; size = 4
tv946 = -493						; size = 1
tv931 = -493						; size = 1
tv926 = -493						; size = 1
tv919 = -493						; size = 1
tv897 = -493						; size = 1
tv882 = -493						; size = 1
tv557 = -493						; size = 1
tv181 = -493						; size = 1
tv960 = -492						; size = 4
tv945 = -492						; size = 4
tv940 = -492						; size = 4
tv934 = -492						; size = 4
tv930 = -492						; size = 4
tv925 = -492						; size = 4
tv918 = -492						; size = 4
tv911 = -492						; size = 4
tv896 = -492						; size = 4
tv891 = -492						; size = 4
tv885 = -492						; size = 4
tv881 = -492						; size = 4
tv638 = -492						; size = 4
tv233 = -492						; size = 4
tv922 = -489						; size = 1
tv915 = -489						; size = 1
tv773 = -489						; size = 1
tv433 = -489						; size = 1
tv959 = -488						; size = 4
tv944 = -488						; size = 4
tv939 = -488						; size = 4
tv933 = -488						; size = 4
tv929 = -488						; size = 4
tv924 = -488						; size = 4
tv917 = -488						; size = 4
tv910 = -488						; size = 4
tv895 = -488						; size = 4
tv890 = -488						; size = 4
tv884 = -488						; size = 4
tv880 = -488						; size = 4
tv875 = -488						; size = 4
tv850 = -488						; size = 4
tv845 = -488						; size = 4
tv821 = -488						; size = 4
tv816 = -488						; size = 4
tv654 = -488						; size = 4
tv314 = -488						; size = 4
tv963 = -484						; size = 4
tv962 = -484						; size = 4
tv961 = -484						; size = 4
tv958 = -484						; size = 4
tv943 = -484						; size = 4
tv942 = -484						; size = 4
tv941 = -484						; size = 4
tv938 = -484						; size = 4
tv932 = -484						; size = 4
tv928 = -484						; size = 4
tv927 = -484						; size = 4
tv923 = -484						; size = 4
tv921 = -484						; size = 4
tv920 = -484						; size = 4
tv916 = -484						; size = 4
tv914 = -484						; size = 4
tv913 = -484						; size = 4
tv912 = -484						; size = 4
tv909 = -484						; size = 4
tv894 = -484						; size = 4
tv893 = -484						; size = 4
tv892 = -484						; size = 4
tv889 = -484						; size = 4
tv883 = -484						; size = 4
tv879 = -484						; size = 4
tv793 = -484						; size = 4
tv757 = -484						; size = 4
tv505 = -484						; size = 4
tv449 = -484						; size = 4
tv330 = -484						; size = 4
tv92 = -484						; size = 4
tv66 = -484						; size = 4
$T2 = -476						; size = 4
$T3 = -464						; size = 16
$T4 = -440						; size = 12
$T5 = -417						; size = 1
$T6 = -408						; size = 12
$T7 = -385						; size = 1
$T8 = -376						; size = 12
$T9 = -353						; size = 1
$T10 = -344						; size = 12
$T11 = -321						; size = 1
$T12 = -312						; size = 12
$T13 = -289						; size = 1
$T14 = -280						; size = 12
$T15 = -257						; size = 1
__Leftish$ = -53					; size = 1
__Next$ = -44						; size = 12
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
__Val$ = 24						; size = 4
__Newnode$ = 28						; size = 4
??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Insert_hint<std::pair<unsigned char * const,unsigned int> &,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>, COMDAT
; _this$ = ecx

; 1655 : 		{	// try to insert node using _Where as a hint

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 520				; 00000208H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-536]
	mov	ecx, 130				; 00000082H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1656 : 		const_iterator _Next;

	lea	ecx, DWORD PTR __Next$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 1

; 1657 : 		bool _Leftish = false;	// assume nearest point is end of sequence

	mov	BYTE PTR __Leftish$[ebp], 0

; 1658 : 
; 1659 : 		_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 1660 : 
; 1661 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1662 : 		if (_Where._Getcont() != &this->_Get_data())

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	DWORD PTR tv66[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Get_data
	cmp	DWORD PTR tv66[ebp], eax
	je	SHORT $LN3@Insert_hin

; 1663 : 			_DEBUG_ERROR("map/set insert iterator outside range");

	push	1663					; 0000067fH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EM@MHOKKPFH@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAn?$AAs?$AAe?$AAr?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN3@Insert_hin:

; 1664 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1665 : 
; 1666 : 		if (size() == 0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::size
	test	eax, eax
	jne	SHORT $LN4@Insert_hin

; 1667 : 			return (_Insert_at(true, this->_Myhead(),

	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@QAEI@std@@@std@@YAAAU?$pair@QAEI@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,unsigned int> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myhead
	mov	edx, DWORD PTR [eax]
	push	edx
	push	1
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAU?$pair@QAEI@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Insert_at<std::pair<unsigned char * const,unsigned int> &,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin
	jmp	$LN5@Insert_hin
$LN4@Insert_hin:

; 1668 : 				_STD forward<_Valty>(_Val), _Newnode));	// empty tree
; 1669 : 		else if (this->_Multi)

	xor	eax, eax
	je	$LN6@Insert_hin

; 1670 : 			{	// insert even if duplicate
; 1671 : 			if (_Where == begin())

	lea	eax, DWORD PTR $T14[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::begin
	mov	DWORD PTR tv793[ebp], eax
	mov	ecx, DWORD PTR tv793[ebp]
	mov	DWORD PTR tv816[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	mov	edx, DWORD PTR tv816[ebp]
	push	edx
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator==
	mov	BYTE PTR tv773[ebp], al
	mov	al, BYTE PTR tv773[ebp]
	mov	BYTE PTR $T15[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T14[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	movzx	ecx, BYTE PTR $T15[ebp]
	test	ecx, ecx
	je	$LN8@Insert_hin

; 1672 : 				{	// insert at beginning if before first element
; 1673 : 				if (!_DEBUG_LT_PRED(this->_Getcomp(),

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEI@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Kfn
	mov	DWORD PTR tv757[ebp], eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv654[ebp], eax
	mov	ecx, DWORD PTR tv654[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Key
	mov	DWORD PTR tv638[ebp], eax
	push	1674					; 0000068aH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR tv757[ebp]
	push	edx
	mov	eax, DWORD PTR tv638[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv557[ebp], al
	movzx	ecx, BYTE PTR tv557[ebp]
	test	ecx, ecx
	jne	SHORT $LN10@Insert_hin

; 1674 : 					this->_Key(_Where._Mynode()), this->_Kfn(_Val)))
; 1675 : 					return (_Insert_at(true, _Where._Mynode(),

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv505[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@QAEI@std@@@std@@YAAAU?$pair@QAEI@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,unsigned int> &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv505[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAU?$pair@QAEI@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Insert_at<std::pair<unsigned char * const,unsigned int> &,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin
$LN10@Insert_hin:

; 1676 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1677 : 				_Leftish = true;	// nearest point is beginning of sequence

	mov	BYTE PTR __Leftish$[ebp], 1
	jmp	$LN9@Insert_hin
$LN8@Insert_hin:

; 1678 : 				}
; 1679 : 			else if (_Where == end())

	lea	eax, DWORD PTR $T12[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::end
	mov	DWORD PTR tv449[ebp], eax
	mov	ecx, DWORD PTR tv449[ebp]
	mov	DWORD PTR tv821[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	mov	edx, DWORD PTR tv821[ebp]
	push	edx
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator==
	mov	BYTE PTR tv433[ebp], al
	mov	al, BYTE PTR tv433[ebp]
	mov	BYTE PTR $T13[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T12[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	movzx	ecx, BYTE PTR $T13[ebp]
	test	ecx, ecx
	je	$LN11@Insert_hin

; 1680 : 				{	// insert at end if after last element
; 1681 : 				if (!_DEBUG_LT_PRED(this->_Getcomp(),

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Rmost
	mov	DWORD PTR tv330[ebp], eax
	mov	eax, DWORD PTR tv330[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Key
	mov	DWORD PTR tv314[ebp], eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEI@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Kfn
	mov	DWORD PTR tv233[ebp], eax
	push	1682					; 00000692H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR tv314[ebp]
	push	eax
	mov	ecx, DWORD PTR tv233[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv181[ebp], al
	movzx	edx, BYTE PTR tv181[ebp]
	test	edx, edx
	jne	SHORT $LN13@Insert_hin

; 1682 : 					this->_Kfn(_Val), this->_Key(_Rmost())))
; 1683 : 					return (_Insert_at(false, _Rmost(),

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Rmost
	mov	DWORD PTR tv92[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@QAEI@std@@@std@@YAAAU?$pair@QAEI@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,unsigned int> &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv92[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	push	0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAU?$pair@QAEI@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Insert_at<std::pair<unsigned char * const,unsigned int> &,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin
$LN13@Insert_hin:

; 1684 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1685 : 				}
; 1686 : 			else if (!_DEBUG_LT_PRED(this->_Getcomp(),

	jmp	$LN9@Insert_hin
$LN11@Insert_hin:

; 1687 : 				this->_Key(_Where._Mynode()), this->_Kfn(_Val))
; 1688 : 				&& !_DEBUG_LT_PRED(this->_Getcomp(),

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEI@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Kfn
	mov	DWORD PTR tv879[ebp], eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv880[ebp], eax
	mov	ecx, DWORD PTR tv880[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Key
	mov	DWORD PTR tv881[ebp], eax
	push	1687					; 00000697H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR tv879[ebp]
	push	edx
	mov	eax, DWORD PTR tv881[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv882[ebp], al
	movzx	ecx, BYTE PTR tv882[ebp]
	test	ecx, ecx
	jne	$LN14@Insert_hin
	lea	eax, DWORD PTR __Where$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??4?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
	mov	DWORD PTR tv883[ebp], eax
	mov	ecx, DWORD PTR tv883[ebp]
	call	??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator--
	mov	DWORD PTR tv884[ebp], eax
	mov	ecx, DWORD PTR tv884[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv885[ebp], eax
	mov	ecx, DWORD PTR tv885[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Key
	mov	DWORD PTR tv886[ebp], eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEI@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Kfn
	mov	DWORD PTR tv887[ebp], eax
	push	1690					; 0000069aH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR tv886[ebp]
	push	eax
	mov	ecx, DWORD PTR tv887[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv888[ebp], al
	movzx	edx, BYTE PTR tv888[ebp]
	test	edx, edx
	jne	$LN14@Insert_hin

; 1689 : 					this->_Kfn(_Val),
; 1690 : 					this->_Key((--(_Next = _Where))._Mynode())))
; 1691 : 				{	// insert before _Where
; 1692 : 				if (this->_Isnil(this->_Right(_Next._Mynode())))

	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv889[ebp], eax
	mov	eax, DWORD PTR tv889[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	DWORD PTR tv890[ebp], eax
	mov	ecx, DWORD PTR tv890[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Isnil
	add	esp, 4
	mov	DWORD PTR tv891[ebp], eax
	mov	eax, DWORD PTR tv891[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN16@Insert_hin

; 1693 : 					return (_Insert_at(false, _Next._Mynode(),

	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv892[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@QAEI@std@@@std@@YAAAU?$pair@QAEI@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,unsigned int> &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv892[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAU?$pair@QAEI@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Insert_at<std::pair<unsigned char * const,unsigned int> &,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin

; 1694 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1695 : 				else

	jmp	SHORT $LN17@Insert_hin
$LN16@Insert_hin:

; 1696 : 					return (_Insert_at(true, _Where._Mynode(),

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv893[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@QAEI@std@@@std@@YAAAU?$pair@QAEI@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,unsigned int> &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv893[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAU?$pair@QAEI@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Insert_at<std::pair<unsigned char * const,unsigned int> &,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin
$LN17@Insert_hin:

; 1697 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1698 : 				}
; 1699 : 			else if (!_DEBUG_LT_PRED(this->_Getcomp(),

	jmp	$LN9@Insert_hin
$LN14@Insert_hin:

; 1700 : 				this->_Kfn(_Val), this->_Key(_Where._Mynode()))
; 1701 : 				&& (++(_Next = _Where) == end()

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv894[ebp], eax
	mov	eax, DWORD PTR tv894[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Key
	mov	DWORD PTR tv895[ebp], eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEI@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Kfn
	mov	DWORD PTR tv896[ebp], eax
	push	1700					; 000006a4H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR tv895[ebp]
	push	edx
	mov	eax, DWORD PTR tv896[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv897[ebp], al
	movzx	ecx, BYTE PTR tv897[ebp]
	test	ecx, ecx
	jne	$LN37@Insert_hin
	lea	edx, DWORD PTR $T10[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::end
	mov	DWORD PTR tv898[ebp], eax
	mov	eax, DWORD PTR tv898[ebp]
	mov	DWORD PTR tv835[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 2
	mov	DWORD PTR $T2[ebp], ecx
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??4?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
	mov	DWORD PTR tv902[ebp], eax
	mov	ecx, DWORD PTR tv902[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator++
	mov	DWORD PTR tv903[ebp], eax
	mov	eax, DWORD PTR tv835[ebp]
	push	eax
	mov	ecx, DWORD PTR tv903[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator==
	mov	BYTE PTR tv904[ebp], al
	movzx	ecx, BYTE PTR tv904[ebp]
	test	ecx, ecx
	jne	SHORT $LN36@Insert_hin
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEI@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Kfn
	mov	DWORD PTR tv905[ebp], eax
	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv906[ebp], eax
	mov	eax, DWORD PTR tv906[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Key
	mov	DWORD PTR tv907[ebp], eax
	push	1703					; 000006a7H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	ecx, DWORD PTR tv905[ebp]
	push	ecx
	mov	edx, DWORD PTR tv907[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv908[ebp], al
	movzx	eax, BYTE PTR tv908[ebp]
	test	eax, eax
	jne	SHORT $LN37@Insert_hin
$LN36@Insert_hin:
	mov	DWORD PTR tv416[ebp], 1
	jmp	SHORT $LN38@Insert_hin
$LN37@Insert_hin:
	mov	DWORD PTR tv416[ebp], 0
$LN38@Insert_hin:
	mov	cl, BYTE PTR tv416[ebp]
	mov	BYTE PTR $T11[ebp], cl
	mov	DWORD PTR __$EHRec$[ebp+12], 2
	mov	edx, DWORD PTR $T2[ebp]
	and	edx, 2
	je	SHORT $LN52@Insert_hin
	and	DWORD PTR $T2[ebp], -3			; fffffffdH
	lea	ecx, DWORD PTR $T10[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
$LN52@Insert_hin:
	movzx	eax, BYTE PTR $T11[ebp]
	test	eax, eax
	je	$LN18@Insert_hin

; 1702 : 					|| !_DEBUG_LT_PRED(this->_Getcomp(),
; 1703 : 						this->_Key(_Next._Mynode()), this->_Kfn(_Val))))
; 1704 : 				{	// insert after _Where
; 1705 : 				if (this->_Isnil(this->_Right(_Where._Mynode())))

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv909[ebp], eax
	mov	eax, DWORD PTR tv909[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	DWORD PTR tv910[ebp], eax
	mov	ecx, DWORD PTR tv910[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Isnil
	add	esp, 4
	mov	DWORD PTR tv911[ebp], eax
	mov	eax, DWORD PTR tv911[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN20@Insert_hin

; 1706 : 					return (_Insert_at(false, _Where._Mynode(),

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv912[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@QAEI@std@@@std@@YAAAU?$pair@QAEI@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,unsigned int> &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv912[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAU?$pair@QAEI@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Insert_at<std::pair<unsigned char * const,unsigned int> &,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin

; 1707 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1708 : 				else

	jmp	SHORT $LN21@Insert_hin
$LN20@Insert_hin:

; 1709 : 					return (_Insert_at(true, _Next._Mynode(),

	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv913[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@QAEI@std@@@std@@YAAAU?$pair@QAEI@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,unsigned int> &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv913[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAU?$pair@QAEI@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Insert_at<std::pair<unsigned char * const,unsigned int> &,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin
$LN21@Insert_hin:

; 1710 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1711 : 				}
; 1712 : 			else

	jmp	SHORT $LN9@Insert_hin
$LN18@Insert_hin:

; 1713 : 				_Leftish = true;	// nearest point is beginning of sequence

	mov	BYTE PTR __Leftish$[ebp], 1
$LN9@Insert_hin:

; 1714 : 			}
; 1715 : 		else

	jmp	$LN5@Insert_hin
$LN6@Insert_hin:

; 1716 : 			{	// insert only if unique
; 1717 : 			if (_Where == begin())

	lea	eax, DWORD PTR $T8[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::begin
	mov	DWORD PTR tv914[ebp], eax
	mov	ecx, DWORD PTR tv914[ebp]
	mov	DWORD PTR tv845[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	mov	edx, DWORD PTR tv845[ebp]
	push	edx
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator==
	mov	BYTE PTR tv915[ebp], al
	mov	al, BYTE PTR tv915[ebp]
	mov	BYTE PTR $T9[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T8[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	movzx	ecx, BYTE PTR $T9[ebp]
	test	ecx, ecx
	je	$LN22@Insert_hin

; 1718 : 				{	// insert at beginning if before first element
; 1719 : 				if (_DEBUG_LT_PRED(this->_Getcomp(),

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv916[ebp], eax
	mov	eax, DWORD PTR tv916[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Key
	mov	DWORD PTR tv917[ebp], eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEI@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Kfn
	mov	DWORD PTR tv918[ebp], eax
	push	1720					; 000006b8H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR tv917[ebp]
	push	edx
	mov	eax, DWORD PTR tv918[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv919[ebp], al
	movzx	ecx, BYTE PTR tv919[ebp]
	test	ecx, ecx
	je	SHORT $LN24@Insert_hin

; 1720 : 					this->_Kfn(_Val), this->_Key(_Where._Mynode())))
; 1721 : 					return (_Insert_at(true, _Where._Mynode(),

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv920[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@QAEI@std@@@std@@YAAAU?$pair@QAEI@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,unsigned int> &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv920[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAU?$pair@QAEI@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Insert_at<std::pair<unsigned char * const,unsigned int> &,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin
$LN24@Insert_hin:

; 1722 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1723 : 				}

	jmp	$LN5@Insert_hin
$LN22@Insert_hin:

; 1724 : 			else if (_Where == end())

	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::end
	mov	DWORD PTR tv921[ebp], eax
	mov	ecx, DWORD PTR tv921[ebp]
	mov	DWORD PTR tv850[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 7
	mov	edx, DWORD PTR tv850[ebp]
	push	edx
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator==
	mov	BYTE PTR tv922[ebp], al
	mov	al, BYTE PTR tv922[ebp]
	mov	BYTE PTR $T7[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T6[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	movzx	ecx, BYTE PTR $T7[ebp]
	test	ecx, ecx
	je	$LN25@Insert_hin

; 1725 : 				{	// insert at end if after last element
; 1726 : 				if (_DEBUG_LT_PRED(this->_Getcomp(),

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEI@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Kfn
	mov	DWORD PTR tv923[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Rmost
	mov	DWORD PTR tv924[ebp], eax
	mov	ecx, DWORD PTR tv924[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Key
	mov	DWORD PTR tv925[ebp], eax
	push	1727					; 000006bfH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR tv923[ebp]
	push	eax
	mov	ecx, DWORD PTR tv925[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv926[ebp], al
	movzx	edx, BYTE PTR tv926[ebp]
	test	edx, edx
	je	SHORT $LN27@Insert_hin

; 1727 : 					this->_Key(_Rmost()), this->_Kfn(_Val)))
; 1728 : 					return (_Insert_at(false, _Rmost(),

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Rmost
	mov	DWORD PTR tv927[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@QAEI@std@@@std@@YAAAU?$pair@QAEI@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,unsigned int> &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv927[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	push	0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAU?$pair@QAEI@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Insert_at<std::pair<unsigned char * const,unsigned int> &,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin
$LN27@Insert_hin:

; 1729 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1730 : 				}
; 1731 : 			else if (_DEBUG_LT_PRED(this->_Getcomp(),

	jmp	$LN5@Insert_hin
$LN25@Insert_hin:

; 1732 : 				this->_Kfn(_Val), this->_Key(_Where._Mynode()))
; 1733 : 				&& _DEBUG_LT_PRED(this->_Getcomp(),

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv928[ebp], eax
	mov	eax, DWORD PTR tv928[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Key
	mov	DWORD PTR tv929[ebp], eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEI@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Kfn
	mov	DWORD PTR tv930[ebp], eax
	push	1732					; 000006c4H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR tv929[ebp]
	push	edx
	mov	eax, DWORD PTR tv930[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv931[ebp], al
	movzx	ecx, BYTE PTR tv931[ebp]
	test	ecx, ecx
	je	$LN28@Insert_hin
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEI@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Kfn
	mov	DWORD PTR tv932[ebp], eax
	lea	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??4?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
	mov	DWORD PTR tv933[ebp], eax
	mov	ecx, DWORD PTR tv933[ebp]
	call	??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator--
	mov	DWORD PTR tv934[ebp], eax
	mov	ecx, DWORD PTR tv934[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv935[ebp], eax
	mov	edx, DWORD PTR tv935[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Key
	mov	DWORD PTR tv936[ebp], eax
	push	1735					; 000006c7H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR tv932[ebp]
	push	eax
	mov	ecx, DWORD PTR tv936[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv937[ebp], al
	movzx	edx, BYTE PTR tv937[ebp]
	test	edx, edx
	je	$LN28@Insert_hin

; 1734 : 					this->_Key((--(_Next = _Where))._Mynode()),
; 1735 : 					this->_Kfn(_Val)))
; 1736 : 				{	// insert before _Where
; 1737 : 				if (this->_Isnil(this->_Right(_Next._Mynode())))

	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv938[ebp], eax
	mov	eax, DWORD PTR tv938[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	DWORD PTR tv939[ebp], eax
	mov	ecx, DWORD PTR tv939[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Isnil
	add	esp, 4
	mov	DWORD PTR tv940[ebp], eax
	mov	eax, DWORD PTR tv940[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN30@Insert_hin

; 1738 : 					return (_Insert_at(false, _Next._Mynode(),

	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv941[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@QAEI@std@@@std@@YAAAU?$pair@QAEI@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,unsigned int> &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv941[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAU?$pair@QAEI@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Insert_at<std::pair<unsigned char * const,unsigned int> &,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin

; 1739 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1740 : 				else

	jmp	SHORT $LN31@Insert_hin
$LN30@Insert_hin:

; 1741 : 					return (_Insert_at(true, _Where._Mynode(),

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv942[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@QAEI@std@@@std@@YAAAU?$pair@QAEI@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,unsigned int> &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv942[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAU?$pair@QAEI@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Insert_at<std::pair<unsigned char * const,unsigned int> &,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin
$LN31@Insert_hin:

; 1742 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1743 : 				}
; 1744 : 			else if (_DEBUG_LT_PRED(this->_Getcomp(),

	jmp	$LN5@Insert_hin
$LN28@Insert_hin:

; 1745 : 				this->_Key(_Where._Mynode()), this->_Kfn(_Val))
; 1746 : 				&& (++(_Next = _Where) == end()

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEI@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Kfn
	mov	DWORD PTR tv943[ebp], eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv944[ebp], eax
	mov	ecx, DWORD PTR tv944[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Key
	mov	DWORD PTR tv945[ebp], eax
	push	1745					; 000006d1H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR tv943[ebp]
	push	edx
	mov	eax, DWORD PTR tv945[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv946[ebp], al
	movzx	ecx, BYTE PTR tv946[ebp]
	test	ecx, ecx
	je	$LN40@Insert_hin
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::end
	mov	DWORD PTR tv947[ebp], eax
	mov	eax, DWORD PTR tv947[ebp]
	mov	DWORD PTR tv864[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 8
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 4
	mov	DWORD PTR $T2[ebp], ecx
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??4?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
	mov	DWORD PTR tv951[ebp], eax
	mov	ecx, DWORD PTR tv951[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator++
	mov	DWORD PTR tv952[ebp], eax
	mov	eax, DWORD PTR tv864[ebp]
	push	eax
	mov	ecx, DWORD PTR tv952[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator==
	mov	BYTE PTR tv953[ebp], al
	movzx	ecx, BYTE PTR tv953[ebp]
	test	ecx, ecx
	jne	SHORT $LN39@Insert_hin
	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv954[ebp], eax
	mov	edx, DWORD PTR tv954[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Key
	mov	DWORD PTR tv955[ebp], eax
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEI@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Kfn
	mov	DWORD PTR tv956[ebp], eax
	push	1748					; 000006d4H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	ecx, DWORD PTR tv955[ebp]
	push	ecx
	mov	edx, DWORD PTR tv956[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv957[ebp], al
	movzx	eax, BYTE PTR tv957[ebp]
	test	eax, eax
	je	SHORT $LN40@Insert_hin
$LN39@Insert_hin:
	mov	DWORD PTR tv740[ebp], 1
	jmp	SHORT $LN41@Insert_hin
$LN40@Insert_hin:
	mov	DWORD PTR tv740[ebp], 0
$LN41@Insert_hin:
	mov	cl, BYTE PTR tv740[ebp]
	mov	BYTE PTR $T5[ebp], cl
	mov	DWORD PTR __$EHRec$[ebp+12], 2
	mov	edx, DWORD PTR $T2[ebp]
	and	edx, 4
	je	SHORT $LN57@Insert_hin
	and	DWORD PTR $T2[ebp], -5			; fffffffbH
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
$LN57@Insert_hin:
	movzx	eax, BYTE PTR $T5[ebp]
	test	eax, eax
	je	$LN5@Insert_hin

; 1747 : 					|| _DEBUG_LT_PRED(this->_Getcomp(),
; 1748 : 						this->_Kfn(_Val), this->_Key(_Next._Mynode()))))
; 1749 : 				{	// insert after _Where
; 1750 : 				if (this->_Isnil(this->_Right(_Where._Mynode())))

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv958[ebp], eax
	mov	eax, DWORD PTR tv958[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	DWORD PTR tv959[ebp], eax
	mov	ecx, DWORD PTR tv959[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Isnil
	add	esp, 4
	mov	DWORD PTR tv960[ebp], eax
	mov	eax, DWORD PTR tv960[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN33@Insert_hin

; 1751 : 					return (_Insert_at(false, _Where._Mynode(),

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv961[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@QAEI@std@@@std@@YAAAU?$pair@QAEI@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,unsigned int> &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv961[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAU?$pair@QAEI@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Insert_at<std::pair<unsigned char * const,unsigned int> &,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin

; 1752 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1753 : 				else

	jmp	SHORT $LN5@Insert_hin
$LN33@Insert_hin:

; 1754 : 					return (_Insert_at(true, _Next._Mynode(),

	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv962[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@QAEI@std@@@std@@YAAAU?$pair@QAEI@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,unsigned int> &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv962[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAU?$pair@QAEI@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Insert_at<std::pair<unsigned char * const,unsigned int> &,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin
$LN5@Insert_hin:
	jmp	SHORT $LN42@Insert_hin
__catch$??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$0:

; 1755 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1756 : 				}
; 1757 : 			}
; 1758 : 		_CATCH_ALL
; 1759 : 		_Destroy_if_not_nil(_Newnode);

	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Destroy_if_not_nil

; 1760 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1761 : 		_CATCH_END

	mov	eax, $LN60@Insert_hin
	ret	0
$LN42@Insert_hin:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$1
$LN60@Insert_hin:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$1:

; 1762 : 
; 1763 : 		return (_Insert_nohint(_Leftish,

	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@QAEI@std@@@std@@YAAAU?$pair@QAEI@0@AAU10@@Z ; std::forward<std::pair<unsigned char * const,unsigned int> &>
	add	esp, 4
	push	eax
	movzx	edx, BYTE PTR __Leftish$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_nohint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Insert_nohint<std::pair<unsigned char * const,unsigned int> &,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
	mov	DWORD PTR tv963[ebp], eax
	mov	ecx, DWORD PTR tv963[ebp]
	mov	DWORD PTR tv875[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 10		; 0000000aH
	mov	edx, DWORD PTR tv875[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN35@Insert_hin:

; 1764 : 			_STD forward<_Valty>(_Val), _Newnode).first);
; 1765 : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN90@Insert_hin
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 536				; 00000218H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
	npad	3
$LN90@Insert_hin:
	DD	1
	DD	$LN89@Insert_hin
$LN89@Insert_hin:
	DD	-44					; ffffffd4H
	DD	12					; 0000000cH
	DD	$LN87@Insert_hin
$LN87@Insert_hin:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$2:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$3:
	lea	ecx, DWORD PTR __Next$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$5:
	lea	ecx, DWORD PTR $T14[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$6:
	lea	ecx, DWORD PTR $T12[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$7:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 2
	je	$LN51@Insert_hin
	and	DWORD PTR $T2[ebp], -3			; fffffffdH
	lea	ecx, DWORD PTR $T10[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
$LN51@Insert_hin:
	ret	0
__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$8:
	lea	ecx, DWORD PTR $T8[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$9:
	lea	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$10:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 4
	je	$LN56@Insert_hin
	and	DWORD PTR $T2[ebp], -5			; fffffffbH
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
$LN56@Insert_hin:
	ret	0
__unwindfunclet$??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z$11:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@std@@QAE@XZ
__ehhandler$??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-540]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Insert_hint<std::pair<unsigned char * const,unsigned int> &,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z
_TEXT	SEGMENT
tv92 = -236						; size = 4
__Pnode$ = -36						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
_<_Val_0>$ = 8						; size = 4
_<_Val_1>$ = 12						; size = 4
_<_Val_2>$ = 16						; size = 4
??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Buynode<std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >, COMDAT
; _this$ = ecx

; 880  : 		{	// allocate a node with defaults and set links and value

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 881  : 		_Nodeptr _Pnode = _Buynode0();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Buynode0
	mov	DWORD PTR __Pnode$[ebp], eax

; 882  : 
; 883  : 		this->_Color(_Pnode) = _Red;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 884  : 		this->_Isnil(_Pnode) = false;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Isnil
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 885  : 
; 886  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 887  : 		this->_Getal().construct(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAU?$pair@QAEI@2@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myval
	add	esp, 4
	mov	DWORD PTR tv92[ebp], eax
	mov	ecx, DWORD PTR _<_Val_2>$[ebp]
	push	ecx
	call	??$forward@V?$tuple@$$V@std@@@std@@YA$$QAV?$tuple@$$V@0@AAV10@@Z ; std::forward<std::tuple<> >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _<_Val_1>$[ebp]
	push	edx
	call	??$forward@V?$tuple@ABQAE@std@@@std@@YA$$QAV?$tuple@ABQAE@0@AAV10@@Z ; std::forward<std::tuple<unsigned char * const &> >
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _<_Val_0>$[ebp]
	push	eax
	call	??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z ; std::forward<std::piecewise_construct_t const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR tv92[ebp]
	push	ecx
	call	??$addressof@U?$pair@QAEI@std@@@std@@YAPAU?$pair@QAEI@0@AAU10@@Z ; std::addressof<std::pair<unsigned char * const,unsigned int> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getal
	mov	ecx, eax
	call	??$construct@U?$pair@QAEI@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAEI@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::construct<std::pair<unsigned char * const,unsigned int>,std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >
	jmp	SHORT $LN4@Buynode
__catch$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z$0:

; 888  : 			_STD addressof(_Myval(_Pnode)),
; 889  : 				_STD forward<_Valty>(_Val)...);
; 890  : 		_CATCH_ALL
; 891  : 		_Freenode0(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Freenode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Freenode0

; 892  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 893  : 		_CATCH_END

	mov	eax, $LN7@Buynode
	ret	0
$LN4@Buynode:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z$1
$LN7@Buynode:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z$1:

; 894  : 
; 895  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
$LN3@Buynode:

; 896  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-240]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Buynode<std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V?$tuple@ABQAE@std@@@std@@YA$$QAV?$tuple@ABQAE@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$tuple@ABQAE@std@@@std@@YA$$QAV?$tuple@ABQAE@0@AAV10@@Z PROC ; std::forward<std::tuple<unsigned char * const &> >, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@V?$tuple@ABQAE@std@@@std@@YA$$QAV?$tuple@ABQAE@0@AAV10@@Z ENDP ; std::forward<std::tuple<unsigned char * const &> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$?0ABQAE$0A@@?$tuple@ABQAE@std@@QAE@ABQAE@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
__This_arg$ = 8						; size = 4
??$?0ABQAE$0A@@?$tuple@ABQAE@std@@QAE@ABQAE@Z PROC	; std::tuple<unsigned char * const &>::tuple<unsigned char * const &><unsigned char * const &,0>, COMDAT
; _this$ = ecx

; 428  : 		{	// construct from one or more copied elements

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 427  : 		: _Mybase(_Exact_args_t{}, _Rest_arg...), _Myfirst(_This_arg)

	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	movzx	ecx, BYTE PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z ; std::tuple<>::tuple<><std::_Exact_args_t,0>
	mov	eax, DWORD PTR __This_arg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0ABQAE@?$_Tuple_val@ABQAE@std@@QAE@ABQAE@Z ; std::_Tuple_val<unsigned char * const &>::_Tuple_val<unsigned char * const &><unsigned char * const &>

; 429  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0ABQAE$0A@@?$tuple@ABQAE@std@@QAE@ABQAE@Z ENDP	; std::tuple<unsigned char * const &>::tuple<unsigned char * const &><unsigned char * const &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@_N@std@@YA$$QA_NAA_N@Z PROC			; std::forward<bool>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@_N@std@@YA$$QA_NAA_N@Z ENDP			; std::forward<bool>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > >, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z
_TEXT	SEGMENT
tv740 = -536						; size = 4
tv416 = -536						; size = 4
tv957 = -529						; size = 1
tv908 = -529						; size = 1
tv956 = -528						; size = 4
tv907 = -528						; size = 4
tv955 = -524						; size = 4
tv906 = -524						; size = 4
tv954 = -520						; size = 4
tv905 = -520						; size = 4
tv953 = -513						; size = 1
tv904 = -513						; size = 1
tv952 = -512						; size = 4
tv903 = -512						; size = 4
tv951 = -508						; size = 4
tv902 = -508						; size = 4
tv864 = -504						; size = 4
tv835 = -504						; size = 4
tv937 = -501						; size = 1
tv888 = -501						; size = 1
tv947 = -500						; size = 4
tv936 = -500						; size = 4
tv898 = -500						; size = 4
tv887 = -500						; size = 4
tv935 = -496						; size = 4
tv886 = -496						; size = 4
tv946 = -493						; size = 1
tv931 = -493						; size = 1
tv926 = -493						; size = 1
tv919 = -493						; size = 1
tv897 = -493						; size = 1
tv882 = -493						; size = 1
tv557 = -493						; size = 1
tv181 = -493						; size = 1
tv960 = -492						; size = 4
tv945 = -492						; size = 4
tv940 = -492						; size = 4
tv934 = -492						; size = 4
tv930 = -492						; size = 4
tv925 = -492						; size = 4
tv918 = -492						; size = 4
tv911 = -492						; size = 4
tv896 = -492						; size = 4
tv891 = -492						; size = 4
tv885 = -492						; size = 4
tv881 = -492						; size = 4
tv638 = -492						; size = 4
tv233 = -492						; size = 4
tv922 = -489						; size = 1
tv915 = -489						; size = 1
tv773 = -489						; size = 1
tv433 = -489						; size = 1
tv959 = -488						; size = 4
tv944 = -488						; size = 4
tv939 = -488						; size = 4
tv933 = -488						; size = 4
tv929 = -488						; size = 4
tv924 = -488						; size = 4
tv917 = -488						; size = 4
tv910 = -488						; size = 4
tv895 = -488						; size = 4
tv890 = -488						; size = 4
tv884 = -488						; size = 4
tv880 = -488						; size = 4
tv875 = -488						; size = 4
tv850 = -488						; size = 4
tv845 = -488						; size = 4
tv821 = -488						; size = 4
tv816 = -488						; size = 4
tv654 = -488						; size = 4
tv314 = -488						; size = 4
tv963 = -484						; size = 4
tv962 = -484						; size = 4
tv961 = -484						; size = 4
tv958 = -484						; size = 4
tv943 = -484						; size = 4
tv942 = -484						; size = 4
tv941 = -484						; size = 4
tv938 = -484						; size = 4
tv932 = -484						; size = 4
tv928 = -484						; size = 4
tv927 = -484						; size = 4
tv923 = -484						; size = 4
tv921 = -484						; size = 4
tv920 = -484						; size = 4
tv916 = -484						; size = 4
tv914 = -484						; size = 4
tv913 = -484						; size = 4
tv912 = -484						; size = 4
tv909 = -484						; size = 4
tv894 = -484						; size = 4
tv893 = -484						; size = 4
tv892 = -484						; size = 4
tv889 = -484						; size = 4
tv883 = -484						; size = 4
tv879 = -484						; size = 4
tv793 = -484						; size = 4
tv757 = -484						; size = 4
tv505 = -484						; size = 4
tv449 = -484						; size = 4
tv330 = -484						; size = 4
tv92 = -484						; size = 4
tv66 = -484						; size = 4
$T2 = -476						; size = 4
$T3 = -464						; size = 16
$T4 = -440						; size = 12
$T5 = -417						; size = 1
$T6 = -408						; size = 12
$T7 = -385						; size = 1
$T8 = -376						; size = 12
$T9 = -353						; size = 1
$T10 = -344						; size = 12
$T11 = -321						; size = 1
$T12 = -312						; size = 12
$T13 = -289						; size = 1
$T14 = -280						; size = 12
$T15 = -257						; size = 1
__Leftish$ = -53					; size = 1
__Next$ = -44						; size = 12
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
__Val$ = 24						; size = 4
__Newnode$ = 28						; size = 4
??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Insert_hint<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>, COMDAT
; _this$ = ecx

; 1655 : 		{	// try to insert node using _Where as a hint

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 520				; 00000208H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-536]
	mov	ecx, 130				; 00000082H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1656 : 		const_iterator _Next;

	lea	ecx, DWORD PTR __Next$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 1

; 1657 : 		bool _Leftish = false;	// assume nearest point is end of sequence

	mov	BYTE PTR __Leftish$[ebp], 0

; 1658 : 
; 1659 : 		_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 1660 : 
; 1661 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1662 : 		if (_Where._Getcont() != &this->_Get_data())

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	DWORD PTR tv66[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Get_data
	cmp	DWORD PTR tv66[ebp], eax
	je	SHORT $LN3@Insert_hin

; 1663 : 			_DEBUG_ERROR("map/set insert iterator outside range");

	push	1663					; 0000067fH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EM@MHOKKPFH@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAn?$AAs?$AAe?$AAr?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN3@Insert_hin:

; 1664 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1665 : 
; 1666 : 		if (size() == 0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::size
	test	eax, eax
	jne	SHORT $LN4@Insert_hin

; 1667 : 			return (_Insert_at(true, this->_Myhead(),

	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@YAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myhead
	mov	edx, DWORD PTR [eax]
	push	edx
	push	1
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Insert_at<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin
	jmp	$LN5@Insert_hin
$LN4@Insert_hin:

; 1668 : 				_STD forward<_Valty>(_Val), _Newnode));	// empty tree
; 1669 : 		else if (this->_Multi)

	xor	eax, eax
	je	$LN6@Insert_hin

; 1670 : 			{	// insert even if duplicate
; 1671 : 			if (_Where == begin())

	lea	eax, DWORD PTR $T14[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::begin
	mov	DWORD PTR tv793[ebp], eax
	mov	ecx, DWORD PTR tv793[ebp]
	mov	DWORD PTR tv816[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	mov	edx, DWORD PTR tv816[ebp]
	push	edx
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator==
	mov	BYTE PTR tv773[ebp], al
	mov	al, BYTE PTR tv773[ebp]
	mov	BYTE PTR $T15[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T14[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	ecx, BYTE PTR $T15[ebp]
	test	ecx, ecx
	je	$LN8@Insert_hin

; 1672 : 				{	// insert at beginning if before first element
; 1673 : 				if (!_DEBUG_LT_PRED(this->_Getcomp(),

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIABU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Kfn
	mov	DWORD PTR tv757[ebp], eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv654[ebp], eax
	mov	ecx, DWORD PTR tv654[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Key
	mov	DWORD PTR tv638[ebp], eax
	push	1674					; 0000068aH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR tv757[ebp]
	push	edx
	mov	eax, DWORD PTR tv638[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@I@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@I@std@@ABIABI@std@@YA_NAAU?$less@I@0@ABI1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned int> &,unsigned int const &,unsigned int const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv557[ebp], al
	movzx	ecx, BYTE PTR tv557[ebp]
	test	ecx, ecx
	jne	SHORT $LN10@Insert_hin

; 1674 : 					this->_Key(_Where._Mynode()), this->_Kfn(_Val)))
; 1675 : 					return (_Insert_at(true, _Where._Mynode(),

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv505[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@YAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv505[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Insert_at<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin
$LN10@Insert_hin:

; 1676 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1677 : 				_Leftish = true;	// nearest point is beginning of sequence

	mov	BYTE PTR __Leftish$[ebp], 1
	jmp	$LN9@Insert_hin
$LN8@Insert_hin:

; 1678 : 				}
; 1679 : 			else if (_Where == end())

	lea	eax, DWORD PTR $T12[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::end
	mov	DWORD PTR tv449[ebp], eax
	mov	ecx, DWORD PTR tv449[ebp]
	mov	DWORD PTR tv821[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	mov	edx, DWORD PTR tv821[ebp]
	push	edx
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator==
	mov	BYTE PTR tv433[ebp], al
	mov	al, BYTE PTR tv433[ebp]
	mov	BYTE PTR $T13[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T12[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	ecx, BYTE PTR $T13[ebp]
	test	ecx, ecx
	je	$LN11@Insert_hin

; 1680 : 				{	// insert at end if after last element
; 1681 : 				if (!_DEBUG_LT_PRED(this->_Getcomp(),

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Rmost
	mov	DWORD PTR tv330[ebp], eax
	mov	eax, DWORD PTR tv330[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Key
	mov	DWORD PTR tv314[ebp], eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIABU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Kfn
	mov	DWORD PTR tv233[ebp], eax
	push	1682					; 00000692H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR tv314[ebp]
	push	eax
	mov	ecx, DWORD PTR tv233[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@I@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@I@std@@ABIABI@std@@YA_NAAU?$less@I@0@ABI1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned int> &,unsigned int const &,unsigned int const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv181[ebp], al
	movzx	edx, BYTE PTR tv181[ebp]
	test	edx, edx
	jne	SHORT $LN13@Insert_hin

; 1682 : 					this->_Kfn(_Val), this->_Key(_Rmost())))
; 1683 : 					return (_Insert_at(false, _Rmost(),

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Rmost
	mov	DWORD PTR tv92[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@YAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv92[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	push	0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Insert_at<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin
$LN13@Insert_hin:

; 1684 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1685 : 				}
; 1686 : 			else if (!_DEBUG_LT_PRED(this->_Getcomp(),

	jmp	$LN9@Insert_hin
$LN11@Insert_hin:

; 1687 : 				this->_Key(_Where._Mynode()), this->_Kfn(_Val))
; 1688 : 				&& !_DEBUG_LT_PRED(this->_Getcomp(),

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIABU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Kfn
	mov	DWORD PTR tv879[ebp], eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv880[ebp], eax
	mov	ecx, DWORD PTR tv880[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Key
	mov	DWORD PTR tv881[ebp], eax
	push	1687					; 00000697H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR tv879[ebp]
	push	edx
	mov	eax, DWORD PTR tv881[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@I@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@I@std@@ABIABI@std@@YA_NAAU?$less@I@0@ABI1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned int> &,unsigned int const &,unsigned int const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv882[ebp], al
	movzx	ecx, BYTE PTR tv882[ebp]
	test	ecx, ecx
	jne	$LN14@Insert_hin
	lea	eax, DWORD PTR __Where$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??4?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
	mov	DWORD PTR tv883[ebp], eax
	mov	ecx, DWORD PTR tv883[ebp]
	call	??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator--
	mov	DWORD PTR tv884[ebp], eax
	mov	ecx, DWORD PTR tv884[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv885[ebp], eax
	mov	ecx, DWORD PTR tv885[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Key
	mov	DWORD PTR tv886[ebp], eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIABU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Kfn
	mov	DWORD PTR tv887[ebp], eax
	push	1690					; 0000069aH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR tv886[ebp]
	push	eax
	mov	ecx, DWORD PTR tv887[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@I@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@I@std@@ABIABI@std@@YA_NAAU?$less@I@0@ABI1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned int> &,unsigned int const &,unsigned int const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv888[ebp], al
	movzx	edx, BYTE PTR tv888[ebp]
	test	edx, edx
	jne	$LN14@Insert_hin

; 1689 : 					this->_Kfn(_Val),
; 1690 : 					this->_Key((--(_Next = _Where))._Mynode())))
; 1691 : 				{	// insert before _Where
; 1692 : 				if (this->_Isnil(this->_Right(_Next._Mynode())))

	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv889[ebp], eax
	mov	eax, DWORD PTR tv889[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	DWORD PTR tv890[ebp], eax
	mov	ecx, DWORD PTR tv890[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Isnil
	add	esp, 4
	mov	DWORD PTR tv891[ebp], eax
	mov	eax, DWORD PTR tv891[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN16@Insert_hin

; 1693 : 					return (_Insert_at(false, _Next._Mynode(),

	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv892[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@YAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv892[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Insert_at<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin

; 1694 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1695 : 				else

	jmp	SHORT $LN17@Insert_hin
$LN16@Insert_hin:

; 1696 : 					return (_Insert_at(true, _Where._Mynode(),

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv893[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@YAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv893[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Insert_at<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin
$LN17@Insert_hin:

; 1697 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1698 : 				}
; 1699 : 			else if (!_DEBUG_LT_PRED(this->_Getcomp(),

	jmp	$LN9@Insert_hin
$LN14@Insert_hin:

; 1700 : 				this->_Kfn(_Val), this->_Key(_Where._Mynode()))
; 1701 : 				&& (++(_Next = _Where) == end()

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv894[ebp], eax
	mov	eax, DWORD PTR tv894[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Key
	mov	DWORD PTR tv895[ebp], eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIABU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Kfn
	mov	DWORD PTR tv896[ebp], eax
	push	1700					; 000006a4H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR tv895[ebp]
	push	edx
	mov	eax, DWORD PTR tv896[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@I@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@I@std@@ABIABI@std@@YA_NAAU?$less@I@0@ABI1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned int> &,unsigned int const &,unsigned int const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv897[ebp], al
	movzx	ecx, BYTE PTR tv897[ebp]
	test	ecx, ecx
	jne	$LN37@Insert_hin
	lea	edx, DWORD PTR $T10[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::end
	mov	DWORD PTR tv898[ebp], eax
	mov	eax, DWORD PTR tv898[ebp]
	mov	DWORD PTR tv835[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 2
	mov	DWORD PTR $T2[ebp], ecx
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??4?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
	mov	DWORD PTR tv902[ebp], eax
	mov	ecx, DWORD PTR tv902[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator++
	mov	DWORD PTR tv903[ebp], eax
	mov	eax, DWORD PTR tv835[ebp]
	push	eax
	mov	ecx, DWORD PTR tv903[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator==
	mov	BYTE PTR tv904[ebp], al
	movzx	ecx, BYTE PTR tv904[ebp]
	test	ecx, ecx
	jne	SHORT $LN36@Insert_hin
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIABU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Kfn
	mov	DWORD PTR tv905[ebp], eax
	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv906[ebp], eax
	mov	eax, DWORD PTR tv906[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Key
	mov	DWORD PTR tv907[ebp], eax
	push	1703					; 000006a7H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	ecx, DWORD PTR tv905[ebp]
	push	ecx
	mov	edx, DWORD PTR tv907[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@I@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@I@std@@ABIABI@std@@YA_NAAU?$less@I@0@ABI1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned int> &,unsigned int const &,unsigned int const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv908[ebp], al
	movzx	eax, BYTE PTR tv908[ebp]
	test	eax, eax
	jne	SHORT $LN37@Insert_hin
$LN36@Insert_hin:
	mov	DWORD PTR tv416[ebp], 1
	jmp	SHORT $LN38@Insert_hin
$LN37@Insert_hin:
	mov	DWORD PTR tv416[ebp], 0
$LN38@Insert_hin:
	mov	cl, BYTE PTR tv416[ebp]
	mov	BYTE PTR $T11[ebp], cl
	mov	DWORD PTR __$EHRec$[ebp+12], 2
	mov	edx, DWORD PTR $T2[ebp]
	and	edx, 2
	je	SHORT $LN52@Insert_hin
	and	DWORD PTR $T2[ebp], -3			; fffffffdH
	lea	ecx, DWORD PTR $T10[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN52@Insert_hin:
	movzx	eax, BYTE PTR $T11[ebp]
	test	eax, eax
	je	$LN18@Insert_hin

; 1702 : 					|| !_DEBUG_LT_PRED(this->_Getcomp(),
; 1703 : 						this->_Key(_Next._Mynode()), this->_Kfn(_Val))))
; 1704 : 				{	// insert after _Where
; 1705 : 				if (this->_Isnil(this->_Right(_Where._Mynode())))

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv909[ebp], eax
	mov	eax, DWORD PTR tv909[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	DWORD PTR tv910[ebp], eax
	mov	ecx, DWORD PTR tv910[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Isnil
	add	esp, 4
	mov	DWORD PTR tv911[ebp], eax
	mov	eax, DWORD PTR tv911[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN20@Insert_hin

; 1706 : 					return (_Insert_at(false, _Where._Mynode(),

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv912[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@YAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv912[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Insert_at<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin

; 1707 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1708 : 				else

	jmp	SHORT $LN21@Insert_hin
$LN20@Insert_hin:

; 1709 : 					return (_Insert_at(true, _Next._Mynode(),

	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv913[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@YAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv913[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Insert_at<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin
$LN21@Insert_hin:

; 1710 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1711 : 				}
; 1712 : 			else

	jmp	SHORT $LN9@Insert_hin
$LN18@Insert_hin:

; 1713 : 				_Leftish = true;	// nearest point is beginning of sequence

	mov	BYTE PTR __Leftish$[ebp], 1
$LN9@Insert_hin:

; 1714 : 			}
; 1715 : 		else

	jmp	$LN5@Insert_hin
$LN6@Insert_hin:

; 1716 : 			{	// insert only if unique
; 1717 : 			if (_Where == begin())

	lea	eax, DWORD PTR $T8[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::begin
	mov	DWORD PTR tv914[ebp], eax
	mov	ecx, DWORD PTR tv914[ebp]
	mov	DWORD PTR tv845[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	mov	edx, DWORD PTR tv845[ebp]
	push	edx
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator==
	mov	BYTE PTR tv915[ebp], al
	mov	al, BYTE PTR tv915[ebp]
	mov	BYTE PTR $T9[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T8[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	ecx, BYTE PTR $T9[ebp]
	test	ecx, ecx
	je	$LN22@Insert_hin

; 1718 : 				{	// insert at beginning if before first element
; 1719 : 				if (_DEBUG_LT_PRED(this->_Getcomp(),

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv916[ebp], eax
	mov	eax, DWORD PTR tv916[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Key
	mov	DWORD PTR tv917[ebp], eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIABU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Kfn
	mov	DWORD PTR tv918[ebp], eax
	push	1720					; 000006b8H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR tv917[ebp]
	push	edx
	mov	eax, DWORD PTR tv918[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@I@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@I@std@@ABIABI@std@@YA_NAAU?$less@I@0@ABI1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned int> &,unsigned int const &,unsigned int const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv919[ebp], al
	movzx	ecx, BYTE PTR tv919[ebp]
	test	ecx, ecx
	je	SHORT $LN24@Insert_hin

; 1720 : 					this->_Kfn(_Val), this->_Key(_Where._Mynode())))
; 1721 : 					return (_Insert_at(true, _Where._Mynode(),

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv920[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@YAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv920[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Insert_at<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin
$LN24@Insert_hin:

; 1722 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1723 : 				}

	jmp	$LN5@Insert_hin
$LN22@Insert_hin:

; 1724 : 			else if (_Where == end())

	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::end
	mov	DWORD PTR tv921[ebp], eax
	mov	ecx, DWORD PTR tv921[ebp]
	mov	DWORD PTR tv850[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 7
	mov	edx, DWORD PTR tv850[ebp]
	push	edx
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator==
	mov	BYTE PTR tv922[ebp], al
	mov	al, BYTE PTR tv922[ebp]
	mov	BYTE PTR $T7[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T6[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	ecx, BYTE PTR $T7[ebp]
	test	ecx, ecx
	je	$LN25@Insert_hin

; 1725 : 				{	// insert at end if after last element
; 1726 : 				if (_DEBUG_LT_PRED(this->_Getcomp(),

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIABU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Kfn
	mov	DWORD PTR tv923[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Rmost
	mov	DWORD PTR tv924[ebp], eax
	mov	ecx, DWORD PTR tv924[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Key
	mov	DWORD PTR tv925[ebp], eax
	push	1727					; 000006bfH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR tv923[ebp]
	push	eax
	mov	ecx, DWORD PTR tv925[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@I@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@I@std@@ABIABI@std@@YA_NAAU?$less@I@0@ABI1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned int> &,unsigned int const &,unsigned int const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv926[ebp], al
	movzx	edx, BYTE PTR tv926[ebp]
	test	edx, edx
	je	SHORT $LN27@Insert_hin

; 1727 : 					this->_Key(_Rmost()), this->_Kfn(_Val)))
; 1728 : 					return (_Insert_at(false, _Rmost(),

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Rmost
	mov	DWORD PTR tv927[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@YAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv927[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	push	0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Insert_at<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin
$LN27@Insert_hin:

; 1729 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1730 : 				}
; 1731 : 			else if (_DEBUG_LT_PRED(this->_Getcomp(),

	jmp	$LN5@Insert_hin
$LN25@Insert_hin:

; 1732 : 				this->_Kfn(_Val), this->_Key(_Where._Mynode()))
; 1733 : 				&& _DEBUG_LT_PRED(this->_Getcomp(),

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv928[ebp], eax
	mov	eax, DWORD PTR tv928[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Key
	mov	DWORD PTR tv929[ebp], eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIABU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Kfn
	mov	DWORD PTR tv930[ebp], eax
	push	1732					; 000006c4H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR tv929[ebp]
	push	edx
	mov	eax, DWORD PTR tv930[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@I@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@I@std@@ABIABI@std@@YA_NAAU?$less@I@0@ABI1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned int> &,unsigned int const &,unsigned int const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv931[ebp], al
	movzx	ecx, BYTE PTR tv931[ebp]
	test	ecx, ecx
	je	$LN28@Insert_hin
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIABU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Kfn
	mov	DWORD PTR tv932[ebp], eax
	lea	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??4?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
	mov	DWORD PTR tv933[ebp], eax
	mov	ecx, DWORD PTR tv933[ebp]
	call	??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator--
	mov	DWORD PTR tv934[ebp], eax
	mov	ecx, DWORD PTR tv934[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv935[ebp], eax
	mov	edx, DWORD PTR tv935[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Key
	mov	DWORD PTR tv936[ebp], eax
	push	1735					; 000006c7H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR tv932[ebp]
	push	eax
	mov	ecx, DWORD PTR tv936[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@I@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@I@std@@ABIABI@std@@YA_NAAU?$less@I@0@ABI1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned int> &,unsigned int const &,unsigned int const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv937[ebp], al
	movzx	edx, BYTE PTR tv937[ebp]
	test	edx, edx
	je	$LN28@Insert_hin

; 1734 : 					this->_Key((--(_Next = _Where))._Mynode()),
; 1735 : 					this->_Kfn(_Val)))
; 1736 : 				{	// insert before _Where
; 1737 : 				if (this->_Isnil(this->_Right(_Next._Mynode())))

	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv938[ebp], eax
	mov	eax, DWORD PTR tv938[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	DWORD PTR tv939[ebp], eax
	mov	ecx, DWORD PTR tv939[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Isnil
	add	esp, 4
	mov	DWORD PTR tv940[ebp], eax
	mov	eax, DWORD PTR tv940[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN30@Insert_hin

; 1738 : 					return (_Insert_at(false, _Next._Mynode(),

	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv941[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@YAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv941[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Insert_at<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin

; 1739 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1740 : 				else

	jmp	SHORT $LN31@Insert_hin
$LN30@Insert_hin:

; 1741 : 					return (_Insert_at(true, _Where._Mynode(),

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv942[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@YAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv942[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Insert_at<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin
$LN31@Insert_hin:

; 1742 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1743 : 				}
; 1744 : 			else if (_DEBUG_LT_PRED(this->_Getcomp(),

	jmp	$LN5@Insert_hin
$LN28@Insert_hin:

; 1745 : 				this->_Key(_Where._Mynode()), this->_Kfn(_Val))
; 1746 : 				&& (++(_Next = _Where) == end()

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIABU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Kfn
	mov	DWORD PTR tv943[ebp], eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv944[ebp], eax
	mov	ecx, DWORD PTR tv944[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Key
	mov	DWORD PTR tv945[ebp], eax
	push	1745					; 000006d1H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR tv943[ebp]
	push	edx
	mov	eax, DWORD PTR tv945[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@I@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@I@std@@ABIABI@std@@YA_NAAU?$less@I@0@ABI1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned int> &,unsigned int const &,unsigned int const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv946[ebp], al
	movzx	ecx, BYTE PTR tv946[ebp]
	test	ecx, ecx
	je	$LN40@Insert_hin
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::end
	mov	DWORD PTR tv947[ebp], eax
	mov	eax, DWORD PTR tv947[ebp]
	mov	DWORD PTR tv864[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 8
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 4
	mov	DWORD PTR $T2[ebp], ecx
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??4?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
	mov	DWORD PTR tv951[ebp], eax
	mov	ecx, DWORD PTR tv951[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator++
	mov	DWORD PTR tv952[ebp], eax
	mov	eax, DWORD PTR tv864[ebp]
	push	eax
	mov	ecx, DWORD PTR tv952[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator==
	mov	BYTE PTR tv953[ebp], al
	movzx	ecx, BYTE PTR tv953[ebp]
	test	ecx, ecx
	jne	SHORT $LN39@Insert_hin
	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv954[ebp], eax
	mov	edx, DWORD PTR tv954[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Key
	mov	DWORD PTR tv955[ebp], eax
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIABU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Kfn
	mov	DWORD PTR tv956[ebp], eax
	push	1748					; 000006d4H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	ecx, DWORD PTR tv955[ebp]
	push	ecx
	mov	edx, DWORD PTR tv956[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@I@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@I@std@@ABIABI@std@@YA_NAAU?$less@I@0@ABI1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned int> &,unsigned int const &,unsigned int const &>
	add	esp, 20					; 00000014H
	mov	BYTE PTR tv957[ebp], al
	movzx	eax, BYTE PTR tv957[ebp]
	test	eax, eax
	je	SHORT $LN40@Insert_hin
$LN39@Insert_hin:
	mov	DWORD PTR tv740[ebp], 1
	jmp	SHORT $LN41@Insert_hin
$LN40@Insert_hin:
	mov	DWORD PTR tv740[ebp], 0
$LN41@Insert_hin:
	mov	cl, BYTE PTR tv740[ebp]
	mov	BYTE PTR $T5[ebp], cl
	mov	DWORD PTR __$EHRec$[ebp+12], 2
	mov	edx, DWORD PTR $T2[ebp]
	and	edx, 4
	je	SHORT $LN57@Insert_hin
	and	DWORD PTR $T2[ebp], -5			; fffffffbH
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN57@Insert_hin:
	movzx	eax, BYTE PTR $T5[ebp]
	test	eax, eax
	je	$LN5@Insert_hin

; 1747 : 					|| _DEBUG_LT_PRED(this->_Getcomp(),
; 1748 : 						this->_Kfn(_Val), this->_Key(_Next._Mynode()))))
; 1749 : 				{	// insert after _Where
; 1750 : 				if (this->_Isnil(this->_Right(_Where._Mynode())))

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv958[ebp], eax
	mov	eax, DWORD PTR tv958[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	DWORD PTR tv959[ebp], eax
	mov	ecx, DWORD PTR tv959[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Isnil
	add	esp, 4
	mov	DWORD PTR tv960[ebp], eax
	mov	eax, DWORD PTR tv960[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN33@Insert_hin

; 1751 : 					return (_Insert_at(false, _Where._Mynode(),

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv961[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@YAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv961[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Insert_at<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin

; 1752 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1753 : 				else

	jmp	SHORT $LN5@Insert_hin
$LN33@Insert_hin:

; 1754 : 					return (_Insert_at(true, _Next._Mynode(),

	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR tv962[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@YAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR tv962[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Insert_at<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN35@Insert_hin
$LN5@Insert_hin:
	jmp	SHORT $LN42@Insert_hin
__catch$??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$0:

; 1755 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1756 : 				}
; 1757 : 			}
; 1758 : 		_CATCH_ALL
; 1759 : 		_Destroy_if_not_nil(_Newnode);

	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Destroy_if_not_nil

; 1760 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1761 : 		_CATCH_END

	mov	eax, $LN60@Insert_hin
	ret	0
$LN42@Insert_hin:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$1
$LN60@Insert_hin:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$1:

; 1762 : 
; 1763 : 		return (_Insert_nohint(_Leftish,

	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@YAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &>
	add	esp, 4
	push	eax
	movzx	edx, BYTE PTR __Leftish$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_nohint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Insert_nohint<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
	mov	DWORD PTR tv963[ebp], eax
	mov	ecx, DWORD PTR tv963[ebp]
	mov	DWORD PTR tv875[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 10		; 0000000aH
	mov	edx, DWORD PTR tv875[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN35@Insert_hin:

; 1764 : 			_STD forward<_Valty>(_Val), _Newnode).first);
; 1765 : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN90@Insert_hin
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 536				; 00000218H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
	npad	3
$LN90@Insert_hin:
	DD	1
	DD	$LN89@Insert_hin
$LN89@Insert_hin:
	DD	-44					; ffffffd4H
	DD	12					; 0000000cH
	DD	$LN87@Insert_hin
$LN87@Insert_hin:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$2:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$3:
	lea	ecx, DWORD PTR __Next$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$5:
	lea	ecx, DWORD PTR $T14[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$6:
	lea	ecx, DWORD PTR $T12[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$7:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 2
	je	$LN51@Insert_hin
	and	DWORD PTR $T2[ebp], -3			; fffffffdH
	lea	ecx, DWORD PTR $T10[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN51@Insert_hin:
	ret	0
__unwindfunclet$??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$8:
	lea	ecx, DWORD PTR $T8[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$9:
	lea	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$10:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 4
	je	$LN56@Insert_hin
	and	DWORD PTR $T2[ebp], -5			; fffffffbH
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN56@Insert_hin:
	ret	0
__unwindfunclet$??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z$11:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@XZ
__ehhandler$??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-540]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Insert_hint<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z
_TEXT	SEGMENT
tv92 = -236						; size = 4
__Pnode$ = -36						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
_<_Val_0>$ = 8						; size = 4
_<_Val_1>$ = 12						; size = 4
_<_Val_2>$ = 16						; size = 4
??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Buynode<std::piecewise_construct_t const &,std::tuple<unsigned int const &>,std::tuple<> >, COMDAT
; _this$ = ecx

; 880  : 		{	// allocate a node with defaults and set links and value

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 881  : 		_Nodeptr _Pnode = _Buynode0();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Buynode0
	mov	DWORD PTR __Pnode$[ebp], eax

; 882  : 
; 883  : 		this->_Color(_Pnode) = _Red;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 884  : 		this->_Isnil(_Pnode) = false;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Isnil
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 885  : 
; 886  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 887  : 		this->_Getal().construct(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myval
	add	esp, 4
	mov	DWORD PTR tv92[ebp], eax
	mov	ecx, DWORD PTR _<_Val_2>$[ebp]
	push	ecx
	call	??$forward@V?$tuple@$$V@std@@@std@@YA$$QAV?$tuple@$$V@0@AAV10@@Z ; std::forward<std::tuple<> >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _<_Val_1>$[ebp]
	push	edx
	call	??$forward@V?$tuple@ABI@std@@@std@@YA$$QAV?$tuple@ABI@0@AAV10@@Z ; std::forward<std::tuple<unsigned int const &> >
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _<_Val_0>$[ebp]
	push	eax
	call	??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z ; std::forward<std::piecewise_construct_t const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR tv92[ebp]
	push	ecx
	call	??$addressof@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@YAPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@0@AAU10@@Z ; std::addressof<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getal
	mov	ecx, eax
	call	??$construct@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::construct<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,std::piecewise_construct_t const &,std::tuple<unsigned int const &>,std::tuple<> >
	jmp	SHORT $LN4@Buynode
__catch$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z$0:

; 888  : 			_STD addressof(_Myval(_Pnode)),
; 889  : 				_STD forward<_Valty>(_Val)...);
; 890  : 		_CATCH_ALL
; 891  : 		_Freenode0(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Freenode0@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Freenode0

; 892  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 893  : 		_CATCH_END

	mov	eax, $LN7@Buynode
	ret	0
$LN4@Buynode:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z$1
$LN7@Buynode:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z$1:

; 894  : 
; 895  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
$LN3@Buynode:

; 896  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-240]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Buynode<std::piecewise_construct_t const &,std::tuple<unsigned int const &>,std::tuple<> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V?$tuple@$$V@std@@@std@@YA$$QAV?$tuple@$$V@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$tuple@$$V@std@@@std@@YA$$QAV?$tuple@$$V@0@AAV10@@Z PROC ; std::forward<std::tuple<> >, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@V?$tuple@$$V@std@@@std@@YA$$QAV?$tuple@$$V@0@AAV10@@Z ENDP ; std::forward<std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V?$tuple@ABI@std@@@std@@YA$$QAV?$tuple@ABI@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$tuple@ABI@std@@@std@@YA$$QAV?$tuple@ABI@0@AAV10@@Z PROC ; std::forward<std::tuple<unsigned int const &> >, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@V?$tuple@ABI@std@@@std@@YA$$QAV?$tuple@ABI@0@AAV10@@Z ENDP ; std::forward<std::tuple<unsigned int const &> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z PROC ; std::forward<std::piecewise_construct_t const &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z ENDP ; std::forward<std::piecewise_construct_t const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$?0ABI$0A@@?$tuple@ABI@std@@QAE@ABI@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
__This_arg$ = 8						; size = 4
??$?0ABI$0A@@?$tuple@ABI@std@@QAE@ABI@Z PROC		; std::tuple<unsigned int const &>::tuple<unsigned int const &><unsigned int const &,0>, COMDAT
; _this$ = ecx

; 428  : 		{	// construct from one or more copied elements

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 427  : 		: _Mybase(_Exact_args_t{}, _Rest_arg...), _Myfirst(_This_arg)

	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	movzx	ecx, BYTE PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z ; std::tuple<>::tuple<><std::_Exact_args_t,0>
	mov	eax, DWORD PTR __This_arg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0ABI@?$_Tuple_val@ABI@std@@QAE@ABI@Z ; std::_Tuple_val<unsigned int const &>::_Tuple_val<unsigned int const &><unsigned int const &>

; 429  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0ABI$0A@@?$tuple@ABI@std@@QAE@ABI@Z ENDP		; std::tuple<unsigned int const &>::tuple<unsigned int const &><unsigned int const &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Find_unchecked1@PAPAEPAE@std@@YAPAPAEPAPAE0ABQAEU?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Find_unchecked1@PAPAEPAE@std@@YAPAPAEPAPAE0ABQAEU?$integral_constant@_N$0A@@0@@Z PROC ; std::_Find_unchecked1<unsigned char * *,unsigned char *>, COMDAT

; 3256 : 	{	// find first matching _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 3257 : 	for (; _First != _Last; ++_First)

	jmp	SHORT $LN4@Find_unche
$LN2@Find_unche:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 4
	mov	DWORD PTR __First$[ebp], eax
$LN4@Find_unche:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN3@Find_unche

; 3258 : 		if (*_First == _Val)

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN5@Find_unche

; 3259 : 			break;

	jmp	SHORT $LN3@Find_unche
$LN5@Find_unche:

; 3260 : 	return (_First);

	jmp	SHORT $LN2@Find_unche
$LN3@Find_unche:
	mov	eax, DWORD PTR __First$[ebp]

; 3261 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Find_unchecked1@PAPAEPAE@std@@YAPAPAEPAPAE0ABQAEU?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Find_unchecked1<unsigned char * *,unsigned char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Debug_pointer@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXAAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@PB_WI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Debug_pointer@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXAAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@PB_WI@Z PROC ; std::_Debug_pointer<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > > >, COMDAT

; 918  : 	{	// (don't) test non-pointer for non-singularity, arbitrary type

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 919  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_pointer@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXAAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@PB_WI@Z ENDP ; std::_Debug_pointer<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\map
;	COMDAT ??$_Kfn@QAEI@?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@SAABQAEABU?$pair@QAEI@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Kfn@QAEI@?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@SAABQAEABU?$pair@QAEI@1@@Z PROC ; std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0>::_Kfn<unsigned char * const,unsigned int>, COMDAT

; 61   : 		{	// extract key from element value

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 62   : 		return (_Val.first);

	mov	eax, DWORD PTR __Val$[ebp]

; 63   : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Kfn@QAEI@?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@SAABQAEABU?$pair@QAEI@1@@Z ENDP ; std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0>::_Kfn<unsigned char * const,unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??$_Lbound@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@ABQAE@Z
_TEXT	SEGMENT
__Wherenode$ = -32					; size = 4
__Pnode$ = -20						; size = 4
_this$ = -8						; size = 4
__Keyval$ = 8						; size = 4
??$_Lbound@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@ABQAE@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Lbound<unsigned char *>, COMDAT
; _this$ = ecx

; 2059 : 		{	// find leftmost node not less than _Keyval

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2060 : 		_Nodeptr _Pnode = _Root();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Root
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax

; 2061 : 		_Nodeptr _Wherenode = this->_Myhead();	// end() if search fails

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myhead
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Wherenode$[ebp], eax
$LN2@Lbound:

; 2062 : 
; 2063 : 		while (!this->_Isnil(_Pnode))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@Lbound

; 2064 : 			if (_Compare(this->_Key(_Pnode), _Keyval))

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Key
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compare@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBE_NABQAE0@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Compare
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@Lbound

; 2065 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 2066 : 			else

	jmp	SHORT $LN5@Lbound
$LN4@Lbound:

; 2067 : 				{	// _Pnode not less than _Keyval, remember it
; 2068 : 				_Wherenode = _Pnode;

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Wherenode$[ebp], eax

; 2069 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN5@Lbound:

; 2070 : 				}

	jmp	SHORT $LN2@Lbound
$LN3@Lbound:

; 2071 : 
; 2072 : 		return (_Wherenode);	// return best remembered candidate

	mov	eax, DWORD PTR __Wherenode$[ebp]

; 2073 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$_Lbound@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@ABQAE@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Lbound<unsigned char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AAU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@E@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@E@std@@@0@AAU10@@Z PROC ; std::move<std::_Wrap_alloc<std::allocator<unsigned char> > &>, COMDAT

; 1291 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1293 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@E@std@@@0@AAU10@@Z ENDP ; std::move<std::_Wrap_alloc<std::allocator<unsigned char> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAPAU21@@Z
_TEXT	SEGMENT
tv73 = -220						; size = 4
$T1 = -212						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAPAU21@@Z PROC ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::construct<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &>, COMDAT
; _this$ = ecx

; 736  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 737  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &>
	add	esp, 4
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN1@construct:

; 738  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAPAU21@@Z ENDP ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::construct<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAPAU21@@Z
_TEXT	SEGMENT
tv73 = -220						; size = 4
$T1 = -212						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAPAU21@@Z PROC ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >::construct<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> * &>, COMDAT
; _this$ = ecx

; 736  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 737  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> * &>
	add	esp, 4
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN1@construct:

; 738  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAPAU21@@Z ENDP ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >::construct<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAPAU21@@Z
_TEXT	SEGMENT
tv73 = -220						; size = 4
$T1 = -212						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAPAU21@@Z PROC ; std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >::construct<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> * &>, COMDAT
; _this$ = ecx

; 736  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 737  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> * &>
	add	esp, 4
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN1@construct:

; 738  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAPAU21@@Z ENDP ; std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >::construct<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@@Z PROC ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::destroy<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >, COMDAT
; _this$ = ecx

; 743  : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 744  : 		_Ptr->~_Uty();

	push	0
	mov	ecx, DWORD PTR __Ptr$[ebp]
	call	??_G?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEPAXI@Z

; 745  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::destroy<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z PROC ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::destroy<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>, COMDAT
; _this$ = ecx

; 743  : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 744  : 		_Ptr->~_Uty();
; 745  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z ENDP ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::destroy<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@U?$pair@QAEI@std@@@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEI@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U?$pair@QAEI@std@@@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEI@1@@Z PROC ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >::destroy<std::pair<unsigned char * const,unsigned int> >, COMDAT
; _this$ = ecx

; 743  : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 744  : 		_Ptr->~_Uty();
; 745  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U?$pair@QAEI@std@@@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEI@1@@Z ENDP ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >::destroy<std::pair<unsigned char * const,unsigned int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z PROC ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >::destroy<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>, COMDAT
; _this$ = ecx

; 743  : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 744  : 		_Ptr->~_Uty();
; 745  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z ENDP ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >::destroy<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Rechecked@PAPAEPAPAE@std@@YAAAPAPAEAAPAPAEPAPAE@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAPAEPAPAE@std@@YAAAPAPAEAAPAPAEPAPAE@Z PROC ; std::_Rechecked<unsigned char * *,unsigned char * *>, COMDAT

; 457  : 	{	// reset checked from unchecked, generic

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 458  : 	_Dest = _Src;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx

; 459  : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]

; 460  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Rechecked@PAPAEPAPAE@std@@YAAAPAPAEAAPAPAEPAPAE@Z ENDP ; std::_Rechecked<unsigned char * *,unsigned char * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move_al_unchecked@PAPAEPAPAEV?$allocator@PAE@std@@@std@@YAPAPAEPAPAE00AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
$T2 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move_al_unchecked@PAPAEPAPAEV?$allocator@PAE@std@@@std@@YAPAPAEPAPAE00AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@@Z PROC ; std::_Uninitialized_move_al_unchecked<unsigned char * *,unsigned char * *,std::allocator<unsigned char *> >, COMDAT

; 301  : 	{	// move [_First, _Last) to raw _Dest, using _Al, choose optimization

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 302  : 	typedef decltype(_STD move(*_First)) _Src_type; // TRANSITION MODULES VSO#222794
; 303  : 	return (_Uninitialized_move_al_unchecked1(_First, _Last, _Dest, _Al,

	movzx	eax, BYTE PTR $T2[ebp]
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??$_Ptr_move_cat@PAEPAE@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAPAE0@Z ; std::_Ptr_move_cat<unsigned char *,unsigned char *>
	add	esp, 12					; 0000000cH
	mov	cl, BYTE PTR [eax]
	movzx	edx, cl
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninitialized_move_al_unchecked1@PAEPAEV?$allocator@PAE@std@@@std@@YAPAPAEPAPAE00AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ; std::_Uninitialized_move_al_unchecked1<unsigned char *,unsigned char *,std::allocator<unsigned char *> >
	add	esp, 24					; 00000018H

; 304  : 		_Ptr_move_cat(_First, _Dest),
; 305  : 		_Uses_default_construct_t<_Alloc, decltype(_Unfancy(_Dest)), _Src_type>()));
; 306  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_move_al_unchecked@PAPAEPAPAEV?$allocator@PAE@std@@@std@@YAPAPAEPAPAE00AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@@Z ENDP ; std::_Uninitialized_move_al_unchecked<unsigned char * *,unsigned char * *,std::allocator<unsigned char *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Unchecked@PAPAE@std@@YAPAPAEPAPAE@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAPAE@std@@YAPAPAEPAPAE@Z PROC		; std::_Unchecked<unsigned char * *>, COMDAT

; 427  : 	{	// construct unchecked from checked, generic

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 428  : 	return (_Src);

	mov	eax, DWORD PTR __Src$[ebp]

; 429  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unchecked@PAPAE@std@@YAPAPAEPAPAE@Z ENDP		; std::_Unchecked<unsigned char * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@@Z PROC ; std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >::destroy<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >, COMDAT
; _this$ = ecx

; 743  : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 744  : 		_Ptr->~_Uty();

	push	0
	mov	ecx, DWORD PTR __Ptr$[ebp]
	call	??_G?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@QAEPAXI@Z

; 745  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >::destroy<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z PROC ; std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >::destroy<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>, COMDAT
; _this$ = ecx

; 743  : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 744  : 		_Ptr->~_Uty();
; 745  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z ENDP ; std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >::destroy<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
tv74 = -220						; size = 4
$T1 = -212						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx

; 736  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 737  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv74[ebp], edx
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv74[ebp], 0
$LN1@construct:

; 738  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx

; 743  : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 744  : 		_Ptr->~_Uty();
; 745  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@AAU10@@Z PROC ; std::move<std::_Wrap_alloc<std::allocator<unsigned char *> > &>, COMDAT

; 1291 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1293 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@AAU10@@Z ENDP ; std::move<std::_Wrap_alloc<std::allocator<unsigned char *> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_copy_al_unchecked@PBEPAEV?$allocator@E@std@@@std@@YAPAEPBE0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
$T2 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy_al_unchecked@PBEPAEV?$allocator@E@std@@@std@@YAPAEPBE0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z PROC ; std::_Uninitialized_copy_al_unchecked<unsigned char const *,unsigned char *,std::allocator<unsigned char> >, COMDAT

; 248  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, choose optimization

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 249  : 	return (_Uninitialized_copy_al_unchecked1(_First, _Last, _Dest, _Al,

	movzx	eax, BYTE PTR $T2[ebp]
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??$_Ptr_copy_cat@$$CBEE@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQBEABQAE@Z ; std::_Ptr_copy_cat<unsigned char const ,unsigned char>
	add	esp, 12					; 0000000cH
	mov	cl, BYTE PTR [eax]
	movzx	edx, cl
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninitialized_copy_al_unchecked1@$$CBEEV?$allocator@E@std@@@std@@YAPAEPBE0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ; std::_Uninitialized_copy_al_unchecked1<unsigned char const ,unsigned char,std::allocator<unsigned char> >
	add	esp, 24					; 00000018H

; 250  : 		_Ptr_copy_cat(_First, _Dest),
; 251  : 		_Uses_default_construct_t<_Alloc, decltype(_Unfancy(_Dest)), decltype(*_First)>()));
; 252  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_copy_al_unchecked@PBEPAEV?$allocator@E@std@@@std@@YAPAEPBE0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z ENDP ; std::_Uninitialized_copy_al_unchecked<unsigned char const *,unsigned char *,std::allocator<unsigned char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??$_Unchecked@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@YAPBEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T2 = -212						; size = 4
__$EHRec$ = -12						; size = 12
__Iter$ = 8						; size = 12
??$_Unchecked@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@YAPBEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@0@@Z PROC ; std::_Unchecked<std::_Vector_val<std::_Simple_types<unsigned char> > >, COMDAT

; 271  : 	{	// convert to unchecked

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@YAPBEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 272  : 	return (_Iter._Unchecked());

	lea	ecx, DWORD PTR __Iter$[ebp]
	call	?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QBEPBEXZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >::_Unchecked
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Iter$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T2[ebp]

; 273  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@YAPBEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@0@@Z$0:
	lea	ecx, DWORD PTR __Iter$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@YAPBEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@YAPBEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Unchecked@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@YAPBEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@0@@Z ENDP ; std::_Unchecked<std::_Vector_val<std::_Simple_types<unsigned char> > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Rechecked@PAEPAE@std@@YAAAPAEAAPAEPAE@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAEPAE@std@@YAAAPAEAAPAEPAE@Z PROC	; std::_Rechecked<unsigned char *,unsigned char *>, COMDAT

; 457  : 	{	// reset checked from unchecked, generic

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 458  : 	_Dest = _Src;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx

; 459  : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]

; 460  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Rechecked@PAEPAE@std@@YAAAPAEAAPAEPAE@Z ENDP	; std::_Rechecked<unsigned char *,unsigned char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_copy_al_unchecked@PAEPAEV?$allocator@E@std@@@std@@YAPAEPAE00AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
$T2 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy_al_unchecked@PAEPAEV?$allocator@E@std@@@std@@YAPAEPAE00AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z PROC ; std::_Uninitialized_copy_al_unchecked<unsigned char *,unsigned char *,std::allocator<unsigned char> >, COMDAT

; 248  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, choose optimization

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 249  : 	return (_Uninitialized_copy_al_unchecked1(_First, _Last, _Dest, _Al,

	movzx	eax, BYTE PTR $T2[ebp]
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??$_Ptr_copy_cat@EE@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAE0@Z ; std::_Ptr_copy_cat<unsigned char,unsigned char>
	add	esp, 12					; 0000000cH
	mov	cl, BYTE PTR [eax]
	movzx	edx, cl
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninitialized_copy_al_unchecked1@EEV?$allocator@E@std@@@std@@YAPAEPAE00AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ; std::_Uninitialized_copy_al_unchecked1<unsigned char,unsigned char,std::allocator<unsigned char> >
	add	esp, 24					; 00000018H

; 250  : 		_Ptr_copy_cat(_First, _Dest),
; 251  : 		_Uses_default_construct_t<_Alloc, decltype(_Unfancy(_Dest)), decltype(*_First)>()));
; 252  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_copy_al_unchecked@PAEPAEV?$allocator@E@std@@@std@@YAPAEPAE00AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z ENDP ; std::_Uninitialized_copy_al_unchecked<unsigned char *,unsigned char *,std::allocator<unsigned char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Unchecked@PAE@std@@YAPAEPAE@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAE@std@@YAPAEPAE@Z PROC			; std::_Unchecked<unsigned char *>, COMDAT

; 427  : 	{	// construct unchecked from checked, generic

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 428  : 	return (_Src);

	mov	eax, DWORD PTR __Src$[ebp]

; 429  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unchecked@PAE@std@@YAPAEPAE@Z ENDP			; std::_Unchecked<unsigned char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Copy_memmove@PAEPAE@std@@YAPAEPAE00@Z
_TEXT	SEGMENT
__Count$ = -44						; size = 4
__Dest_ch$ = -32					; size = 4
__Last_ch$ = -20					; size = 4
__First_ch$ = -8					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAEPAE@std@@YAPAEPAE00@Z PROC		; std::_Copy_memmove<unsigned char *,unsigned char *>, COMDAT

; 2301 : 	{	// implement copy-like function as memmove

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 2302 : 	const char * const _First_ch = reinterpret_cast<const char *>(_First);

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __First_ch$[ebp], eax

; 2303 : 	const char * const _Last_ch = reinterpret_cast<const char *>(_Last);

	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR __Last_ch$[ebp], eax

; 2304 : 	char * const _Dest_ch = reinterpret_cast<char *>(_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Dest_ch$[ebp], eax

; 2305 : 	const size_t _Count = _Last_ch - _First_ch;

	mov	eax, DWORD PTR __Last_ch$[ebp]
	sub	eax, DWORD PTR __First_ch$[ebp]
	mov	DWORD PTR __Count$[ebp], eax

; 2306 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First_ch$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest_ch$[ebp]
	push	edx
	call	_memmove
	add	esp, 12					; 0000000cH

; 2307 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	mov	eax, DWORD PTR __Dest_ch$[ebp]
	add	eax, DWORD PTR __Count$[ebp]

; 2308 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Copy_memmove@PAEPAE@std@@YAPAEPAE00@Z ENDP		; std::_Copy_memmove<unsigned char *,unsigned char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\utility
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &,bool,void,0>, COMDAT
; _this$ = ecx

; 172  : 		{	// construct from moved values

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 170  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z

; 171  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@_N@std@@YA$$QA_NAA_N@Z	; std::forward<bool>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx+12], dl

; 173  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &,bool,void,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\utility
;	COMDAT ??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool,void,0>, COMDAT
; _this$ = ecx

; 172  : 		{	// construct from moved values

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 170  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z

; 171  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@_N@std@@YA$$QA_NAA_N@Z	; std::forward<bool>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx+12], dl

; 173  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool,void,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z
_TEXT	SEGMENT
tv81 = -260						; size = 4
tv138 = -256						; size = 4
$T2 = -248						; size = 4
$T3 = -236						; size = 4
__Newnode$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
_<_Val_0>$ = 24						; size = 4
_<_Val_1>$ = 28						; size = 4
_<_Val_2>$ = 32						; size = 4
??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::emplace_hint<std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >, COMDAT
; _this$ = ecx

; 1083 : 		{	// insert value_type(_Val...) at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1084 : 		_Nodeptr _Newnode = this->_Buynode(_STD forward<_Valty>(_Val)...);

	mov	eax, DWORD PTR _<_Val_2>$[ebp]
	push	eax
	call	??$forward@V?$tuple@$$V@std@@@std@@YA$$QAV?$tuple@$$V@0@AAV10@@Z ; std::forward<std::tuple<> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Val_1>$[ebp]
	push	ecx
	call	??$forward@V?$tuple@ABQAE@std@@@std@@YA$$QAV?$tuple@ABQAE@0@AAV10@@Z ; std::forward<std::tuple<unsigned char * const &> >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _<_Val_0>$[ebp]
	push	edx
	call	??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z ; std::forward<std::piecewise_construct_t const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Buynode<std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >
	mov	DWORD PTR __Newnode$[ebp], eax

; 1085 : 		return (_Insert_hint(_Where,

	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newnode$[ebp]
	push	ecx
	call	?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myval
	add	esp, 4
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv138[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_hint@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Insert_hint<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > &,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
	mov	DWORD PTR tv81[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1086 : 			this->_Myval(_Newnode), _Newnode));
; 1087 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-264]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::emplace_hint<std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\utility
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > &,bool,void,0>, COMDAT
; _this$ = ecx

; 172  : 		{	// construct from moved values

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 170  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@ABV01@@Z

; 171  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@_N@std@@YA$$QA_NAA_N@Z	; std::forward<bool>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx+12], dl

; 173  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > &,bool,void,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\utility
;	COMDAT ??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool,void,0>, COMDAT
; _this$ = ecx

; 172  : 		{	// construct from moved values

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 170  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z

; 171  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@_N@std@@YA$$QA_NAA_N@Z	; std::forward<bool>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx+12], dl

; 173  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool,void,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z
_TEXT	SEGMENT
tv81 = -260						; size = 4
tv138 = -256						; size = 4
$T2 = -248						; size = 4
$T3 = -236						; size = 4
__Newnode$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
_<_Val_0>$ = 24						; size = 4
_<_Val_1>$ = 28						; size = 4
_<_Val_2>$ = 32						; size = 4
??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::emplace_hint<std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >, COMDAT
; _this$ = ecx

; 1083 : 		{	// insert value_type(_Val...) at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1084 : 		_Nodeptr _Newnode = this->_Buynode(_STD forward<_Valty>(_Val)...);

	mov	eax, DWORD PTR _<_Val_2>$[ebp]
	push	eax
	call	??$forward@V?$tuple@$$V@std@@@std@@YA$$QAV?$tuple@$$V@0@AAV10@@Z ; std::forward<std::tuple<> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Val_1>$[ebp]
	push	ecx
	call	??$forward@V?$tuple@ABQAE@std@@@std@@YA$$QAV?$tuple@ABQAE@0@AAV10@@Z ; std::forward<std::tuple<unsigned char * const &> >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _<_Val_0>$[ebp]
	push	edx
	call	??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z ; std::forward<std::piecewise_construct_t const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Buynode<std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >
	mov	DWORD PTR __Newnode$[ebp], eax

; 1085 : 		return (_Insert_hint(_Where,

	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newnode$[ebp]
	push	ecx
	call	?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAU?$pair@QAEI@2@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myval
	add	esp, 4
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv138[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_hint@AAU?$pair@QAEI@std@@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@AAU?$pair@QAEI@1@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Insert_hint<std::pair<unsigned char * const,unsigned int> &,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
	mov	DWORD PTR tv81[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1086 : 			this->_Myval(_Newnode), _Newnode));
; 1087 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-264]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::emplace_hint<std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\windows\fastgh3\plugins\code\core\patchmanager.cpp
;	COMDAT ??0?$tuple@ABQAE@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$tuple@ABQAE@std@@QAE@$$QAV01@@Z PROC		; std::tuple<unsigned char * const &>::tuple<unsigned char * const &>, COMDAT
; _this$ = ecx

; 114  : }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$tuple@$$V@std@@QAE@ABV01@@Z	; std::tuple<>::tuple<>
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$tuple@ABQAE@std@@QAE@$$QAV01@@Z ENDP		; std::tuple<unsigned char * const &>::tuple<unsigned char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$forward_as_tuple@ABQAE@std@@YA?AV?$tuple@ABQAE@0@ABQAE@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_<_Args_0>$ = 12					; size = 4
??$forward_as_tuple@ABQAE@std@@YA?AV?$tuple@ABQAE@0@ABQAE@Z PROC ; std::forward_as_tuple<unsigned char * const &>, COMDAT

; 986  : 	{	// forward arguments in a tuple

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$forward_as_tuple@ABQAE@std@@YA?AV?$tuple@ABQAE@0@ABQAE@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 987  : 	return (tuple<_Types&&...>(_STD forward<_Types>(_Args)...));

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABQAE@std@@YAABQAEABQAE@Z	; std::forward<unsigned char * const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0ABQAE$0A@@?$tuple@ABQAE@std@@QAE@ABQAE@Z ; std::tuple<unsigned char * const &>::tuple<unsigned char * const &><unsigned char * const &,0>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 988  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$forward_as_tuple@ABQAE@std@@YA?AV?$tuple@ABQAE@0@ABQAE@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$forward_as_tuple@ABQAE@std@@YA?AV?$tuple@ABQAE@0@ABQAE@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$forward_as_tuple@ABQAE@std@@YA?AV?$tuple@ABQAE@0@ABQAE@Z ENDP ; std::forward_as_tuple<unsigned char * const &>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PAEABQAE@?$allocator@PAE@std@@QAEXPAPAEABQAE@Z
_TEXT	SEGMENT
tv73 = -220						; size = 4
$T1 = -212						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAEABQAE@?$allocator@PAE@std@@QAEXPAPAEABQAE@Z PROC ; std::allocator<unsigned char *>::construct<unsigned char *,unsigned char * const &>, COMDAT
; _this$ = ecx

; 736  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 737  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@ABQAE@std@@YAABQAEABQAE@Z	; std::forward<unsigned char * const &>
	add	esp, 4
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN1@construct:

; 738  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PAEABQAE@?$allocator@PAE@std@@QAEXPAPAEABQAE@Z ENDP ; std::allocator<unsigned char *>::construct<unsigned char *,unsigned char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PAEAAPAE@?$allocator@PAE@std@@QAEXPAPAEAAPAE@Z
_TEXT	SEGMENT
tv73 = -220						; size = 4
$T1 = -212						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAEAAPAE@?$allocator@PAE@std@@QAEXPAPAEAAPAE@Z PROC ; std::allocator<unsigned char *>::construct<unsigned char *,unsigned char * &>, COMDAT
; _this$ = ecx

; 736  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 737  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPAE@std@@YAAAPAEAAPAE@Z	; std::forward<unsigned char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN1@construct:

; 738  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PAEAAPAE@?$allocator@PAE@std@@QAEXPAPAEAAPAE@Z ENDP ; std::allocator<unsigned char *>::construct<unsigned char *,unsigned char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAEPAPAE@std@@YAPAPAEPAPAE00@Z
_TEXT	SEGMENT
__Count$ = -44						; size = 4
__Dest_ch$ = -32					; size = 4
__Last_ch$ = -20					; size = 4
__First_ch$ = -8					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAEPAPAE@std@@YAPAPAEPAPAE00@Z PROC	; std::_Copy_memmove<unsigned char * *,unsigned char * *>, COMDAT

; 2301 : 	{	// implement copy-like function as memmove

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 2302 : 	const char * const _First_ch = reinterpret_cast<const char *>(_First);

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __First_ch$[ebp], eax

; 2303 : 	const char * const _Last_ch = reinterpret_cast<const char *>(_Last);

	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR __Last_ch$[ebp], eax

; 2304 : 	char * const _Dest_ch = reinterpret_cast<char *>(_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Dest_ch$[ebp], eax

; 2305 : 	const size_t _Count = _Last_ch - _First_ch;

	mov	eax, DWORD PTR __Last_ch$[ebp]
	sub	eax, DWORD PTR __First_ch$[ebp]
	mov	DWORD PTR __Count$[ebp], eax

; 2306 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First_ch$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest_ch$[ebp]
	push	edx
	call	_memmove
	add	esp, 12					; 0000000cH

; 2307 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	mov	eax, DWORD PTR __Dest_ch$[ebp]
	add	eax, DWORD PTR __Count$[ebp]

; 2308 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Copy_memmove@PAPAEPAPAE@std@@YAPAPAEPAPAE00@Z ENDP	; std::_Copy_memmove<unsigned char * *,unsigned char * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\utility
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > &,bool,void,0>, COMDAT
; _this$ = ecx

; 172  : 		{	// construct from moved values

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 170  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z

; 171  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@_N@std@@YA$$QA_NAA_N@Z	; std::forward<bool>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx+12], dl

; 173  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > &,bool,void,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\utility
;	COMDAT ??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool,void,0>, COMDAT
; _this$ = ecx

; 172  : 		{	// construct from moved values

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 170  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z

; 171  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@_N@std@@YA$$QA_NAA_N@Z	; std::forward<bool>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx+12], dl

; 173  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool,void,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z
_TEXT	SEGMENT
tv81 = -260						; size = 4
tv138 = -256						; size = 4
$T2 = -248						; size = 4
$T3 = -236						; size = 4
__Newnode$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
_<_Val_0>$ = 24						; size = 4
_<_Val_1>$ = 28						; size = 4
_<_Val_2>$ = 32						; size = 4
??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::emplace_hint<std::piecewise_construct_t const &,std::tuple<unsigned int const &>,std::tuple<> >, COMDAT
; _this$ = ecx

; 1083 : 		{	// insert value_type(_Val...) at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1084 : 		_Nodeptr _Newnode = this->_Buynode(_STD forward<_Valty>(_Val)...);

	mov	eax, DWORD PTR _<_Val_2>$[ebp]
	push	eax
	call	??$forward@V?$tuple@$$V@std@@@std@@YA$$QAV?$tuple@$$V@0@AAV10@@Z ; std::forward<std::tuple<> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Val_1>$[ebp]
	push	ecx
	call	??$forward@V?$tuple@ABI@std@@@std@@YA$$QAV?$tuple@ABI@0@AAV10@@Z ; std::forward<std::tuple<unsigned int const &> >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _<_Val_0>$[ebp]
	push	edx
	call	??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z ; std::forward<std::piecewise_construct_t const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Buynode<std::piecewise_construct_t const &,std::tuple<unsigned int const &>,std::tuple<> >
	mov	DWORD PTR __Newnode$[ebp], eax

; 1085 : 		return (_Insert_hint(_Where,

	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newnode$[ebp]
	push	ecx
	call	?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myval
	add	esp, 4
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv138[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_hint@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Insert_hint<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > &,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
	mov	DWORD PTR tv81[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1086 : 			this->_Myval(_Newnode), _Newnode));
; 1087 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-264]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::emplace_hint<std::piecewise_construct_t const &,std::tuple<unsigned int const &>,std::tuple<> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$forward_as_tuple@$$V@std@@YA?AV?$tuple@$$V@0@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
??$forward_as_tuple@$$V@std@@YA?AV?$tuple@$$V@0@XZ PROC	; std::forward_as_tuple<>, COMDAT

; 986  : 	{	// forward arguments in a tuple

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 987  : 	return (tuple<_Types&&...>(_STD forward<_Types>(_Args)...));

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$tuple@$$V@std@@QAE@XZ		; std::tuple<>::tuple<>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 988  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward_as_tuple@$$V@std@@YA?AV?$tuple@$$V@0@XZ ENDP	; std::forward_as_tuple<>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\windows\fastgh3\plugins\code\core\patchmanager.cpp
;	COMDAT ??0?$tuple@ABI@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$tuple@ABI@std@@QAE@$$QAV01@@Z PROC			; std::tuple<unsigned int const &>::tuple<unsigned int const &>, COMDAT
; _this$ = ecx

; 114  : }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$tuple@$$V@std@@QAE@ABV01@@Z	; std::tuple<>::tuple<>
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$tuple@ABI@std@@QAE@$$QAV01@@Z ENDP			; std::tuple<unsigned int const &>::tuple<unsigned int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$forward_as_tuple@ABI@std@@YA?AV?$tuple@ABI@0@ABI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_<_Args_0>$ = 12					; size = 4
??$forward_as_tuple@ABI@std@@YA?AV?$tuple@ABI@0@ABI@Z PROC ; std::forward_as_tuple<unsigned int const &>, COMDAT

; 986  : 	{	// forward arguments in a tuple

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$forward_as_tuple@ABI@std@@YA?AV?$tuple@ABI@0@ABI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 987  : 	return (tuple<_Types&&...>(_STD forward<_Types>(_Args)...));

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABI@std@@YAABIABI@Z		; std::forward<unsigned int const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0ABI$0A@@?$tuple@ABI@std@@QAE@ABI@Z	; std::tuple<unsigned int const &>::tuple<unsigned int const &><unsigned int const &,0>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 988  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$forward_as_tuple@ABI@std@@YA?AV?$tuple@ABI@0@ABI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$forward_as_tuple@ABI@std@@YA?AV?$tuple@ABI@0@ABI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$forward_as_tuple@ABI@std@@YA?AV?$tuple@ABI@0@ABI@Z ENDP ; std::forward_as_tuple<unsigned int const &>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@ABI@std@@YAABIABI@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABI@std@@YAABIABI@Z PROC			; std::forward<unsigned int const &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@ABI@std@@YAABIABI@Z ENDP			; std::forward<unsigned int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AAPAE@std@@YA$$QAPAEAAPAE@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAPAE@std@@YA$$QAPAEAAPAE@Z PROC		; std::move<unsigned char * &>, COMDAT

; 1291 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1293 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAPAE@std@@YA$$QAPAEAAPAE@Z ENDP		; std::move<unsigned char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Find_unchecked@PAPAEPAE@std@@YAPAPAEPAPAE0ABQAE@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Find_unchecked@PAPAEPAE@std@@YAPAPAEPAPAE0ABQAE@Z PROC ; std::_Find_unchecked<unsigned char * *,unsigned char *>, COMDAT

; 3266 : 	{	// find first matching _Val; choose optimization

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 3267 : 	// activate optimization for pointers to (const) bytes and integral values
; 3268 : 	typedef integral_constant<bool,
; 3269 : 		(is_same<_InIt, char *>::value
; 3270 : 		|| is_same<_InIt, signed char *>::value
; 3271 : 		|| is_same<_InIt, unsigned char *>::value
; 3272 : 		|| is_same<_InIt, const char *>::value
; 3273 : 		|| is_same<_InIt, const signed char *>::value
; 3274 : 		|| is_same<_InIt, const unsigned char *>::value)
; 3275 : 		&& is_integral<_Ty>::value
; 3276 : 	> _Memchr_opt;
; 3277 : 	return (_Find_unchecked1(_First, _Last, _Val, _Memchr_opt()));

	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Find_unchecked1@PAPAEPAE@std@@YAPAPAEPAPAE0ABQAEU?$integral_constant@_N$0A@@0@@Z ; std::_Find_unchecked1<unsigned char * *,unsigned char *>
	add	esp, 16					; 00000010H

; 3278 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Find_unchecked@PAPAEPAE@std@@YAPAPAEPAPAE0ABQAE@Z ENDP ; std::_Find_unchecked<unsigned char * *,unsigned char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Debug_range2@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__File$ = 32						; size = 4
__Line$ = 36						; size = 4
___formal$ = 40						; size = 1
??$_Debug_range2@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > > >, COMDAT

; 953  : 	{	// test iterator pair for valid range, random-access iterators

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Debug_range2@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 954  : 	if (_First != _Last)

	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Debug_rang

; 955  : 		{	// check for non-null pointers, valid range
; 956  : 		_DEBUG_POINTER2(_First, _File, _Line);

	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Debug_pointer@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXAAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@PB_WI@Z ; std::_Debug_pointer<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > > >
	add	esp, 12					; 0000000cH

; 957  : 		_DEBUG_POINTER2(_Last, _File, _Line);

	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Debug_pointer@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXAAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@PB_WI@Z ; std::_Debug_pointer<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > > >
	add	esp, 12					; 0000000cH

; 958  : 		if (_Last < _First)

	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??M?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::operator<
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Debug_rang

; 959  : 			_DEBUG_ERROR2("invalid iterator range", _File, _Line);

	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_rang:

; 960  : 		}
; 961  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Debug_range2@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Debug_range2@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Debug_range2@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Debug_range2@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Debug_range2@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\utility
;	COMDAT ??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@0@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@0@Z PROC ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &,void,0>, COMDAT
; _this$ = ecx

; 172  : 		{	// construct from moved values

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 170  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 171  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z

; 173  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@0@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@0@Z ENDP ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &,void,0>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\utility
;	COMDAT ??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@0@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@0@Z PROC ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > &,void,0>, COMDAT
; _this$ = ecx

; 172  : 		{	// construct from moved values

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 170  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 171  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@ABV01@@Z

; 173  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@0@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@0@Z ENDP ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > &,void,0>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\utility
;	COMDAT ??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@0@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@0@Z PROC ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > &,void,0>, COMDAT
; _this$ = ecx

; 172  : 		{	// construct from moved values

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 170  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 171  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z

; 173  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@0@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@0@Z ENDP ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > &,void,0>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Debug_lt_pred@ABU?$less@PAE@std@@ABQAEABQAE@std@@YA_NABU?$less@PAE@0@ABQAE1PB_WI@Z
_TEXT	SEGMENT
tv79 = -194						; size = 1
tv80 = -193						; size = 1
__Pred$ = 8						; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
__File$ = 20						; size = 4
__Line$ = 24						; size = 4
??$_Debug_lt_pred@ABU?$less@PAE@std@@ABQAEABQAE@std@@YA_NABU?$less@PAE@0@ABQAE1PB_WI@Z PROC ; std::_Debug_lt_pred<std::less<unsigned char *> const &,unsigned char * const &,unsigned char * const &>, COMDAT

; 895  : 	{	// test if _Pred(_Left, _Right) and _Pred is strict weak ordering

	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 896  : 	return (!_Pred(_Left, _Right)

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Pred$[ebp]
	call	??R?$less@PAE@std@@QBE_NABQAE0@Z	; std::less<unsigned char *>::operator()
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN5@Debug_lt_p
	mov	BYTE PTR tv80[ebp], 0
	jmp	SHORT $LN6@Debug_lt_p
$LN5@Debug_lt_p:
	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Pred$[ebp]
	call	??R?$less@PAE@std@@QBE_NABQAE0@Z	; std::less<unsigned char *>::operator()
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@Debug_lt_p
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CG@LEJCKCBB@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
	mov	BYTE PTR tv79[ebp], 1
	jmp	SHORT $LN4@Debug_lt_p
$LN3@Debug_lt_p:
	mov	BYTE PTR tv79[ebp], 1
$LN4@Debug_lt_p:
	mov	dl, BYTE PTR tv79[ebp]
	mov	BYTE PTR tv80[ebp], dl
$LN6@Debug_lt_p:
	mov	al, BYTE PTR tv80[ebp]

; 897  : 		? false
; 898  : 		: _Pred(_Right, _Left)
; 899  : 			? (_DEBUG_ERROR2("invalid comparator", _File, _Line), true)
; 900  : 			: true);
; 901  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_lt_pred@ABU?$less@PAE@std@@ABQAEABQAE@std@@YA_NABU?$less@PAE@0@ABQAE1PB_WI@Z ENDP ; std::_Debug_lt_pred<std::less<unsigned char *> const &,unsigned char * const &,unsigned char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Debug_lt_pred@ABU?$less@I@std@@ABIABI@std@@YA_NABU?$less@I@0@ABI1PB_WI@Z
_TEXT	SEGMENT
tv79 = -194						; size = 1
tv80 = -193						; size = 1
__Pred$ = 8						; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
__File$ = 20						; size = 4
__Line$ = 24						; size = 4
??$_Debug_lt_pred@ABU?$less@I@std@@ABIABI@std@@YA_NABU?$less@I@0@ABI1PB_WI@Z PROC ; std::_Debug_lt_pred<std::less<unsigned int> const &,unsigned int const &,unsigned int const &>, COMDAT

; 895  : 	{	// test if _Pred(_Left, _Right) and _Pred is strict weak ordering

	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 896  : 	return (!_Pred(_Left, _Right)

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Pred$[ebp]
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN5@Debug_lt_p
	mov	BYTE PTR tv80[ebp], 0
	jmp	SHORT $LN6@Debug_lt_p
$LN5@Debug_lt_p:
	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Pred$[ebp]
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@Debug_lt_p
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CG@LEJCKCBB@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
	mov	BYTE PTR tv79[ebp], 1
	jmp	SHORT $LN4@Debug_lt_p
$LN3@Debug_lt_p:
	mov	BYTE PTR tv79[ebp], 1
$LN4@Debug_lt_p:
	mov	dl, BYTE PTR tv79[ebp]
	mov	BYTE PTR tv80[ebp], dl
$LN6@Debug_lt_p:
	mov	al, BYTE PTR tv80[ebp]

; 897  : 		? false
; 898  : 		: _Pred(_Right, _Left)
; 899  : 			? (_DEBUG_ERROR2("invalid comparator", _File, _Line), true)
; 900  : 			: true);
; 901  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_lt_pred@ABU?$less@I@std@@ABIABI@std@@YA_NABU?$less@I@0@ABI1PB_WI@Z ENDP ; std::_Debug_lt_pred<std::less<unsigned int> const &,unsigned int const &,unsigned int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAPAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAPAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::construct<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &>, COMDAT

; 856  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 857  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAPAU21@@Z ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::construct<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &>

; 858  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAPAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::construct<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@0@AAPAU10@@Z PROC ; std::forward<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@0@AAPAU10@@Z ENDP ; std::forward<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAPAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAPAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::construct<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> * &>, COMDAT

; 856  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 857  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAPAU21@@Z ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >::construct<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> * &>

; 858  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAPAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::construct<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@0@AAPAU10@@Z PROC ; std::forward<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> * &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@0@AAPAU10@@Z ENDP ; std::forward<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAPAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAPAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::construct<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> * &>, COMDAT

; 856  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 857  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAPAU21@@Z ; std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >::construct<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> * &>

; 858  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAPAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::construct<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@0@AAPAU10@@Z PROC ; std::forward<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> * &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@0@AAPAU10@@Z ENDP ; std::forward<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@1@PAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@1@PAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::destroy<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >, COMDAT

; 863  : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 864  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@@Z ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::destroy<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >

; 865  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$destroy@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@1@PAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::destroy<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1><>, COMDAT
; _this$ = ecx

; 280  : 		{	// construct from forwarded values

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 279  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >

; 281  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >, COMDAT
; _this$ = ecx

; 709  : 		{	// construct from a related allocator (do nothing)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 710  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@0@AAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > > &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@0@AAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>, COMDAT

; 863  : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 864  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::destroy<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>

; 865  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$destroy@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@U?$pair@QAEI@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@1@PAU?$pair@QAEI@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U?$pair@QAEI@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@1@PAU?$pair@QAEI@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::destroy<std::pair<unsigned char * const,unsigned int> >, COMDAT

; 863  : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 864  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@U?$pair@QAEI@std@@@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEXPAU?$pair@QAEI@1@@Z ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >::destroy<std::pair<unsigned char * const,unsigned int> >

; 865  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$destroy@U?$pair@QAEI@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@1@PAU?$pair@QAEI@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::destroy<std::pair<unsigned char * const,unsigned int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1><>, COMDAT
; _this$ = ecx

; 280  : 		{	// construct from forwarded values

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 279  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >

; 281  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@ABU?$less@PAE@std@@@std@@YAABU?$less@PAE@0@ABU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABU?$less@PAE@std@@@std@@YAABU?$less@PAE@0@ABU10@@Z PROC ; std::forward<std::less<unsigned char *> const &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@ABU?$less@PAE@std@@@std@@YAABU?$less@PAE@0@ABU10@@Z ENDP ; std::forward<std::less<unsigned char *> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >, COMDAT
; _this$ = ecx

; 709  : 		{	// construct from a related allocator (do nothing)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 710  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@0@AAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > > &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@0@AAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::destroy<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>, COMDAT

; 863  : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 864  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >::destroy<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>

; 865  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$destroy@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::destroy<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAEPAPAEV?$allocator@PAE@std@@@std@@YAPAPAEPAPAE00AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAEPAPAEV?$allocator@PAE@std@@@std@@YAPAPAEPAPAE00AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@@Z PROC ; std::_Uninitialized_move<unsigned char * *,unsigned char * *,std::allocator<unsigned char *> >, COMDAT

; 313  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 314  : 		// note: only called internally from elsewhere in the STL, debug checks
; 315  : 		// and deprecation warnings omitted
; 316  : 	return (_Rechecked(_Dest,

	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAPAE@std@@YAPAPAEPAPAE@Z	; std::_Unchecked<unsigned char * *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Unchecked@PAPAE@std@@YAPAPAEPAPAE@Z	; std::_Unchecked<unsigned char * *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked@PAPAE@std@@YAPAPAEPAPAE@Z	; std::_Unchecked<unsigned char * *>
	add	esp, 4
	push	eax
	call	??$_Uninitialized_move_al_unchecked@PAPAEPAPAEV?$allocator@PAE@std@@@std@@YAPAPAEPAPAE00AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@@Z ; std::_Uninitialized_move_al_unchecked<unsigned char * *,unsigned char * *,std::allocator<unsigned char *> >
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Rechecked@PAPAEPAPAE@std@@YAAAPAPAEAAPAPAEPAPAE@Z ; std::_Rechecked<unsigned char * *,unsigned char * *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]

; 317  : 		_Uninitialized_move_al_unchecked(_Unchecked(_First), _Unchecked(_Last),
; 318  : 			_Unchecked(_Dest), _Al)));
; 319  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_move@PAPAEPAPAEV?$allocator@PAE@std@@@std@@YAPAPAEPAPAE00AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@@Z ENDP ; std::_Uninitialized_move<unsigned char * *,unsigned char * *,std::allocator<unsigned char *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@1@PAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@1@PAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::destroy<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >, COMDAT

; 863  : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 864  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@@Z ; std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >::destroy<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >

; 865  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$destroy@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@1@PAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::destroy<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AAD@std@@YA$$QADAAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAD@std@@YA$$QADAAD@Z PROC			; std::move<char &>, COMDAT

; 1291 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1293 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAD@std@@YA$$QADAAD@Z ENDP			; std::move<char &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1><>, COMDAT
; _this$ = ecx

; 280  : 		{	// construct from forwarded values

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 279  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >

; 281  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z PROC ; std::forward<std::_Zero_then_variadic_args_t>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z ENDP ; std::forward<std::_Zero_then_variadic_args_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@ABU?$less@I@std@@@std@@YAABU?$less@I@0@ABU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABU?$less@I@std@@@std@@YAABU?$less@I@0@ABU10@@Z PROC ; std::forward<std::less<unsigned int> const &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@ABU?$less@I@std@@@std@@YAABU?$less@I@0@ABU10@@Z ENDP ; std::forward<std::less<unsigned int> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >, COMDAT
; _this$ = ecx

; 709  : 		{	// construct from a related allocator (do nothing)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 710  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@0@AAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > > &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@0@AAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>, COMDAT

; 863  : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 864  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z ; std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >::destroy<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>

; 865  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$destroy@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0E@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@E@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0E@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@E@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned char>, COMDAT
; _this$ = ecx

; 709  : 		{	// construct from a related allocator (do nothing)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 710  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0E@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@E@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@AAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<unsigned char> > &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@AAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<unsigned char> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT

; 856  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 857  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>

; 858  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ENDP ; std::forward<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT

; 863  : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 864  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>

; 865  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0PAE@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAE@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0PAE@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAE@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned char *>, COMDAT
; _this$ = ecx

; 709  : 		{	// construct from a related allocator (do nothing)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 710  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0PAE@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAE@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@AAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<unsigned char *> > &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@AAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<unsigned char *> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$_Destroy_range1@V?$allocator@E@std@@PAE@std@@YAXPAE0AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range1@V?$allocator@E@std@@PAE@std@@YAXPAE0AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Destroy_range1<std::allocator<unsigned char>,unsigned char *>, COMDAT

; 1107 : 	{	// destroy [_First, _Last), trivially destructible and default destroy

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1108 : 		// nothing to do
; 1109 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range1@V?$allocator@E@std@@PAE@std@@YAXPAE0AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Destroy_range1<std::allocator<unsigned char>,unsigned char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\utility
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@0@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@0@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > ><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &,void,0>, COMDAT
; _this$ = ecx

; 172  : 		{	// construct from moved values

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 170  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 171  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z

; 173  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@0@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@0@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > ><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &,void,0>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ PROC ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >::~pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ ENDP ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >::~pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\utility
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@0@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@0@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > >::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > ><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > &,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > &,void,0>, COMDAT
; _this$ = ecx

; 172  : 		{	// construct from moved values

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 170  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 171  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@ABV01@@Z

; 173  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@0@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@0@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > >::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > ><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > &,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > &,void,0>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ PROC ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > >::~pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ ENDP ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > >::~pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$_Destroy_range1@V?$allocator@PAE@std@@PAPAE@std@@YAXPAPAE0AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range1@V?$allocator@PAE@std@@PAPAE@std@@YAXPAPAE0AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Destroy_range1<std::allocator<unsigned char *>,unsigned char * *>, COMDAT

; 1107 : 	{	// destroy [_First, _Last), trivially destructible and default destroy

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1108 : 		// nothing to do
; 1109 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range1@V?$allocator@PAE@std@@PAPAE@std@@YAXPAPAE0AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Destroy_range1<std::allocator<unsigned char *>,unsigned char * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\utility
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@0@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@0@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > >::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > ><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > &,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > &,void,0>, COMDAT
; _this$ = ecx

; 172  : 		{	// construct from moved values

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 170  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 171  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z

; 173  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@0@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@0@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > >::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > ><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > &,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > &,void,0>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ PROC ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > >::~pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ ENDP ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > >::~pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$_Pocca@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@ABU10@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 1
??$_Pocca@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@ABU10@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Pocca<std::_Wrap_alloc<std::allocator<unsigned char> > >, COMDAT

; 1038 : 	{	// (don't) propagate on container copy assignment

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1039 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Pocca@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@ABU10@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Pocca<std::_Wrap_alloc<std::allocator<unsigned char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V?$allocator@E@std@@@std@@YA$$QAV?$allocator@E@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$allocator@E@std@@@std@@YA$$QAV?$allocator@E@0@AAV10@@Z PROC ; std::forward<std::allocator<unsigned char> >, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@V?$allocator@E@std@@@std@@YA$$QAV?$allocator@E@0@AAV10@@Z ENDP ; std::forward<std::allocator<unsigned char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$_Pocma@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@0U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
___formal$ = 16						; size = 1
??$_Pocma@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@0U?$integral_constant@_N$00@0@@Z PROC ; std::_Pocma<std::_Wrap_alloc<std::allocator<unsigned char *> > >, COMDAT

; 1051 : 	{	// propagate on container move assignment

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Pocma@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@0U?$integral_constant@_N$00@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1052 : 	_Left = _STD move(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$move@AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@AAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<unsigned char *> > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	call	??4?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QAEAAU01@$$QAU01@@Z ; std::_Wrap_alloc<std::allocator<unsigned char *> >::operator=

; 1053 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Pocma@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@0U?$integral_constant@_N$00@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Pocma@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@0U?$integral_constant@_N$00@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Pocma@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@0U?$integral_constant@_N$00@0@@Z ENDP ; std::_Pocma<std::_Wrap_alloc<std::allocator<unsigned char *> > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_default_fill_n1@PAEIV?$allocator@E@std@@@std@@YAXPAEIAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Uninitialized_default_fill_n1@PAEIV?$allocator@E@std@@@std@@YAXPAEIAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Uninitialized_default_fill_n1<unsigned char *,unsigned int,std::allocator<unsigned char> >, COMDAT

; 470  : 	{	// value-initialize _Count objects to raw _First, using default _Alloc construct, all-bits-zero type

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 471  : 	_CSTD memset(_First, 0, _Count * sizeof(_Iter_value_t<_FwdIt>));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 472  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_default_fill_n1@PAEIV?$allocator@E@std@@@std@@YAXPAEIAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Uninitialized_default_fill_n1<unsigned char *,unsigned int,std::allocator<unsigned char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@PAEV?$allocator@E@2@@std@@YAPAEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@0@0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z
_TEXT	SEGMENT
tv67 = -260						; size = 4
tv148 = -256						; size = 4
tv147 = -252						; size = 4
tv144 = -248						; size = 4
tv143 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
$T4 = -212						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__Dest$ = 32						; size = 4
__Al$ = 36						; size = 4
??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@PAEV?$allocator@E@2@@std@@YAPAEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@0@0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z PROC ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >,unsigned char *,std::allocator<unsigned char> >, COMDAT

; 259  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@PAEV?$allocator@E@2@@std@@YAPAEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@0@0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 260  : 		// note: only called internally from elsewhere in the STL, debug checks
; 261  : 		// and deprecation warnings omitted
; 262  : 	return (_Rechecked(_Dest,

	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAE@std@@YAPAEPAE@Z	; std::_Unchecked<unsigned char *>
	add	esp, 4
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv143[ebp], eax
	call	??$_Unchecked@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@YAPBEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<std::_Simple_types<unsigned char> > >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv144[ebp], eax
	mov	eax, DWORD PTR tv144[ebp]
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv147[ebp], eax
	call	??$_Unchecked@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@YAPBEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<std::_Simple_types<unsigned char> > >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv148[ebp], eax
	mov	eax, DWORD PTR tv148[ebp]
	push	eax
	call	??$_Uninitialized_copy_al_unchecked@PBEPAEV?$allocator@E@std@@@std@@YAPAEPBE0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z ; std::_Uninitialized_copy_al_unchecked<unsigned char const *,unsigned char *,std::allocator<unsigned char> >
	add	esp, 16					; 00000010H
	mov	DWORD PTR tv67[ebp], eax
	mov	ecx, DWORD PTR tv67[ebp]
	push	ecx
	lea	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	??$_Rechecked@PAEPAE@std@@YAAAPAEAAPAEPAE@Z ; std::_Rechecked<unsigned char *,unsigned char *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR $T4[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T4[ebp]

; 263  : 		_Uninitialized_copy_al_unchecked(_Unchecked(_First), _Unchecked(_Last),
; 264  : 			_Unchecked(_Dest), _Al)));
; 265  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@PAEV?$allocator@E@2@@std@@YAPAEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@0@0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@PAEV?$allocator@E@2@@std@@YAPAEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@0@0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@PAEV?$allocator@E@2@@std@@YAPAEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@0@0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-264]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@PAEV?$allocator@E@2@@std@@YAPAEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@0@0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@PAEV?$allocator@E@2@@std@@YAPAEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@0@0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z ENDP ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >,unsigned char *,std::allocator<unsigned char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@E@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@E@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0U?$_Wrap_alloc@V?$allocator@E@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@E@std@@@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1><std::_Wrap_alloc<std::allocator<unsigned char> > >, COMDAT
; _this$ = ecx

; 289  : 		{	// construct from forwarded values

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 287  : 		: _Ty1(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@E@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<unsigned char> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAE@$$QAU01@@Z ; std::_Wrap_alloc<std::allocator<unsigned char> >::_Wrap_alloc<std::allocator<unsigned char> >

; 288  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@E@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<unsigned char> >::_Vector_val<std::_Simple_types<unsigned char> >

; 290  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0U?$_Wrap_alloc@V?$allocator@E@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@E@std@@@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1><std::_Wrap_alloc<std::allocator<unsigned char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@E@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@E@std@@@0@AAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<unsigned char> > >, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@E@std@@@0@AAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<unsigned char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PAEPAEV?$allocator@E@std@@@std@@YAPAEPAE00AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@PAEPAEV?$allocator@E@std@@@std@@YAPAEPAE00AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z PROC ; std::_Uninitialized_copy<unsigned char *,unsigned char *,std::allocator<unsigned char> >, COMDAT

; 259  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 260  : 		// note: only called internally from elsewhere in the STL, debug checks
; 261  : 		// and deprecation warnings omitted
; 262  : 	return (_Rechecked(_Dest,

	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAE@std@@YAPAEPAE@Z	; std::_Unchecked<unsigned char *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Unchecked@PAE@std@@YAPAEPAE@Z	; std::_Unchecked<unsigned char *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked@PAE@std@@YAPAEPAE@Z	; std::_Unchecked<unsigned char *>
	add	esp, 4
	push	eax
	call	??$_Uninitialized_copy_al_unchecked@PAEPAEV?$allocator@E@std@@@std@@YAPAEPAE00AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z ; std::_Uninitialized_copy_al_unchecked<unsigned char *,unsigned char *,std::allocator<unsigned char> >
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Rechecked@PAEPAE@std@@YAAAPAEAAPAEPAE@Z ; std::_Rechecked<unsigned char *,unsigned char *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]

; 263  : 		_Uninitialized_copy_al_unchecked(_Unchecked(_First), _Unchecked(_Last),
; 264  : 			_Unchecked(_Dest), _Al)));
; 265  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_copy@PAEPAEV?$allocator@E@std@@@std@@YAPAEPAE00AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z ENDP ; std::_Uninitialized_copy<unsigned char *,unsigned char *,std::allocator<unsigned char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Copy_unchecked1@PAEPAE@std@@YAPAEPAE00U_Trivially_copyable_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Copy_unchecked1@PAEPAE@std@@YAPAEPAE00U_Trivially_copyable_ptr_iterator_tag@0@@Z PROC ; std::_Copy_unchecked1<unsigned char *,unsigned char *>, COMDAT

; 2324 : 	{	// copy [_First, _Last) to [_Dest, ...), pointers to trivially copyable

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 2325 : 	return (_Copy_memmove(_First, _Last, _Dest));

	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Copy_memmove@PAEPAE@std@@YAPAEPAE00@Z ; std::_Copy_memmove<unsigned char *,unsigned char *>
	add	esp, 12					; 0000000cH

; 2326 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Copy_unchecked1@PAEPAE@std@@YAPAEPAE00U_Trivially_copyable_ptr_iterator_tag@0@@Z ENDP ; std::_Copy_unchecked1<unsigned char *,unsigned char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Ptr_copy_cat@EE@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAE0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Ptr_copy_cat@EE@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAE0@Z PROC ; std::_Ptr_copy_cat<unsigned char,unsigned char>, COMDAT

; 792  : 	{	// return pointer copy optimization category for pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 793  : 	return {};

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 794  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_copy_cat@EE@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAE0@Z ENDP ; std::_Ptr_copy_cat<unsigned char,unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?8EE@std@@YA_NABV?$allocator@E@0@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?8EE@std@@YA_NABV?$allocator@E@0@0@Z PROC		; std::operator==<unsigned char,unsigned char>, COMDAT

; 795  : 	{	// test for allocator equality

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 796  : 	return (true);

	mov	al, 1

; 797  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$?8EE@std@@YA_NABV?$allocator@E@0@0@Z ENDP		; std::operator==<unsigned char,unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?8V?$allocator@E@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@E@std@@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?8V?$allocator@E@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@E@std@@@0@0@Z PROC ; std::operator==<std::allocator<unsigned char>,std::allocator<unsigned char> >, COMDAT

; 1016 : 	{	// test for allocator equality

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1017 : 	return (static_cast<const _Ty&>(_Left)

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$?8EE@std@@YA_NABV?$allocator@E@0@0@Z	; std::operator==<unsigned char,unsigned char>
	add	esp, 8

; 1018 : 		== static_cast<const _Other&>(_Right));
; 1019 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?8V?$allocator@E@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@E@std@@@0@0@Z ENDP ; std::operator==<std::allocator<unsigned char>,std::allocator<unsigned char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\map
;	COMDAT ??$_Try_emplace@ABQAE$$V@?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABQAE@Z
_TEXT	SEGMENT
tv159 = -376						; size = 4
tv220 = -372						; size = 4
tv154 = -372						; size = 4
tv210 = -368						; size = 4
tv166 = -368						; size = 4
tv218 = -364						; size = 4
tv69 = -364						; size = 4
$T2 = -356						; size = 4
$T3 = -341						; size = 1
$T4 = -332						; size = 12
$T5 = -312						; size = 4
$T6 = -300						; size = 4
$T7 = -285						; size = 1
$T8 = -273						; size = 1
$T9 = -264						; size = 12
$T10 = -241						; size = 1
__Where$ = -40						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Try_emplace@ABQAE$$V@?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABQAE@Z PROC ; std::map<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Try_emplace<unsigned char * const &>, COMDAT
; _this$ = ecx

; 208  : 		{	// fail if _Keyval present, else emplace

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Try_emplace@ABQAE$$V@?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABQAE@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 364				; 0000016cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-376]
	mov	ecx, 91					; 0000005bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0

; 209  : 		iterator _Where = _Mybase::lower_bound(_Keyval);

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lower_bound@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@ABQAE@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::lower_bound
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 210  : 		if (_Where == _Mybase::end()
; 211  : 			|| _DEBUG_LT_PRED(_Mybase::_Getcomp(),

	lea	eax, DWORD PTR $T9[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::end
	mov	DWORD PTR tv69[ebp], eax
	mov	ecx, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv210[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR tv210[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN5@Try_emplac
	push	212					; 000000d4H
	push	OFFSET ??_C@_1IG@CDANFHMM@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Mynode
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Key
	push	eax
	mov	edx, DWORD PTR __Keyval$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN5@Try_emplac
	mov	DWORD PTR tv154[ebp], 0
	jmp	SHORT $LN6@Try_emplac
$LN5@Try_emplac:
	mov	DWORD PTR tv154[ebp], 1
$LN6@Try_emplac:
	mov	cl, BYTE PTR tv154[ebp]
	mov	BYTE PTR $T10[ebp], cl
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T2[ebp]
	and	edx, 1
	je	SHORT $LN10@Try_emplac
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	lea	ecx, DWORD PTR $T9[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN10@Try_emplac:
	movzx	eax, BYTE PTR $T10[ebp]
	test	eax, eax
	je	$LN2@Try_emplac

; 212  : 				_Keyval, _Mybase::_Key(_Where._Mynode())))
; 213  : 			return (_Pairib(

	mov	BYTE PTR $T8[ebp], 1
	lea	eax, DWORD PTR $T8[ebp]
	push	eax
	lea	ecx, DWORD PTR $T7[ebp]
	push	ecx
	call	??$forward_as_tuple@$$V@std@@YA?AV?$tuple@$$V@0@XZ ; std::forward_as_tuple<>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Keyval$[ebp]
	push	edx
	call	??$forward@ABQAE@std@@YAABQAEABQAE@Z	; std::forward<unsigned char * const &>
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	call	??$forward_as_tuple@ABQAE@std@@YA?AV?$tuple@ABQAE@0@ABQAE@Z ; std::forward_as_tuple<unsigned char * const &>
	add	esp, 8
	push	eax
	push	OFFSET ?piecewise_construct@std@@3Upiecewise_construct_t@1@B
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T5[ebp], esp
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv218[ebp], eax
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::emplace_hint<std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >
	mov	DWORD PTR tv166[ebp], eax
	mov	ecx, DWORD PTR tv166[ebp]
	mov	DWORD PTR tv220[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR tv220[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool,void,0>
	mov	DWORD PTR tv159[ebp], eax
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 2
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN1@Try_emplac

; 214  : 				_Mybase::emplace_hint(_Where,
; 215  : 					piecewise_construct,
; 216  : 					_STD forward_as_tuple(
; 217  : 						_STD forward<_Keyty>(_Keyval)),
; 218  : 					_STD forward_as_tuple(
; 219  : 						_STD forward<_Mappedty>(_Mapval)...)),
; 220  : 				true));
; 221  : 		else

	jmp	SHORT $LN3@Try_emplac
$LN2@Try_emplac:

; 222  : 			return (_Pairib(_Where, false));

	mov	BYTE PTR $T3[ebp], 0
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &,bool,void,0>
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 2
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN1@Try_emplac
$LN3@Try_emplac:

; 223  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN1@Try_emplac:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@Try_emplac
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 376				; 00000178H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN18@Try_emplac:
	DD	1
	DD	$LN17@Try_emplac
$LN17@Try_emplac:
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN15@Try_emplac
$LN15@Try_emplac:
	DB	95					; 0000005fH
	DB	87					; 00000057H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Try_emplace@ABQAE$$V@?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABQAE@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Try_emplace@ABQAE$$V@?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABQAE@Z$1:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN9@Try_emplac
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	lea	ecx, DWORD PTR $T9[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN9@Try_emplac:
	ret	0
__unwindfunclet$??$_Try_emplace@ABQAE$$V@?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABQAE@Z$3:
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Try_emplace@ABQAE$$V@?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABQAE@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-380]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Try_emplace@ABQAE$$V@?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABQAE@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Try_emplace@ABQAE$$V@?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABQAE@Z ENDP ; std::map<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Try_emplace<unsigned char * const &>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z
_TEXT	SEGMENT
$T2 = -224						; size = 4
__Off$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
___formal$ = 32						; size = 1
??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z PROC ; std::_Distance1<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >, COMDAT

; 1099 : 	{	// return distance between iterators; input

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 1100 : 	_Iter_diff_t<_InIt> _Off = 0;

	mov	DWORD PTR __Off$[ebp], 0

; 1101 : 	for (; _First != _Last; ++_First)

	jmp	SHORT $LN4@Distance1
$LN2@Distance1:
	lea	ecx, DWORD PTR __First$[ebp]
	call	??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator++
$LN4@Distance1:
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@Distance1

; 1102 : 		++_Off;

	mov	eax, DWORD PTR __Off$[ebp]
	add	eax, 1
	mov	DWORD PTR __Off$[ebp], eax
	jmp	SHORT $LN2@Distance1
$LN3@Distance1:

; 1103 : 
; 1104 : 	return (_Off);

	mov	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T2[ebp]

; 1105 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z ENDP ; std::_Distance1<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\map
;	COMDAT ??$_Try_emplace@ABQAE$$V@?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@ABQAE@Z
_TEXT	SEGMENT
tv159 = -376						; size = 4
tv220 = -372						; size = 4
tv154 = -372						; size = 4
tv210 = -368						; size = 4
tv166 = -368						; size = 4
tv218 = -364						; size = 4
tv69 = -364						; size = 4
$T2 = -356						; size = 4
$T3 = -341						; size = 1
$T4 = -332						; size = 12
$T5 = -312						; size = 4
$T6 = -300						; size = 4
$T7 = -285						; size = 1
$T8 = -273						; size = 1
$T9 = -264						; size = 12
$T10 = -241						; size = 1
__Where$ = -40						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Try_emplace@ABQAE$$V@?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@ABQAE@Z PROC ; std::map<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> > >::_Try_emplace<unsigned char * const &>, COMDAT
; _this$ = ecx

; 208  : 		{	// fail if _Keyval present, else emplace

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Try_emplace@ABQAE$$V@?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@ABQAE@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 364				; 0000016cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-376]
	mov	ecx, 91					; 0000005bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0

; 209  : 		iterator _Where = _Mybase::lower_bound(_Keyval);

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lower_bound@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@ABQAE@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::lower_bound
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 210  : 		if (_Where == _Mybase::end()
; 211  : 			|| _DEBUG_LT_PRED(_Mybase::_Getcomp(),

	lea	eax, DWORD PTR $T9[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::end
	mov	DWORD PTR tv69[ebp], eax
	mov	ecx, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv210[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR tv210[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN5@Try_emplac
	push	212					; 000000d4H
	push	OFFSET ??_C@_1IG@CDANFHMM@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Mynode
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Key
	push	eax
	mov	edx, DWORD PTR __Keyval$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN5@Try_emplac
	mov	DWORD PTR tv154[ebp], 0
	jmp	SHORT $LN6@Try_emplac
$LN5@Try_emplac:
	mov	DWORD PTR tv154[ebp], 1
$LN6@Try_emplac:
	mov	cl, BYTE PTR tv154[ebp]
	mov	BYTE PTR $T10[ebp], cl
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T2[ebp]
	and	edx, 1
	je	SHORT $LN10@Try_emplac
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	lea	ecx, DWORD PTR $T9[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
$LN10@Try_emplac:
	movzx	eax, BYTE PTR $T10[ebp]
	test	eax, eax
	je	$LN2@Try_emplac

; 212  : 				_Keyval, _Mybase::_Key(_Where._Mynode())))
; 213  : 			return (_Pairib(

	mov	BYTE PTR $T8[ebp], 1
	lea	eax, DWORD PTR $T8[ebp]
	push	eax
	lea	ecx, DWORD PTR $T7[ebp]
	push	ecx
	call	??$forward_as_tuple@$$V@std@@YA?AV?$tuple@$$V@0@XZ ; std::forward_as_tuple<>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Keyval$[ebp]
	push	edx
	call	??$forward@ABQAE@std@@YAABQAEABQAE@Z	; std::forward<unsigned char * const &>
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	call	??$forward_as_tuple@ABQAE@std@@YA?AV?$tuple@ABQAE@0@ABQAE@Z ; std::forward_as_tuple<unsigned char * const &>
	add	esp, 8
	push	eax
	push	OFFSET ?piecewise_construct@std@@3Upiecewise_construct_t@1@B
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T5[ebp], esp
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv218[ebp], eax
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABQAE@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAE@1@$$QAV?$tuple@$$V@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::emplace_hint<std::piecewise_construct_t const &,std::tuple<unsigned char * const &>,std::tuple<> >
	mov	DWORD PTR tv166[ebp], eax
	mov	ecx, DWORD PTR tv166[ebp]
	mov	DWORD PTR tv220[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR tv220[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool,void,0>
	mov	DWORD PTR tv159[ebp], eax
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 2
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN1@Try_emplac

; 214  : 				_Mybase::emplace_hint(_Where,
; 215  : 					piecewise_construct,
; 216  : 					_STD forward_as_tuple(
; 217  : 						_STD forward<_Keyty>(_Keyval)),
; 218  : 					_STD forward_as_tuple(
; 219  : 						_STD forward<_Mappedty>(_Mapval)...)),
; 220  : 				true));
; 221  : 		else

	jmp	SHORT $LN3@Try_emplac
$LN2@Try_emplac:

; 222  : 			return (_Pairib(_Where, false));

	mov	BYTE PTR $T3[ebp], 0
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > &,bool,void,0>
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 2
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN1@Try_emplac
$LN3@Try_emplac:

; 223  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
$LN1@Try_emplac:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@Try_emplac
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 376				; 00000178H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN18@Try_emplac:
	DD	1
	DD	$LN17@Try_emplac
$LN17@Try_emplac:
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN15@Try_emplac
$LN15@Try_emplac:
	DB	95					; 0000005fH
	DB	87					; 00000057H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Try_emplace@ABQAE$$V@?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@ABQAE@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Try_emplace@ABQAE$$V@?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@ABQAE@Z$1:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN9@Try_emplac
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	lea	ecx, DWORD PTR $T9[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
$LN9@Try_emplac:
	ret	0
__unwindfunclet$??$_Try_emplace@ABQAE$$V@?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@ABQAE@Z$3:
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Try_emplace@ABQAE$$V@?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@ABQAE@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-380]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Try_emplace@ABQAE$$V@?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@ABQAE@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Try_emplace@ABQAE$$V@?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@ABQAE@Z ENDP ; std::map<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> > >::_Try_emplace<unsigned char * const &>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z
_TEXT	SEGMENT
$T2 = -224						; size = 4
__Off$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
___formal$ = 32						; size = 1
??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z PROC ; std::_Distance1<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > >, COMDAT

; 1099 : 	{	// return distance between iterators; input

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 1100 : 	_Iter_diff_t<_InIt> _Off = 0;

	mov	DWORD PTR __Off$[ebp], 0

; 1101 : 	for (; _First != _Last; ++_First)

	jmp	SHORT $LN4@Distance1
$LN2@Distance1:
	lea	ecx, DWORD PTR __First$[ebp]
	call	??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator++
$LN4@Distance1:
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@Distance1

; 1102 : 		++_Off;

	mov	eax, DWORD PTR __Off$[ebp]
	add	eax, 1
	mov	DWORD PTR __Off$[ebp], eax
	jmp	SHORT $LN2@Distance1
$LN3@Distance1:

; 1103 : 
; 1104 : 	return (_Off);

	mov	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T2[ebp]

; 1105 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z ENDP ; std::_Distance1<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?8PAEPAE@std@@YA_NABV?$allocator@PAE@0@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?8PAEPAE@std@@YA_NABV?$allocator@PAE@0@0@Z PROC	; std::operator==<unsigned char *,unsigned char *>, COMDAT

; 795  : 	{	// test for allocator equality

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 796  : 	return (true);

	mov	al, 1

; 797  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$?8PAEPAE@std@@YA_NABV?$allocator@PAE@0@0@Z ENDP	; std::operator==<unsigned char *,unsigned char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?8V?$allocator@PAE@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?8V?$allocator@PAE@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@0@Z PROC ; std::operator==<std::allocator<unsigned char *>,std::allocator<unsigned char *> >, COMDAT

; 1016 : 	{	// test for allocator equality

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1017 : 	return (static_cast<const _Ty&>(_Left)

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$?8PAEPAE@std@@YA_NABV?$allocator@PAE@0@0@Z ; std::operator==<unsigned char *,unsigned char *>
	add	esp, 8

; 1018 : 		== static_cast<const _Other&>(_Right));
; 1019 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?8V?$allocator@PAE@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@0@Z ENDP ; std::operator==<std::allocator<unsigned char *>,std::allocator<unsigned char *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PAEABQAE@?$allocator_traits@V?$allocator@PAE@std@@@std@@SAXAAV?$allocator@PAE@1@PAPAEABQAE@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAEABQAE@?$allocator_traits@V?$allocator@PAE@std@@@std@@SAXAAV?$allocator@PAE@1@PAPAEABQAE@Z PROC ; std::allocator_traits<std::allocator<unsigned char *> >::construct<unsigned char *,unsigned char * const &>, COMDAT

; 856  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 857  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABQAE@std@@YAABQAEABQAE@Z	; std::forward<unsigned char * const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PAEABQAE@?$allocator@PAE@std@@QAEXPAPAEABQAE@Z ; std::allocator<unsigned char *>::construct<unsigned char *,unsigned char * const &>

; 858  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@PAEABQAE@?$allocator_traits@V?$allocator@PAE@std@@@std@@SAXAAV?$allocator@PAE@1@PAPAEABQAE@Z ENDP ; std::allocator_traits<std::allocator<unsigned char *> >::construct<unsigned char *,unsigned char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@ABQAE@std@@YAABQAEABQAE@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAE@std@@YAABQAEABQAE@Z PROC		; std::forward<unsigned char * const &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@ABQAE@std@@YAABQAEABQAE@Z ENDP		; std::forward<unsigned char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PAEAAPAE@?$allocator_traits@V?$allocator@PAE@std@@@std@@SAXAAV?$allocator@PAE@1@PAPAEAAPAE@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAEAAPAE@?$allocator_traits@V?$allocator@PAE@std@@@std@@SAXAAV?$allocator@PAE@1@PAPAEAAPAE@Z PROC ; std::allocator_traits<std::allocator<unsigned char *> >::construct<unsigned char *,unsigned char * &>, COMDAT

; 856  : 		{	// construct _Objty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 857  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAE@std@@YAAAPAEAAPAE@Z	; std::forward<unsigned char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PAEAAPAE@?$allocator@PAE@std@@QAEXPAPAEAAPAE@Z ; std::allocator<unsigned char *>::construct<unsigned char *,unsigned char * &>

; 858  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@PAEAAPAE@?$allocator_traits@V?$allocator@PAE@std@@@std@@SAXAAV?$allocator@PAE@1@PAPAEAAPAE@Z ENDP ; std::allocator_traits<std::allocator<unsigned char *> >::construct<unsigned char *,unsigned char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAE@std@@YAAAPAEAAPAE@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAE@std@@YAAAPAEAAPAE@Z PROC		; std::forward<unsigned char * &>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAPAE@std@@YAAAPAEAAPAE@Z ENDP		; std::forward<unsigned char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Move_unchecked1@PAPAEPAPAE@std@@YAPAPAEPAPAE00U_Trivially_copyable_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move_unchecked1@PAPAEPAPAE@std@@YAPAPAEPAPAE00U_Trivially_copyable_ptr_iterator_tag@0@@Z PROC ; std::_Move_unchecked1<unsigned char * *,unsigned char * *>, COMDAT

; 2589 : 	{	// move [_First, _Last) to [_Dest, ...), memmove optimization

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 2590 : 	return (_Copy_memmove(_First, _Last, _Dest));

	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Copy_memmove@PAPAEPAPAE@std@@YAPAPAEPAPAE00@Z ; std::_Copy_memmove<unsigned char * *,unsigned char * *>
	add	esp, 12					; 0000000cH

; 2591 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Move_unchecked1@PAPAEPAPAE@std@@YAPAPAEPAPAE00U_Trivially_copyable_ptr_iterator_tag@0@@Z ENDP ; std::_Move_unchecked1<unsigned char * *,unsigned char * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Ptr_move_cat@PAEPAE@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAPAE0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Ptr_move_cat@PAEPAE@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAPAE0@Z PROC ; std::_Ptr_move_cat<unsigned char *,unsigned char *>, COMDAT

; 809  : 	{	// return pointer move optimization category for pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 810  : 	return {};

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 811  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_move_cat@PAEPAE@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAPAE0@Z ENDP ; std::_Ptr_move_cat<unsigned char *,unsigned char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\map
;	COMDAT ??$_Try_emplace@ABI$$V@?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABI@Z
_TEXT	SEGMENT
tv159 = -376						; size = 4
tv220 = -372						; size = 4
tv154 = -372						; size = 4
tv210 = -368						; size = 4
tv166 = -368						; size = 4
tv218 = -364						; size = 4
tv69 = -364						; size = 4
$T2 = -356						; size = 4
$T3 = -341						; size = 1
$T4 = -332						; size = 12
$T5 = -312						; size = 4
$T6 = -300						; size = 4
$T7 = -285						; size = 1
$T8 = -273						; size = 1
$T9 = -264						; size = 12
$T10 = -241						; size = 1
__Where$ = -40						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Try_emplace@ABI$$V@?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABI@Z PROC ; std::map<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Try_emplace<unsigned int const &>, COMDAT
; _this$ = ecx

; 208  : 		{	// fail if _Keyval present, else emplace

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Try_emplace@ABI$$V@?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 364				; 0000016cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-376]
	mov	ecx, 91					; 0000005bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0

; 209  : 		iterator _Where = _Mybase::lower_bound(_Keyval);

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lower_bound@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::lower_bound
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 210  : 		if (_Where == _Mybase::end()
; 211  : 			|| _DEBUG_LT_PRED(_Mybase::_Getcomp(),

	lea	eax, DWORD PTR $T9[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::end
	mov	DWORD PTR tv69[ebp], eax
	mov	ecx, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv210[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR tv210[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN5@Try_emplac
	push	212					; 000000d4H
	push	OFFSET ??_C@_1IG@CDANFHMM@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Mynode
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Key
	push	eax
	mov	edx, DWORD PTR __Keyval$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@I@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@I@std@@ABIABI@std@@YA_NAAU?$less@I@0@ABI1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned int> &,unsigned int const &,unsigned int const &>
	add	esp, 20					; 00000014H
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN5@Try_emplac
	mov	DWORD PTR tv154[ebp], 0
	jmp	SHORT $LN6@Try_emplac
$LN5@Try_emplac:
	mov	DWORD PTR tv154[ebp], 1
$LN6@Try_emplac:
	mov	cl, BYTE PTR tv154[ebp]
	mov	BYTE PTR $T10[ebp], cl
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T2[ebp]
	and	edx, 1
	je	SHORT $LN10@Try_emplac
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	lea	ecx, DWORD PTR $T9[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN10@Try_emplac:
	movzx	eax, BYTE PTR $T10[ebp]
	test	eax, eax
	je	$LN2@Try_emplac

; 212  : 				_Keyval, _Mybase::_Key(_Where._Mynode())))
; 213  : 			return (_Pairib(

	mov	BYTE PTR $T8[ebp], 1
	lea	eax, DWORD PTR $T8[ebp]
	push	eax
	lea	ecx, DWORD PTR $T7[ebp]
	push	ecx
	call	??$forward_as_tuple@$$V@std@@YA?AV?$tuple@$$V@0@XZ ; std::forward_as_tuple<>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Keyval$[ebp]
	push	edx
	call	??$forward@ABI@std@@YAABIABI@Z		; std::forward<unsigned int const &>
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	call	??$forward_as_tuple@ABI@std@@YA?AV?$tuple@ABI@0@ABI@Z ; std::forward_as_tuple<unsigned int const &>
	add	esp, 8
	push	eax
	push	OFFSET ?piecewise_construct@std@@3Upiecewise_construct_t@1@B
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T5[ebp], esp
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv218[ebp], eax
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABI@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::emplace_hint<std::piecewise_construct_t const &,std::tuple<unsigned int const &>,std::tuple<> >
	mov	DWORD PTR tv166[ebp], eax
	mov	ecx, DWORD PTR tv166[ebp]
	mov	DWORD PTR tv220[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR tv220[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool,void,0>
	mov	DWORD PTR tv159[ebp], eax
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 2
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN1@Try_emplac

; 214  : 				_Mybase::emplace_hint(_Where,
; 215  : 					piecewise_construct,
; 216  : 					_STD forward_as_tuple(
; 217  : 						_STD forward<_Keyty>(_Keyval)),
; 218  : 					_STD forward_as_tuple(
; 219  : 						_STD forward<_Mappedty>(_Mapval)...)),
; 220  : 				true));
; 221  : 		else

	jmp	SHORT $LN3@Try_emplac
$LN2@Try_emplac:

; 222  : 			return (_Pairib(_Where, false));

	mov	BYTE PTR $T3[ebp], 0
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > &,bool,void,0>
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 2
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN1@Try_emplac
$LN3@Try_emplac:

; 223  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN1@Try_emplac:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@Try_emplac
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 376				; 00000178H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN18@Try_emplac:
	DD	1
	DD	$LN17@Try_emplac
$LN17@Try_emplac:
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN15@Try_emplac
$LN15@Try_emplac:
	DB	95					; 0000005fH
	DB	87					; 00000057H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Try_emplace@ABI$$V@?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABI@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Try_emplace@ABI$$V@?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABI@Z$1:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN9@Try_emplac
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	lea	ecx, DWORD PTR $T9[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN9@Try_emplac:
	ret	0
__unwindfunclet$??$_Try_emplace@ABI$$V@?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABI@Z$3:
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Try_emplace@ABI$$V@?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-380]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Try_emplace@ABI$$V@?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Try_emplace@ABI$$V@?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABI@Z ENDP ; std::map<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Try_emplace<unsigned int const &>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z
_TEXT	SEGMENT
$T2 = -224						; size = 4
__Off$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
___formal$ = 32						; size = 1
??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z PROC ; std::_Distance1<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > >, COMDAT

; 1099 : 	{	// return distance between iterators; input

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 1100 : 	_Iter_diff_t<_InIt> _Off = 0;

	mov	DWORD PTR __Off$[ebp], 0

; 1101 : 	for (; _First != _Last; ++_First)

	jmp	SHORT $LN4@Distance1
$LN2@Distance1:
	lea	ecx, DWORD PTR __First$[ebp]
	call	??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator++
$LN4@Distance1:
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@Distance1

; 1102 : 		++_Off;

	mov	eax, DWORD PTR __Off$[ebp]
	add	eax, 1
	mov	DWORD PTR __Off$[ebp], eax
	jmp	SHORT $LN2@Distance1
$LN3@Distance1:

; 1103 : 
; 1104 : 	return (_Off);

	mov	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T2[ebp]

; 1105 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z ENDP ; std::_Distance1<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??$_Rechecked@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@YAAAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@AAV10@PAPAE@Z
_TEXT	SEGMENT
__Iter$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Rechecked@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@YAAAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@AAV10@PAPAE@Z PROC ; std::_Rechecked<std::_Vector_val<std::_Simple_types<unsigned char *> > >, COMDAT

; 411  : 	{	// convert to checked

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 412  : 	return (_Iter._Rechecked(_Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Iter$[ebp]
	call	?_Rechecked@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAEAAV12@PAPAE@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::_Rechecked

; 413  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Rechecked@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@YAAAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@AAV10@PAPAE@Z ENDP ; std::_Rechecked<std::_Vector_val<std::_Simple_types<unsigned char *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm
;	COMDAT ??$_Remove_unchecked@PAPAEPAE@std@@YAPAPAEPAPAE0ABQAE@Z
_TEXT	SEGMENT
__Next$ = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Remove_unchecked@PAPAEPAE@std@@YAPAPAEPAPAE0ABQAE@Z PROC ; std::_Remove_unchecked<unsigned char * *,unsigned char *>, COMDAT

; 1448 : 	{	// remove each matching _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1449 : 	_First = _Find_unchecked(_First, _Last, _Val);

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Find_unchecked@PAPAEPAE@std@@YAPAPAEPAPAE0ABQAE@Z ; std::_Find_unchecked<unsigned char * *,unsigned char *>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __First$[ebp], eax

; 1450 : 	_FwdIt _Next = _First;

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Next$[ebp], eax

; 1451 : 	if (_First != _Last)

	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN5@Remove_unc

; 1452 : 		{
; 1453 : 		for (++_First; _First != _Last; ++_First)

	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 4
	mov	DWORD PTR __First$[ebp], eax
	jmp	SHORT $LN4@Remove_unc
$LN2@Remove_unc:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 4
	mov	DWORD PTR __First$[ebp], eax
$LN4@Remove_unc:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN5@Remove_unc

; 1454 : 			if (!(*_First == _Val))

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	je	SHORT $LN6@Remove_unc

; 1455 : 				*_Next++ = _STD move(*_First);

	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$move@AAPAE@std@@YA$$QAPAEAAPAE@Z	; std::move<unsigned char * &>
	add	esp, 4
	mov	ecx, DWORD PTR __Next$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Next$[ebp]
	add	eax, 4
	mov	DWORD PTR __Next$[ebp], eax
$LN6@Remove_unc:

; 1456 : 		}

	jmp	SHORT $LN2@Remove_unc
$LN5@Remove_unc:

; 1457 : 
; 1458 : 	return (_Next);

	mov	eax, DWORD PTR __Next$[ebp]

; 1459 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Remove_unchecked@PAPAEPAE@std@@YAPAPAEPAPAE0ABQAE@Z ENDP ; std::_Remove_unchecked<unsigned char * *,unsigned char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@YAPAPAEV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T2 = -212						; size = 4
__$EHRec$ = -12						; size = 12
__Iter$ = 8						; size = 12
??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@YAPAPAEV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@@Z PROC ; std::_Unchecked<std::_Vector_val<std::_Simple_types<unsigned char *> > >, COMDAT

; 402  : 	{	// convert to unchecked

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@YAPAPAEV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 403  : 	return (_Iter._Unchecked());

	lea	ecx, DWORD PTR __Iter$[ebp]
	call	?_Unchecked@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBEPAPAEXZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::_Unchecked
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Iter$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T2[ebp]

; 404  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@YAPAPAEV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@@Z$0:
	lea	ecx, DWORD PTR __Iter$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@YAPAPAEV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@YAPAPAEV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@YAPAPAEV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@@Z ENDP ; std::_Unchecked<std::_Vector_val<std::_Simple_types<unsigned char *> > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Debug_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@0PB_WI@Z
_TEXT	SEGMENT
tv140 = -252						; size = 4
tv137 = -248						; size = 4
tv143 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
$T4 = -209						; size = 1
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__File$ = 32						; size = 4
__Line$ = 36						; size = 4
??$_Debug_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@0PB_WI@Z PROC ; std::_Debug_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > > >, COMDAT

; 966  : 	{	// test iterator pair for valid range

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Debug_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@0PB_WI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 967  : 	_Debug_range2(_First, _Last, _File, _Line, _Iter_cat_t<_InIt>());

	xor	eax, eax
	mov	BYTE PTR $T4[ebp], al
	movzx	ecx, BYTE PTR $T4[ebp]
	push	ecx
	mov	edx, DWORD PTR __Line$[ebp]
	push	edx
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv143[ebp], eax
	mov	eax, DWORD PTR tv143[ebp]
	mov	DWORD PTR tv137[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv140[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	??$_Debug_range2@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > > >
	add	esp, 36					; 00000024H

; 968  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Debug_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@0PB_WI@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Debug_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@0PB_WI@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Debug_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@0PB_WI@Z$2:
	mov	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Debug_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@0PB_WI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-256]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Debug_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@0PB_WI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Debug_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@0PB_WI@Z ENDP ; std::_Debug_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAPAU21@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAPAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::construct<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &>, COMDAT
; _this$ = ecx

; 994  : 		{	// construct _Ty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 995  : 		_Mytraits::construct(*this, _Ptr,

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAPAU31@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::construct<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &>
	add	esp, 12					; 0000000cH

; 996  : 			_STD forward<_Types>(_Args)...);
; 997  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAPAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::construct<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAPAU21@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAPAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::construct<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> * &>, COMDAT
; _this$ = ecx

; 994  : 		{	// construct _Ty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 995  : 		_Mytraits::construct(*this, _Ptr,

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAPAU31@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::construct<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> * &>
	add	esp, 12					; 0000000cH

; 996  : 			_STD forward<_Types>(_Args)...);
; 997  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAPAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::construct<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAPAU21@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAPAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::construct<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> * &>, COMDAT
; _this$ = ecx

; 994  : 		{	// construct _Ty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 995  : 		_Mytraits::construct(*this, _Ptr,

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAPAU31@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::construct<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> * &>
	add	esp, 12					; 0000000cH

; 996  : 			_STD forward<_Types>(_Args)...);
; 997  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAPAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::construct<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 724  : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 725  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 726  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?pointer_to@?$pointer_traits@PAU_Container_proxy@std@@@std@@SAPAU_Container_proxy@2@AAU32@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PAU_Container_proxy@std@@@std@@SAPAU_Container_proxy@2@AAU32@@Z PROC ; std::pointer_traits<std::_Container_proxy *>::pointer_to, COMDAT

; 279  : 		{	// convert raw reference to pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 280  : 		return (_STD addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ; std::addressof<std::_Container_proxy>
	add	esp, 4

; 281  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?pointer_to@?$pointer_traits@PAU_Container_proxy@std@@@std@@SAPAU_Container_proxy@2@AAU32@@Z ENDP ; std::pointer_traits<std::_Container_proxy *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::destroy<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >, COMDAT
; _this$ = ecx

; 1002 : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1003 : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@1@PAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::destroy<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >
	add	esp, 8

; 1004 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::destroy<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\map
;	COMDAT ??$_Kfn@QAEV?$vector@EV?$allocator@E@std@@@std@@@?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@SAABQAEABU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Kfn@QAEV?$vector@EV?$allocator@E@std@@@std@@@?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@SAABQAEABU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@@Z PROC ; std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0>::_Kfn<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >, COMDAT

; 61   : 		{	// extract key from element value

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 62   : 		return (_Val.first);

	mov	eax, DWORD PTR __Val$[ebp]

; 63   : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Kfn@QAEV?$vector@EV?$allocator@E@std@@@std@@@?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@SAABQAEABU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@@Z ENDP ; std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0>::_Kfn<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0ABU?$less@PAE@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@PAE@1@$$QAU_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
_<_Val2_0>$ = 16					; size = 4
??$?0ABU?$less@PAE@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@PAE@1@$$QAU_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1>::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1><std::less<unsigned char *> const &,std::_Zero_then_variadic_args_t>, COMDAT
; _this$ = ecx

; 289  : 		{	// construct from forwarded values

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 287  : 		: _Ty1(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@ABU?$less@PAE@std@@@std@@YAABU?$less@PAE@0@ABU10@@Z ; std::forward<std::less<unsigned char *> const &>
	add	esp, 4

; 288  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

	mov	eax, DWORD PTR _<_Val2_0>$[ebp]
	push	eax
	call	??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z ; std::forward<std::_Zero_then_variadic_args_t>
	add	esp, 4
	mov	cl, BYTE PTR [eax]
	movzx	edx, cl
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1><>

; 290  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$?0ABU?$less@PAE@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@PAE@1@$$QAU_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1>::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1><std::less<unsigned char *> const &,std::_Zero_then_variadic_args_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??$?0AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > > &>, COMDAT
; _this$ = ecx

; 952  : 		{	// construct from a related allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 951  : 		: _Mybase(_STD forward<_Other>(_Right))

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >

; 953  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>, COMDAT
; _this$ = ecx

; 1002 : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1003 : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
	add	esp, 8

; 1004 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@0@AAPAU10@@Z PROC ; std::addressof<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>, COMDAT

; 724  : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 725  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 726  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@0@AAPAU10@@Z ENDP ; std::addressof<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@U?$pair@QAEI@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAEI@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U?$pair@QAEI@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAEI@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::destroy<std::pair<unsigned char * const,unsigned int> >, COMDAT
; _this$ = ecx

; 1002 : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1003 : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@U?$pair@QAEI@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@1@PAU?$pair@QAEI@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::destroy<std::pair<unsigned char * const,unsigned int> >
	add	esp, 8

; 1004 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U?$pair@QAEI@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAEI@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::destroy<std::pair<unsigned char * const,unsigned int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0ABU?$less@PAE@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@PAE@1@$$QAU_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
_<_Val2_0>$ = 16					; size = 4
??$?0ABU?$less@PAE@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@PAE@1@$$QAU_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>,1>::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>,1><std::less<unsigned char *> const &,std::_Zero_then_variadic_args_t>, COMDAT
; _this$ = ecx

; 289  : 		{	// construct from forwarded values

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 287  : 		: _Ty1(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@ABU?$less@PAE@std@@@std@@YAABU?$less@PAE@0@ABU10@@Z ; std::forward<std::less<unsigned char *> const &>
	add	esp, 4

; 288  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

	mov	eax, DWORD PTR _<_Val2_0>$[ebp]
	push	eax
	call	??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z ; std::forward<std::_Zero_then_variadic_args_t>
	add	esp, 4
	mov	cl, BYTE PTR [eax]
	movzx	edx, cl
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1><>

; 290  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$?0ABU?$less@PAE@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@PAE@1@$$QAU_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>,1>::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>,1><std::less<unsigned char *> const &,std::_Zero_then_variadic_args_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??$?0AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > > &>, COMDAT
; _this$ = ecx

; 952  : 		{	// construct from a related allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 951  : 		: _Mybase(_STD forward<_Other>(_Right))

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >

; 953  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::destroy<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>, COMDAT
; _this$ = ecx

; 1002 : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1003 : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::destroy<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
	add	esp, 8

; 1004 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::destroy<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@0@AAPAU10@@Z PROC ; std::addressof<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>, COMDAT

; 724  : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 725  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 726  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@0@AAPAU10@@Z ENDP ; std::addressof<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??$_Umove@PAPAE@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEPAPAEPAPAE00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAPAE@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEPAPAEPAPAE00@Z PROC ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Umove<unsigned char * *>, COMDAT
; _this$ = ecx

; 1658 : 		{	// move initializing [_First, _Last), using allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1659 : 		return (_Uninitialized_move(_First, _Last,

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Getal
	push	eax
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Uninitialized_move@PAPAEPAPAEV?$allocator@PAE@std@@@std@@YAPAPAEPAPAE00AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@@Z ; std::_Uninitialized_move<unsigned char * *,unsigned char * *,std::allocator<unsigned char *> >
	add	esp, 16					; 00000010H

; 1660 : 			_Ptr, this->_Getal()));
; 1661 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAPAE@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEPAPAEPAPAE00@Z ENDP ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Umove<unsigned char * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::destroy<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >, COMDAT
; _this$ = ecx

; 1002 : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1003 : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@1@PAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::destroy<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >
	add	esp, 8

; 1004 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::destroy<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\utility
;	COMDAT ??$swap@DX@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Tmp$ = -5						; size = 1
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@DX@std@@YAXAAD0@Z PROC				; std::swap<char,void>, COMDAT

; 48   : 	{	// exchange values stored at _Left and _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 49   : 	_Ty _Tmp = _STD move(_Left);

	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	call	??$move@AAD@std@@YA$$QADAAD@Z		; std::move<char &>
	add	esp, 4
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR __Tmp$[ebp], cl

; 50   : 	_Left = _STD move(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$move@AAD@std@@YA$$QADAAD@Z		; std::move<char &>
	add	esp, 4
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx], dl

; 51   : 	_Right = _STD move(_Tmp);

	lea	eax, DWORD PTR __Tmp$[ebp]
	push	eax
	call	??$move@AAD@std@@YA$$QADAAD@Z		; std::move<char &>
	add	esp, 4
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx], dl

; 52   : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@swap
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@swap:
	DD	1
	DD	$LN4@swap
$LN4@swap:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@swap
$LN3@swap:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
??$swap@DX@std@@YAXAAD0@Z ENDP				; std::swap<char,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\map
;	COMDAT ??$_Kfn@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@SAABIABU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Kfn@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@SAABIABU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@@Z PROC ; std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0>::_Kfn<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >, COMDAT

; 61   : 		{	// extract key from element value

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 62   : 		return (_Val.first);

	mov	eax, DWORD PTR __Val$[ebp]

; 63   : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Kfn@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@SAABIABU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@@Z ENDP ; std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0>::_Kfn<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0ABU?$less@I@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@I@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@I@1@$$QAU_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
_<_Val2_0>$ = 16					; size = 4
??$?0ABU?$less@I@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@I@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@I@1@$$QAU_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::less<unsigned int>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>,1>::_Compressed_pair<std::less<unsigned int>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>,1><std::less<unsigned int> const &,std::_Zero_then_variadic_args_t>, COMDAT
; _this$ = ecx

; 289  : 		{	// construct from forwarded values

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 287  : 		: _Ty1(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@ABU?$less@I@std@@@std@@YAABU?$less@I@0@ABU10@@Z ; std::forward<std::less<unsigned int> const &>
	add	esp, 4

; 288  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

	mov	eax, DWORD PTR _<_Val2_0>$[ebp]
	push	eax
	call	??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z ; std::forward<std::_Zero_then_variadic_args_t>
	add	esp, 4
	mov	cl, BYTE PTR [eax]
	movzx	edx, cl
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1><>

; 290  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$?0ABU?$less@I@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@I@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@I@1@$$QAU_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::less<unsigned int>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>,1>::_Compressed_pair<std::less<unsigned int>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>,1><std::less<unsigned int> const &,std::_Zero_then_variadic_args_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??$?0AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > > &>, COMDAT
; _this$ = ecx

; 952  : 		{	// construct from a related allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 951  : 		: _Mybase(_STD forward<_Other>(_Right))

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >

; 953  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>, COMDAT
; _this$ = ecx

; 1002 : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1003 : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
	add	esp, 8

; 1004 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@0@AAPAU10@@Z PROC ; std::addressof<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>, COMDAT

; 724  : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 725  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 726  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@0@AAPAU10@@Z ENDP ; std::addressof<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0AAU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@E@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??$?0AAU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@E@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<unsigned char> > &>, COMDAT
; _this$ = ecx

; 952  : 		{	// construct from a related allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 951  : 		: _Mybase(_STD forward<_Other>(_Right))

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@AAU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<unsigned char> > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0E@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@E@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned char>

; 953  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0AAU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@E@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<unsigned char> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx

; 994  : 		{	// construct _Ty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 995  : 		_Mytraits::construct(*this, _Ptr,

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
	add	esp, 12					; 0000000cH

; 996  : 			_STD forward<_Types>(_Args)...);
; 997  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 739  : 	{	// do nothing for plain pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 740  : 	return (_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]

; 741  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx

; 1002 : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1003 : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
	add	esp, 8

; 1004 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??$?0AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<unsigned char *> > &>, COMDAT
; _this$ = ecx

; 952  : 		{	// construct from a related allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 951  : 		: _Mybase(_STD forward<_Other>(_Right))

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<unsigned char *> > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0PAE@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAE@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned char *>

; 953  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<unsigned char *> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate, COMDAT
; _this$ = ecx

; 986  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 987  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate

; 988  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate, COMDAT
; _this$ = ecx

; 975  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 976  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate

; 977  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QBEPAU_Container_proxy@2@AAU32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QBEPAU_Container_proxy@2@AAU32@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address, COMDAT
; _this$ = ecx

; 925  : 		{	// return address of mutable _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 926  : 		return (pointer_traits<pointer>::pointer_to(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	?pointer_to@?$pointer_traits@PAU_Container_proxy@std@@@std@@SAPAU_Container_proxy@2@AAU32@@Z ; std::pointer_traits<std::_Container_proxy *>::pointer_to
	add	esp, 4

; 927  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QBEPAU_Container_proxy@2@AAU32@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx

; 724  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 725  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));

	push	1
	push	8
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	?_Allocate@std@@YAPAXII_N@Z		; std::_Allocate
	add	esp, 12					; 0000000cH

; 726  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT
; _this$ = ecx

; 719  : 		{	// deallocate object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 720  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	8
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 721  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@YAPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@YAPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@0@AAU10@@Z PROC ; std::addressof<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >, COMDAT

; 724  : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 725  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 726  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@YAPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@0@AAU10@@Z ENDP ; std::addressof<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@U?$pair@QAEI@std@@@std@@YAPAU?$pair@QAEI@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@QAEI@std@@@std@@YAPAU?$pair@QAEI@0@AAU10@@Z PROC ; std::addressof<std::pair<unsigned char * const,unsigned int> >, COMDAT

; 724  : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 725  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 726  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@U?$pair@QAEI@std@@@std@@YAPAU?$pair@QAEI@0@AAU10@@Z ENDP ; std::addressof<std::pair<unsigned char * const,unsigned int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@0@AAU10@@Z PROC ; std::addressof<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >, COMDAT

; 724  : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 725  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 726  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@0@AAU10@@Z ENDP ; std::addressof<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$_Destroy_range@V?$allocator@E@std@@PAE@std@@YAXPAE0AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@E@std@@PAE@std@@YAXPAE0AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<unsigned char>,unsigned char *>, COMDAT

; 1114 : 	{	// destroy [_First, _Last), choose optimization

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1115 : 		// note that this is an optimization for debug mode codegen;
; 1116 : 		// in release mode the BE removes all of this
; 1117 : 	typedef typename _Alloc::value_type _Val;
; 1118 : 	_Destroy_range1(_First, _Last, _Al, typename conjunction<

	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range1@V?$allocator@E@std@@PAE@std@@YAXPAE0AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U?$integral_constant@_N$00@0@@Z ; std::_Destroy_range1<std::allocator<unsigned char>,unsigned char *>
	add	esp, 16					; 00000010H

; 1119 : 		is_trivially_destructible<_Val>,
; 1120 : 		_Uses_default_destroy<_Alloc, _Val *>>::type());
; 1121 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@E@std@@PAE@std@@YAXPAE0AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<unsigned char>,unsigned char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??$_Lbound@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@ABQAE@Z
_TEXT	SEGMENT
__Wherenode$ = -32					; size = 4
__Pnode$ = -20						; size = 4
_this$ = -8						; size = 4
__Keyval$ = 8						; size = 4
??$_Lbound@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@ABQAE@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Lbound<unsigned char *>, COMDAT
; _this$ = ecx

; 2059 : 		{	// find leftmost node not less than _Keyval

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2060 : 		_Nodeptr _Pnode = _Root();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Root
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax

; 2061 : 		_Nodeptr _Wherenode = this->_Myhead();	// end() if search fails

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myhead
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Wherenode$[ebp], eax
$LN2@Lbound:

; 2062 : 
; 2063 : 		while (!this->_Isnil(_Pnode))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@Lbound

; 2064 : 			if (_Compare(this->_Key(_Pnode), _Keyval))

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Key
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compare@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE_NABQAE0@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Compare
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@Lbound

; 2065 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 2066 : 			else

	jmp	SHORT $LN5@Lbound
$LN4@Lbound:

; 2067 : 				{	// _Pnode not less than _Keyval, remember it
; 2068 : 				_Wherenode = _Pnode;

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Wherenode$[ebp], eax

; 2069 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN5@Lbound:

; 2070 : 				}

	jmp	SHORT $LN2@Lbound
$LN3@Lbound:

; 2071 : 
; 2072 : 		return (_Wherenode);	// return best remembered candidate

	mov	eax, DWORD PTR __Wherenode$[ebp]

; 2073 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$_Lbound@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@ABQAE@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Lbound<unsigned char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z
_TEXT	SEGMENT
tv164 = -308						; size = 4
$T2 = -300						; size = 4
__Last$ = -96						; size = 12
__First$ = -76						; size = 12
__Hinode$ = -56						; size = 4
__Lonode$ = -44						; size = 4
__Pnode$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Eqrange<unsigned char *>, COMDAT
; _this$ = ecx

; 1988 : 		{	// find leftmost node not less than _Keyval

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 296				; 00000128H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-308]
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0

; 1989 : 		_Nodeptr _Pnode = _Root();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Root
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax

; 1990 : 		_Nodeptr _Lonode = this->_Myhead();	// end() if search fails

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myhead
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Lonode$[ebp], eax

; 1991 : 		_Nodeptr _Hinode = this->_Myhead();	// end() if search fails

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myhead
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Hinode$[ebp], eax
$LN2@Eqrange:

; 1992 : 
; 1993 : 		while (!this->_Isnil(_Pnode))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	$LN3@Eqrange

; 1994 : 			if (_DEBUG_LT_PRED(this->_Getcomp(), this->_Key(_Pnode), _Keyval))

	push	1994					; 000007caH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Key
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@ABU?$less@PAE@std@@ABQAEABQAE@std@@YA_NABU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> const &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN6@Eqrange

; 1995 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 1996 : 			else

	jmp	SHORT $LN7@Eqrange
$LN6@Eqrange:

; 1997 : 				{	// _Pnode not less than _Keyval, remember it
; 1998 : 				if (this->_Isnil(_Hinode)
; 1999 : 						&& _DEBUG_LT_PRED(this->_Getcomp(), _Keyval,

	mov	eax, DWORD PTR __Hinode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN8@Eqrange
	push	2000					; 000007d0H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Key
	push	eax
	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@ABU?$less@PAE@std@@ABQAEABQAE@std@@YA_NABU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> const &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN8@Eqrange

; 2000 : 						this->_Key(_Pnode)))
; 2001 : 					_Hinode = _Pnode;	// _Pnode greater, remember it

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Hinode$[ebp], eax
$LN8@Eqrange:

; 2002 : 				_Lonode = _Pnode;

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Lonode$[ebp], eax

; 2003 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN7@Eqrange:

; 2004 : 				}

	jmp	$LN2@Eqrange
$LN3@Eqrange:

; 2005 : 
; 2006 : 		_Pnode = this->_Isnil(_Hinode) ? _Root()

	mov	eax, DWORD PTR __Hinode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN12@Eqrange
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Root
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv164[ebp], edx
	jmp	SHORT $LN13@Eqrange
$LN12@Eqrange:
	mov	eax, DWORD PTR __Hinode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv164[ebp], ecx
$LN13@Eqrange:
	mov	edx, DWORD PTR tv164[ebp]
	mov	DWORD PTR __Pnode$[ebp], edx
$LN4@Eqrange:

; 2007 : 			: this->_Left(_Hinode);	// continue scan for upper bound
; 2008 : 		while (!this->_Isnil(_Pnode))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN5@Eqrange

; 2009 : 			if (_DEBUG_LT_PRED(this->_Getcomp(), _Keyval, this->_Key(_Pnode)))

	push	2009					; 000007d9H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Key
	push	eax
	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@ABU?$less@PAE@std@@ABQAEABQAE@std@@YA_NABU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> const &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN9@Eqrange

; 2010 : 				{	// _Pnode greater than _Keyval, remember it
; 2011 : 				_Hinode = _Pnode;

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Hinode$[ebp], eax

; 2012 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 2013 : 				}
; 2014 : 			else

	jmp	SHORT $LN10@Eqrange
$LN9@Eqrange:

; 2015 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN10@Eqrange:
	jmp	SHORT $LN4@Eqrange
$LN5@Eqrange:

; 2016 : 
; 2017 : 		const_iterator _First = const_iterator(_Lonode, &this->_Get_data());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Get_data
	push	eax
	mov	eax, DWORD PTR __Lonode$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2018 : 		const_iterator _Last = const_iterator(_Hinode, &this->_Get_data());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Get_data
	push	eax
	mov	eax, DWORD PTR __Hinode$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 2019 : 		return (_Paircc(_First, _Last));

	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@0@Z ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &,void,0>
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2020 : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN22@Eqrange
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 308				; 00000134H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN22@Eqrange:
	DD	2
	DD	$LN21@Eqrange
$LN21@Eqrange:
	DD	-76					; ffffffb4H
	DD	12					; 0000000cH
	DD	$LN18@Eqrange
	DD	-96					; ffffffa0H
	DD	12					; 0000000cH
	DD	$LN19@Eqrange
$LN19@Eqrange:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN18@Eqrange:
	DB	95					; 0000005fH
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z$0:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z$1:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-312]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Eqrange<unsigned char *>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z
_TEXT	SEGMENT
$T2 = -296						; size = 4
__Last$ = -92						; size = 12
__First$ = -72						; size = 12
__Ans$ = -52						; size = 24
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Eqrange<unsigned char *>, COMDAT
; _this$ = ecx

; 2024 : 		{	// find leftmost node not less than _Keyval

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0

; 2025 : 		_Paircc _Ans(static_cast<const _Myt *>(this)->_Eqrange(_Keyval));

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ans$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Eqrange<unsigned char *>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2026 : 		iterator _First = iterator(_Ans.first._Ptr, &this->_Get_data());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Get_data
	push	eax
	mov	eax, DWORD PTR __Ans$[ebp+8]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 2027 : 		iterator _Last = iterator(_Ans.second._Ptr, &this->_Get_data());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Get_data
	push	eax
	mov	eax, DWORD PTR __Ans$[ebp+20]
	push	eax
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 2028 : 		return (_Pairii(_First, _Last));

	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@0@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > ><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &,void,0>
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Ans$[ebp]
	call	??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2029 : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Eqrange
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN13@Eqrange:
	DD	3
	DD	$LN12@Eqrange
$LN12@Eqrange:
	DD	-52					; ffffffccH
	DD	24					; 00000018H
	DD	$LN8@Eqrange
	DD	-72					; ffffffb8H
	DD	12					; 0000000cH
	DD	$LN9@Eqrange
	DD	-92					; ffffffa4H
	DD	12					; 0000000cH
	DD	$LN10@Eqrange
$LN10@Eqrange:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN9@Eqrange:
	DB	95					; 0000005fH
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN8@Eqrange:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z$0:
	lea	ecx, DWORD PTR __Ans$[ebp]
	jmp	??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ
__unwindfunclet$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z$2:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-304]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Eqrange<unsigned char *>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?pointer_to@?$pointer_traits@PAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@SAPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@AAU32@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@SAPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@AAU32@@Z PROC ; std::pointer_traits<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > *>::pointer_to, COMDAT

; 279  : 		{	// convert raw reference to pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 280  : 		return (_STD addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@0@AAU10@@Z ; std::addressof<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >
	add	esp, 4

; 281  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?pointer_to@?$pointer_traits@PAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@SAPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@AAU32@@Z ENDP ; std::pointer_traits<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z
_TEXT	SEGMENT
tv164 = -308						; size = 4
$T2 = -300						; size = 4
__Last$ = -96						; size = 12
__First$ = -76						; size = 12
__Hinode$ = -56						; size = 4
__Lonode$ = -44						; size = 4
__Pnode$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Eqrange<unsigned char *>, COMDAT
; _this$ = ecx

; 1988 : 		{	// find leftmost node not less than _Keyval

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 296				; 00000128H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-308]
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0

; 1989 : 		_Nodeptr _Pnode = _Root();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Root
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax

; 1990 : 		_Nodeptr _Lonode = this->_Myhead();	// end() if search fails

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myhead
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Lonode$[ebp], eax

; 1991 : 		_Nodeptr _Hinode = this->_Myhead();	// end() if search fails

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myhead
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Hinode$[ebp], eax
$LN2@Eqrange:

; 1992 : 
; 1993 : 		while (!this->_Isnil(_Pnode))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	$LN3@Eqrange

; 1994 : 			if (_DEBUG_LT_PRED(this->_Getcomp(), this->_Key(_Pnode), _Keyval))

	push	1994					; 000007caH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Key
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@ABU?$less@PAE@std@@ABQAEABQAE@std@@YA_NABU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> const &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN6@Eqrange

; 1995 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 1996 : 			else

	jmp	SHORT $LN7@Eqrange
$LN6@Eqrange:

; 1997 : 				{	// _Pnode not less than _Keyval, remember it
; 1998 : 				if (this->_Isnil(_Hinode)
; 1999 : 						&& _DEBUG_LT_PRED(this->_Getcomp(), _Keyval,

	mov	eax, DWORD PTR __Hinode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN8@Eqrange
	push	2000					; 000007d0H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Key
	push	eax
	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@ABU?$less@PAE@std@@ABQAEABQAE@std@@YA_NABU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> const &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN8@Eqrange

; 2000 : 						this->_Key(_Pnode)))
; 2001 : 					_Hinode = _Pnode;	// _Pnode greater, remember it

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Hinode$[ebp], eax
$LN8@Eqrange:

; 2002 : 				_Lonode = _Pnode;

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Lonode$[ebp], eax

; 2003 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN7@Eqrange:

; 2004 : 				}

	jmp	$LN2@Eqrange
$LN3@Eqrange:

; 2005 : 
; 2006 : 		_Pnode = this->_Isnil(_Hinode) ? _Root()

	mov	eax, DWORD PTR __Hinode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN12@Eqrange
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Root
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv164[ebp], edx
	jmp	SHORT $LN13@Eqrange
$LN12@Eqrange:
	mov	eax, DWORD PTR __Hinode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv164[ebp], ecx
$LN13@Eqrange:
	mov	edx, DWORD PTR tv164[ebp]
	mov	DWORD PTR __Pnode$[ebp], edx
$LN4@Eqrange:

; 2007 : 			: this->_Left(_Hinode);	// continue scan for upper bound
; 2008 : 		while (!this->_Isnil(_Pnode))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN5@Eqrange

; 2009 : 			if (_DEBUG_LT_PRED(this->_Getcomp(), _Keyval, this->_Key(_Pnode)))

	push	2009					; 000007d9H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Key
	push	eax
	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@ABU?$less@PAE@std@@ABQAEABQAE@std@@YA_NABU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> const &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN9@Eqrange

; 2010 : 				{	// _Pnode greater than _Keyval, remember it
; 2011 : 				_Hinode = _Pnode;

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Hinode$[ebp], eax

; 2012 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 2013 : 				}
; 2014 : 			else

	jmp	SHORT $LN10@Eqrange
$LN9@Eqrange:

; 2015 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN10@Eqrange:
	jmp	SHORT $LN4@Eqrange
$LN5@Eqrange:

; 2016 : 
; 2017 : 		const_iterator _First = const_iterator(_Lonode, &this->_Get_data());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Get_data
	push	eax
	mov	eax, DWORD PTR __Lonode$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2018 : 		const_iterator _Last = const_iterator(_Hinode, &this->_Get_data());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Get_data
	push	eax
	mov	eax, DWORD PTR __Hinode$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 2019 : 		return (_Paircc(_First, _Last));

	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@0@Z ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > &,void,0>
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2020 : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN22@Eqrange
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 308				; 00000134H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN22@Eqrange:
	DD	2
	DD	$LN21@Eqrange
$LN21@Eqrange:
	DD	-76					; ffffffb4H
	DD	12					; 0000000cH
	DD	$LN18@Eqrange
	DD	-96					; ffffffa0H
	DD	12					; 0000000cH
	DD	$LN19@Eqrange
$LN19@Eqrange:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN18@Eqrange:
	DB	95					; 0000005fH
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z$0:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z$1:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-312]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Eqrange<unsigned char *>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z
_TEXT	SEGMENT
$T2 = -296						; size = 4
__Last$ = -92						; size = 12
__First$ = -72						; size = 12
__Ans$ = -52						; size = 24
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Eqrange<unsigned char *>, COMDAT
; _this$ = ecx

; 2024 : 		{	// find leftmost node not less than _Keyval

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0

; 2025 : 		_Paircc _Ans(static_cast<const _Myt *>(this)->_Eqrange(_Keyval));

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ans$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Eqrange<unsigned char *>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2026 : 		iterator _First = iterator(_Ans.first._Ptr, &this->_Get_data());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Get_data
	push	eax
	mov	eax, DWORD PTR __Ans$[ebp+8]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 2027 : 		iterator _Last = iterator(_Ans.second._Ptr, &this->_Get_data());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Get_data
	push	eax
	mov	eax, DWORD PTR __Ans$[ebp+20]
	push	eax
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 2028 : 		return (_Pairii(_First, _Last));

	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@1@0@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > >::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > ><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > &,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > &,void,0>
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Ans$[ebp]
	call	??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2029 : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Eqrange
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN13@Eqrange:
	DD	3
	DD	$LN12@Eqrange
$LN12@Eqrange:
	DD	-52					; ffffffccH
	DD	24					; 00000018H
	DD	$LN8@Eqrange
	DD	-72					; ffffffb8H
	DD	12					; 0000000cH
	DD	$LN9@Eqrange
	DD	-92					; ffffffa4H
	DD	12					; 0000000cH
	DD	$LN10@Eqrange
$LN10@Eqrange:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN9@Eqrange:
	DB	95					; 0000005fH
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN8@Eqrange:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z$0:
	lea	ecx, DWORD PTR __Ans$[ebp]
	jmp	??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ
__unwindfunclet$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z$2:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-304]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Eqrange<unsigned char *>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?pointer_to@?$pointer_traits@PAU?$pair@QAEI@std@@@std@@SAPAU?$pair@QAEI@2@AAU32@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PAU?$pair@QAEI@std@@@std@@SAPAU?$pair@QAEI@2@AAU32@@Z PROC ; std::pointer_traits<std::pair<unsigned char * const,unsigned int> *>::pointer_to, COMDAT

; 279  : 		{	// convert raw reference to pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 280  : 		return (_STD addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@U?$pair@QAEI@std@@@std@@YAPAU?$pair@QAEI@0@AAU10@@Z ; std::addressof<std::pair<unsigned char * const,unsigned int> >
	add	esp, 4

; 281  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?pointer_to@?$pointer_traits@PAU?$pair@QAEI@std@@@std@@SAPAU?$pair@QAEI@2@AAU32@@Z ENDP ; std::pointer_traits<std::pair<unsigned char * const,unsigned int> *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$_Destroy_range@V?$allocator@PAE@std@@PAPAE@std@@YAXPAPAE0AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAE@std@@PAPAE@std@@YAXPAPAE0AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<unsigned char *>,unsigned char * *>, COMDAT

; 1114 : 	{	// destroy [_First, _Last), choose optimization

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1115 : 		// note that this is an optimization for debug mode codegen;
; 1116 : 		// in release mode the BE removes all of this
; 1117 : 	typedef typename _Alloc::value_type _Val;
; 1118 : 	_Destroy_range1(_First, _Last, _Al, typename conjunction<

	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range1@V?$allocator@PAE@std@@PAPAE@std@@YAXPAPAE0AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@U?$integral_constant@_N$00@0@@Z ; std::_Destroy_range1<std::allocator<unsigned char *>,unsigned char * *>
	add	esp, 16					; 00000010H

; 1119 : 		is_trivially_destructible<_Val>,
; 1120 : 		_Uses_default_destroy<_Alloc, _Val *>>::type());
; 1121 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@PAE@std@@PAPAE@std@@YAXPAPAE0AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<unsigned char *>,unsigned char * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??$_Lbound@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@ABI@Z
_TEXT	SEGMENT
__Wherenode$ = -32					; size = 4
__Pnode$ = -20						; size = 4
_this$ = -8						; size = 4
__Keyval$ = 8						; size = 4
??$_Lbound@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@ABI@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Lbound<unsigned int>, COMDAT
; _this$ = ecx

; 2059 : 		{	// find leftmost node not less than _Keyval

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2060 : 		_Nodeptr _Pnode = _Root();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Root
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax

; 2061 : 		_Nodeptr _Wherenode = this->_Myhead();	// end() if search fails

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myhead
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Wherenode$[ebp], eax
$LN2@Lbound:

; 2062 : 
; 2063 : 		while (!this->_Isnil(_Pnode))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@Lbound

; 2064 : 			if (_Compare(this->_Key(_Pnode), _Keyval))

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Key
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compare@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE_NABI0@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Compare
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@Lbound

; 2065 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 2066 : 			else

	jmp	SHORT $LN5@Lbound
$LN4@Lbound:

; 2067 : 				{	// _Pnode not less than _Keyval, remember it
; 2068 : 				_Wherenode = _Pnode;

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Wherenode$[ebp], eax

; 2069 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN5@Lbound:

; 2070 : 				}

	jmp	SHORT $LN2@Lbound
$LN3@Lbound:

; 2071 : 
; 2072 : 		return (_Wherenode);	// return best remembered candidate

	mov	eax, DWORD PTR __Wherenode$[ebp]

; 2073 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$_Lbound@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@ABI@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Lbound<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??$_Eqrange@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABI@Z
_TEXT	SEGMENT
tv164 = -308						; size = 4
$T2 = -300						; size = 4
__Last$ = -96						; size = 12
__First$ = -76						; size = 12
__Hinode$ = -56						; size = 4
__Lonode$ = -44						; size = 4
__Pnode$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Eqrange@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABI@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Eqrange<unsigned int>, COMDAT
; _this$ = ecx

; 1988 : 		{	// find leftmost node not less than _Keyval

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Eqrange@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 296				; 00000128H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-308]
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0

; 1989 : 		_Nodeptr _Pnode = _Root();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Root
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax

; 1990 : 		_Nodeptr _Lonode = this->_Myhead();	// end() if search fails

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myhead
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Lonode$[ebp], eax

; 1991 : 		_Nodeptr _Hinode = this->_Myhead();	// end() if search fails

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myhead
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Hinode$[ebp], eax
$LN2@Eqrange:

; 1992 : 
; 1993 : 		while (!this->_Isnil(_Pnode))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	$LN3@Eqrange

; 1994 : 			if (_DEBUG_LT_PRED(this->_Getcomp(), this->_Key(_Pnode), _Keyval))

	push	1994					; 000007caH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Key
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$less@I@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@ABU?$less@I@std@@ABIABI@std@@YA_NABU?$less@I@0@ABI1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned int> const &,unsigned int const &,unsigned int const &>
	add	esp, 20					; 00000014H
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN6@Eqrange

; 1995 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 1996 : 			else

	jmp	SHORT $LN7@Eqrange
$LN6@Eqrange:

; 1997 : 				{	// _Pnode not less than _Keyval, remember it
; 1998 : 				if (this->_Isnil(_Hinode)
; 1999 : 						&& _DEBUG_LT_PRED(this->_Getcomp(), _Keyval,

	mov	eax, DWORD PTR __Hinode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN8@Eqrange
	push	2000					; 000007d0H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Key
	push	eax
	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$less@I@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@ABU?$less@I@std@@ABIABI@std@@YA_NABU?$less@I@0@ABI1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned int> const &,unsigned int const &,unsigned int const &>
	add	esp, 20					; 00000014H
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN8@Eqrange

; 2000 : 						this->_Key(_Pnode)))
; 2001 : 					_Hinode = _Pnode;	// _Pnode greater, remember it

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Hinode$[ebp], eax
$LN8@Eqrange:

; 2002 : 				_Lonode = _Pnode;

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Lonode$[ebp], eax

; 2003 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN7@Eqrange:

; 2004 : 				}

	jmp	$LN2@Eqrange
$LN3@Eqrange:

; 2005 : 
; 2006 : 		_Pnode = this->_Isnil(_Hinode) ? _Root()

	mov	eax, DWORD PTR __Hinode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN12@Eqrange
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Root
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv164[ebp], edx
	jmp	SHORT $LN13@Eqrange
$LN12@Eqrange:
	mov	eax, DWORD PTR __Hinode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv164[ebp], ecx
$LN13@Eqrange:
	mov	edx, DWORD PTR tv164[ebp]
	mov	DWORD PTR __Pnode$[ebp], edx
$LN4@Eqrange:

; 2007 : 			: this->_Left(_Hinode);	// continue scan for upper bound
; 2008 : 		while (!this->_Isnil(_Pnode))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN5@Eqrange

; 2009 : 			if (_DEBUG_LT_PRED(this->_Getcomp(), _Keyval, this->_Key(_Pnode)))

	push	2009					; 000007d9H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Key
	push	eax
	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$less@I@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@ABU?$less@I@std@@ABIABI@std@@YA_NABU?$less@I@0@ABI1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned int> const &,unsigned int const &,unsigned int const &>
	add	esp, 20					; 00000014H
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN9@Eqrange

; 2010 : 				{	// _Pnode greater than _Keyval, remember it
; 2011 : 				_Hinode = _Pnode;

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Hinode$[ebp], eax

; 2012 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 2013 : 				}
; 2014 : 			else

	jmp	SHORT $LN10@Eqrange
$LN9@Eqrange:

; 2015 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN10@Eqrange:
	jmp	SHORT $LN4@Eqrange
$LN5@Eqrange:

; 2016 : 
; 2017 : 		const_iterator _First = const_iterator(_Lonode, &this->_Get_data());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Get_data
	push	eax
	mov	eax, DWORD PTR __Lonode$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2018 : 		const_iterator _Last = const_iterator(_Hinode, &this->_Get_data());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Get_data
	push	eax
	mov	eax, DWORD PTR __Hinode$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 2019 : 		return (_Paircc(_First, _Last));

	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@0@Z ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > &,void,0>
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2020 : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN22@Eqrange
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 308				; 00000134H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN22@Eqrange:
	DD	2
	DD	$LN21@Eqrange
$LN21@Eqrange:
	DD	-76					; ffffffb4H
	DD	12					; 0000000cH
	DD	$LN18@Eqrange
	DD	-96					; ffffffa0H
	DD	12					; 0000000cH
	DD	$LN19@Eqrange
$LN19@Eqrange:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN18@Eqrange:
	DB	95					; 0000005fH
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Eqrange@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABI@Z$0:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Eqrange@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABI@Z$1:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Eqrange@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-312]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Eqrange@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Eqrange@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABI@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Eqrange<unsigned int>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??$_Eqrange@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABI@Z
_TEXT	SEGMENT
$T2 = -296						; size = 4
__Last$ = -92						; size = 12
__First$ = -72						; size = 12
__Ans$ = -52						; size = 24
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Eqrange@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABI@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Eqrange<unsigned int>, COMDAT
; _this$ = ecx

; 2024 : 		{	// find leftmost node not less than _Keyval

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Eqrange@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0

; 2025 : 		_Paircc _Ans(static_cast<const _Myt *>(this)->_Eqrange(_Keyval));

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ans$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Eqrange@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Eqrange<unsigned int>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2026 : 		iterator _First = iterator(_Ans.first._Ptr, &this->_Get_data());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Get_data
	push	eax
	mov	eax, DWORD PTR __Ans$[ebp+8]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 2027 : 		iterator _Last = iterator(_Ans.second._Ptr, &this->_Get_data());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Get_data
	push	eax
	mov	eax, DWORD PTR __Ans$[ebp+20]
	push	eax
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 2028 : 		return (_Pairii(_First, _Last));

	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@1@0@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > >::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > ><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > &,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > &,void,0>
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Ans$[ebp]
	call	??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2029 : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Eqrange
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN13@Eqrange:
	DD	3
	DD	$LN12@Eqrange
$LN12@Eqrange:
	DD	-52					; ffffffccH
	DD	24					; 00000018H
	DD	$LN8@Eqrange
	DD	-72					; ffffffb8H
	DD	12					; 0000000cH
	DD	$LN9@Eqrange
	DD	-92					; ffffffa4H
	DD	12					; 0000000cH
	DD	$LN10@Eqrange
$LN10@Eqrange:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN9@Eqrange:
	DB	95					; 0000005fH
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN8@Eqrange:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Eqrange@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABI@Z$0:
	lea	ecx, DWORD PTR __Ans$[ebp]
	jmp	??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ
__unwindfunclet$??$_Eqrange@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABI@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Eqrange@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABI@Z$2:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Eqrange@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-304]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Eqrange@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Eqrange@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABI@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Eqrange<unsigned int>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?pointer_to@?$pointer_traits@PAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@SAPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@AAU32@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@SAPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@AAU32@@Z PROC ; std::pointer_traits<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > *>::pointer_to, COMDAT

; 279  : 		{	// convert raw reference to pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 280  : 		return (_STD addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@YAPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@0@AAU10@@Z ; std::addressof<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >
	add	esp, 4

; 281  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?pointer_to@?$pointer_traits@PAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@SAPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@AAU32@@Z ENDP ; std::pointer_traits<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1><>, COMDAT
; _this$ = ecx

; 280  : 		{	// construct from forwarded values

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 279  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<unsigned char> >::_Wrap_alloc<std::allocator<unsigned char> >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@E@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<unsigned char> >::_Vector_val<std::_Simple_types<unsigned char> >

; 281  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$_Pocca@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@ABU10@@Z
_TEXT	SEGMENT
__Tag$ = -5						; size = 1
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocca@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@ABU10@@Z PROC ; std::_Pocca<std::_Wrap_alloc<std::allocator<unsigned char> > >, COMDAT

; 1043 : 	{	// (maybe) propagate on container copy assignment

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1044 : 	typename _Alty::propagate_on_container_copy_assignment _Tag;
; 1045 : 	_Pocca(_Left, _Right, _Tag);

	movzx	eax, BYTE PTR __Tag$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Left$[ebp]
	push	edx
	call	??$_Pocca@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@ABU10@U?$integral_constant@_N$0A@@0@@Z ; std::_Pocca<std::_Wrap_alloc<std::allocator<unsigned char> > >
	add	esp, 12					; 0000000cH

; 1046 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Pocca
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Pocca:
	DD	1
	DD	$LN4@Pocca
$LN4@Pocca:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@Pocca
$LN3@Pocca:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	97					; 00000061H
	DB	103					; 00000067H
	DB	0
??$_Pocca@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@ABU10@@Z ENDP ; std::_Pocca<std::_Wrap_alloc<std::allocator<unsigned char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0V?$allocator@E@std@@@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAE@$$QAV?$allocator@E@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??$?0V?$allocator@E@std@@@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAE@$$QAV?$allocator@E@1@@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned char> >::_Wrap_alloc<std::allocator<unsigned char> ><std::allocator<unsigned char> >, COMDAT
; _this$ = ecx

; 952  : 		{	// construct from a related allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 951  : 		: _Mybase(_STD forward<_Other>(_Right))

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@V?$allocator@E@std@@@std@@YA$$QAV?$allocator@E@0@AAV10@@Z ; std::forward<std::allocator<unsigned char> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@E@std@@QAE@ABV01@@Z	; std::allocator<unsigned char>::allocator<unsigned char>

; 953  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$allocator@E@std@@@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAE@$$QAV?$allocator@E@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned char> >::_Wrap_alloc<std::allocator<unsigned char> ><std::allocator<unsigned char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAE@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAE@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char *> >,std::_Vector_val<std::_Simple_types<unsigned char *> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char *> >,std::_Vector_val<std::_Simple_types<unsigned char *> >,1><>, COMDAT
; _this$ = ecx

; 280  : 		{	// construct from forwarded values

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 279  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<unsigned char *> >::_Wrap_alloc<std::allocator<unsigned char *> >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<unsigned char *> >::_Vector_val<std::_Simple_types<unsigned char *> >

; 281  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAE@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char *> >,std::_Vector_val<std::_Simple_types<unsigned char *> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char *> >,std::_Vector_val<std::_Simple_types<unsigned char *> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$_Pocma@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@0@Z
_TEXT	SEGMENT
__Tag$ = -5						; size = 1
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocma@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@0@Z PROC ; std::_Pocma<std::_Wrap_alloc<std::allocator<unsigned char *> > >, COMDAT

; 1062 : 	{	// (maybe) propagate on container move assignment

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1063 : 	typename _Alty::propagate_on_container_move_assignment _Tag;
; 1064 : 	_Pocma(_Left, _Right, _Tag);

	movzx	eax, BYTE PTR __Tag$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Left$[ebp]
	push	edx
	call	??$_Pocma@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@0U?$integral_constant@_N$00@0@@Z ; std::_Pocma<std::_Wrap_alloc<std::allocator<unsigned char *> > >
	add	esp, 12					; 0000000cH

; 1065 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Pocma
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Pocma:
	DD	1
	DD	$LN4@Pocma
$LN4@Pocma:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@Pocma
$LN3@Pocma:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	97					; 00000061H
	DB	103					; 00000067H
	DB	0
??$_Pocma@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@0@Z ENDP ; std::_Pocma<std::_Wrap_alloc<std::allocator<unsigned char *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_default_fill_n@PAEIV?$allocator@E@std@@@std@@YAXPAEIAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Uninitialized_default_fill_n@PAEIV?$allocator@E@std@@@std@@YAXPAEIAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z PROC ; std::_Uninitialized_default_fill_n<unsigned char *,unsigned int,std::allocator<unsigned char> >, COMDAT

; 479  : 	{	// value-initialize _Count objects to raw _First, using _Al

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 480  : 	typedef _Iter_value_t<_FwdIt> _Ty;
; 481  : 	_Uninitialized_default_fill_n1(_First, _Count, _Al,

	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninitialized_default_fill_n1@PAEIV?$allocator@E@std@@@std@@YAXPAEIAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U?$integral_constant@_N$00@0@@Z ; std::_Uninitialized_default_fill_n1<unsigned char *,unsigned int,std::allocator<unsigned char> >
	add	esp, 16					; 00000010H

; 482  : 		typename conjunction<
; 483  : 			is_pointer<_FwdIt>,
; 484  : 			is_scalar<_Ty>,
; 485  : 			negation<is_volatile<_Ty>>,
; 486  : 			negation<is_member_pointer<_Ty>>,
; 487  : 			_Uses_default_construct<_Alloc, decltype(_Unfancy(_First))>>::type());
; 488  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_default_fill_n@PAEIV?$allocator@E@std@@@std@@YAXPAEIAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z ENDP ; std::_Uninitialized_default_fill_n<unsigned char *,unsigned int,std::allocator<unsigned char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@@?$vector@EV?$allocator@E@std@@@std@@IAEPAEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@1@0PAE@Z
_TEXT	SEGMENT
tv66 = -268						; size = 4
tv142 = -264						; size = 4
tv139 = -260						; size = 4
tv145 = -256						; size = 4
$T2 = -248						; size = 4
$T3 = -236						; size = 4
$T4 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__Ptr$ = 32						; size = 4
??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@@?$vector@EV?$allocator@E@std@@@std@@IAEPAEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@1@0PAE@Z PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > > >, COMDAT
; _this$ = ecx

; 1651 : 		{	// copy initializing [_First, _Last), using allocator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@@?$vector@EV?$allocator@E@std@@@std@@IAEPAEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@1@0PAE@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 1652 : 		return (_Uninitialized_copy(_First, _Last,

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Getal
	push	eax
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv145[ebp], eax
	mov	eax, DWORD PTR tv145[ebp]
	mov	DWORD PTR tv139[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv142[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@PAEV?$allocator@E@2@@std@@YAPAEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@0@0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >,unsigned char *,std::allocator<unsigned char> >
	add	esp, 32					; 00000020H
	mov	DWORD PTR tv66[ebp], eax
	mov	eax, DWORD PTR tv66[ebp]
	mov	DWORD PTR $T4[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T4[ebp]

; 1653 : 			_Ptr, this->_Getal()));
; 1654 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@@?$vector@EV?$allocator@E@std@@@std@@IAEPAEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@1@0PAE@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@@?$vector@EV?$allocator@E@std@@@std@@IAEPAEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@1@0PAE@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@@?$vector@EV?$allocator@E@std@@@std@@IAEPAEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@1@0PAE@Z$2:
	mov	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@@?$vector@EV?$allocator@E@std@@@std@@IAEPAEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@1@0PAE@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@@?$vector@EV?$allocator@E@std@@@std@@IAEPAEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@1@0PAE@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@@?$vector@EV?$allocator@E@std@@@std@@IAEPAEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@1@0PAE@Z ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@EHPBEABEU_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Urandom_access_iterator_tag@std@@EHPBEABEU_Iterator_base12@2@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QBEPBEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QBEPBEXZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >::_Unchecked, COMDAT
; _this$ = ecx

; 60   : 		{	// make an unchecked iterator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 61   : 		return (_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]

; 62   : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QBEPBEXZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >::_Unchecked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@PAEPBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@PAEPBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >, COMDAT
; _this$ = ecx

; 47   : 		{	// construct with pointer _Parg

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@PAEPBU_Container_base12@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@EHPBEABEU_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 46   : 		: _Ptr(_Parg)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 48   : 		this->_Adopt(_Pvector);

	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 49   : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@PAEPBU_Container_base12@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@EHPBEABEU_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@PAEPBU_Container_base12@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@PAEPBU_Container_base12@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@PAEPBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@EHPBEABEU_Iterator_base12@2@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@EHPBEABEU_Iterator_base12@2@@std@@QAE@ABU01@@Z PROC ; std::_Iterator012<std::random_access_iterator_tag,unsigned char,int,unsigned char const *,unsigned char const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,unsigned char,int,unsigned char const *,unsigned char const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@EHPBEABEU_Iterator_base12@2@@std@@QAE@ABU01@@Z ENDP ; std::_Iterator012<std::random_access_iterator_tag,unsigned char,int,unsigned char const *,unsigned char const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,unsigned char,int,unsigned char const *,unsigned char const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@EHPBEABEU_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Iterator012@Urandom_access_iterator_tag@std@@EHPBEABEU_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,unsigned char,int,unsigned char const *,unsigned char const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,unsigned char,int,unsigned char const *,unsigned char const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Iterator012@Urandom_access_iterator_tag@std@@EHPBEABEU_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,unsigned char,int,unsigned char const *,unsigned char const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,unsigned char,int,unsigned char const *,unsigned char const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@EHPBEABEU_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@EHPBEABEU_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,unsigned char,int,unsigned char const *,unsigned char const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,unsigned char,int,unsigned char const *,unsigned char const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator012@Urandom_access_iterator_tag@std@@EHPBEABEU_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,unsigned char,int,unsigned char const *,unsigned char const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,unsigned char,int,unsigned char const *,unsigned char const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@E@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@E@std@@@1@@Z
_TEXT	SEGMENT
$T2 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
??$?0U?$_Wrap_alloc@V?$allocator@E@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@E@std@@@1@@Z PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > ><std::_Wrap_alloc<std::allocator<unsigned char> >,void>, COMDAT
; _this$ = ecx

; 553  : 		{	// construct allocator from _Al

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0U?$_Wrap_alloc@V?$allocator@E@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@E@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 551  : 		: _Mypair(_One_then_variadic_args_t(),

	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$forward@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@E@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<unsigned char> > >
	add	esp, 4
	push	eax
	movzx	ecx, BYTE PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0U?$_Wrap_alloc@V?$allocator@E@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@E@std@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1><std::_Wrap_alloc<std::allocator<unsigned char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 554  : 		_Alloc_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Alloc_proxy

; 555  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0U?$_Wrap_alloc@V?$allocator@E@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@E@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QAE@XZ
__ehhandler$??$?0U?$_Wrap_alloc@V?$allocator@E@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@E@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0U?$_Wrap_alloc@V?$allocator@E@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@E@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0U?$_Wrap_alloc@V?$allocator@E@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@E@std@@@1@@Z ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > ><std::_Wrap_alloc<std::allocator<unsigned char> >,void>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??$_Ucopy@PAE@?$vector@EV?$allocator@E@std@@@std@@IAEPAEPAE00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Ucopy@PAE@?$vector@EV?$allocator@E@std@@@std@@IAEPAEPAE00@Z PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::_Ucopy<unsigned char *>, COMDAT
; _this$ = ecx

; 1651 : 		{	// copy initializing [_First, _Last), using allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1652 : 		return (_Uninitialized_copy(_First, _Last,

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Getal
	push	eax
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Uninitialized_copy@PAEPAEV?$allocator@E@std@@@std@@YAPAEPAE00AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z ; std::_Uninitialized_copy<unsigned char *,unsigned char *,std::allocator<unsigned char> >
	add	esp, 16					; 00000010H

; 1653 : 			_Ptr, this->_Getal()));
; 1654 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Ucopy@PAE@?$vector@EV?$allocator@E@std@@@std@@IAEPAEPAE00@Z ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::_Ucopy<unsigned char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Copy_unchecked@PAEPAE@std@@YAPAEPAE00@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
$T2 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_unchecked@PAEPAE@std@@YAPAEPAE00@Z PROC	; std::_Copy_unchecked<unsigned char *,unsigned char *>, COMDAT

; 2332 : 	{	// copy [_First, _Last) to [_Dest, ...)

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 2333 : 		// note: _Copy_unchecked is called directly elsewhere in the STL
; 2334 : 	return (_Copy_unchecked1(_First, _Last,

	lea	eax, DWORD PTR __Dest$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	call	??$_Ptr_copy_cat@EE@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAE0@Z ; std::_Ptr_copy_cat<unsigned char,unsigned char>
	add	esp, 12					; 0000000cH
	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Copy_unchecked1@PAEPAE@std@@YAPAEPAE00U_Trivially_copyable_ptr_iterator_tag@0@@Z ; std::_Copy_unchecked1<unsigned char *,unsigned char *>
	add	esp, 16					; 00000010H

; 2335 : 		_Dest, _Ptr_copy_cat(_First, _Dest)));
; 2336 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Copy_unchecked@PAEPAE@std@@YAPAEPAE00@Z ENDP	; std::_Copy_unchecked<unsigned char *,unsigned char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?9V?$allocator@E@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@E@std@@@0@0@Z
_TEXT	SEGMENT
tv69 = -196						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?9V?$allocator@E@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@E@std@@@0@0@Z PROC ; std::operator!=<std::allocator<unsigned char>,std::allocator<unsigned char> >, COMDAT

; 1025 : 	{	// test for allocator inequality

	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1026 : 	return (!(_Left == _Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$?8V?$allocator@E@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@E@std@@@0@0@Z ; std::operator==<std::allocator<unsigned char>,std::allocator<unsigned char> >
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 1027 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?9V?$allocator@E@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@E@std@@@0@0@Z ENDP ; std::operator!=<std::allocator<unsigned char>,std::allocator<unsigned char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@XZ PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool>::~pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@XZ ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool>::~pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\map
;	COMDAT ??$try_emplace@$$V@?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABQAE@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$try_emplace@$$V@?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABQAE@Z PROC ; std::map<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::try_emplace<>, COMDAT
; _this$ = ecx

; 228  : 		{	// fail if _Keyval present, else emplace

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 229  : 		return (_Try_emplace(_Keyval, _STD forward<_Mappedty>(_Mapval)...));

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Try_emplace@ABQAE$$V@?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABQAE@Z ; std::map<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Try_emplace<unsigned char * const &>
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 230  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$try_emplace@$$V@?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABQAE@Z ENDP ; std::map<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::try_emplace<>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
tv66 = -280						; size = 4
tv141 = -276						; size = 4
tv138 = -272						; size = 4
tv144 = -268						; size = 4
$T2 = -260						; size = 4
$T3 = -248						; size = 4
$T4 = -233						; size = 1
$T5 = -221						; size = 1
$T6 = -212						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0@Z PROC ; std::distance<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >, COMDAT

; 1125 : 	{	// return distance between iterators

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 1126 : 	return (_Distance1(_First, _Last, _Iter_cat_t<_InIt>()));

	xor	eax, eax
	mov	BYTE PTR $T5[ebp], al
	movzx	ecx, BYTE PTR $T4[ebp]
	push	ecx
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv144[ebp], eax
	mov	eax, DWORD PTR tv144[ebp]
	mov	DWORD PTR tv138[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv141[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z ; std::_Distance1<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >
	add	esp, 28					; 0000001cH
	mov	DWORD PTR tv66[ebp], eax
	mov	eax, DWORD PTR tv66[ebp]
	mov	DWORD PTR $T6[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T6[ebp]

; 1127 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0@Z$2:
	mov	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-284]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0@Z ENDP ; std::distance<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >::~pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >::~pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z
_TEXT	SEGMENT
tv79 = -194						; size = 1
tv80 = -193						; size = 1
__Pred$ = 8						; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
__File$ = 20						; size = 4
__Line$ = 24						; size = 4
??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z PROC ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>, COMDAT

; 895  : 	{	// test if _Pred(_Left, _Right) and _Pred is strict weak ordering

	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 896  : 	return (!_Pred(_Left, _Right)

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Pred$[ebp]
	call	??R?$less@PAE@std@@QBE_NABQAE0@Z	; std::less<unsigned char *>::operator()
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN5@Debug_lt_p
	mov	BYTE PTR tv80[ebp], 0
	jmp	SHORT $LN6@Debug_lt_p
$LN5@Debug_lt_p:
	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Pred$[ebp]
	call	??R?$less@PAE@std@@QBE_NABQAE0@Z	; std::less<unsigned char *>::operator()
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@Debug_lt_p
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CG@LEJCKCBB@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
	mov	BYTE PTR tv79[ebp], 1
	jmp	SHORT $LN4@Debug_lt_p
$LN3@Debug_lt_p:
	mov	BYTE PTR tv79[ebp], 1
$LN4@Debug_lt_p:
	mov	dl, BYTE PTR tv79[ebp]
	mov	BYTE PTR tv80[ebp], dl
$LN6@Debug_lt_p:
	mov	al, BYTE PTR tv80[ebp]

; 897  : 		? false
; 898  : 		: _Pred(_Right, _Left)
; 899  : 			? (_DEBUG_ERROR2("invalid comparator", _File, _Line), true)
; 900  : 			: true);
; 901  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z ENDP ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@std@@QAE@XZ PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool>::~pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@std@@QAE@XZ ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool>::~pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,bool>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\map
;	COMDAT ??$try_emplace@$$V@?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@ABQAE@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$try_emplace@$$V@?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@ABQAE@Z PROC ; std::map<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> > >::try_emplace<>, COMDAT
; _this$ = ecx

; 228  : 		{	// fail if _Keyval present, else emplace

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 229  : 		return (_Try_emplace(_Keyval, _STD forward<_Mappedty>(_Mapval)...));

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Try_emplace@ABQAE$$V@?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@ABQAE@Z ; std::map<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> > >::_Try_emplace<unsigned char * const &>
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 230  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$try_emplace@$$V@?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@ABQAE@Z ENDP ; std::map<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> > >::try_emplace<>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
tv66 = -280						; size = 4
tv141 = -276						; size = 4
tv138 = -272						; size = 4
tv144 = -268						; size = 4
$T2 = -260						; size = 4
$T3 = -248						; size = 4
$T4 = -233						; size = 1
$T5 = -221						; size = 1
$T6 = -212						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@0@Z PROC ; std::distance<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > >, COMDAT

; 1125 : 	{	// return distance between iterators

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 1126 : 	return (_Distance1(_First, _Last, _Iter_cat_t<_InIt>()));

	xor	eax, eax
	mov	BYTE PTR $T5[ebp], al
	movzx	ecx, BYTE PTR $T4[ebp]
	push	ecx
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv144[ebp], eax
	mov	eax, DWORD PTR tv144[ebp]
	mov	DWORD PTR tv138[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv141[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z ; std::_Distance1<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > >
	add	esp, 28					; 0000001cH
	mov	DWORD PTR tv66[ebp], eax
	mov	eax, DWORD PTR tv66[ebp]
	mov	DWORD PTR $T6[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T6[ebp]

; 1127 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@0@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@0@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@0@Z$2:
	mov	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-284]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@0@Z ENDP ; std::distance<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > >::~pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > >::~pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@YA$$QAV?$vector@PAEV?$allocator@PAE@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@YA$$QAV?$vector@PAEV?$allocator@PAE@std@@@0@AAV10@@Z PROC ; std::forward<std::vector<unsigned char *,std::allocator<unsigned char *> > >, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1277 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@V?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@YA$$QAV?$vector@PAEV?$allocator@PAE@std@@@0@AAV10@@Z ENDP ; std::forward<std::vector<unsigned char *,std::allocator<unsigned char *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?9V?$allocator@PAE@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@0@Z
_TEXT	SEGMENT
tv69 = -196						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?9V?$allocator@PAE@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@0@Z PROC ; std::operator!=<std::allocator<unsigned char *>,std::allocator<unsigned char *> >, COMDAT

; 1025 : 	{	// test for allocator inequality

	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1026 : 	return (!(_Left == _Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$?8V?$allocator@PAE@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@0@Z ; std::operator==<std::allocator<unsigned char *>,std::allocator<unsigned char *> >
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 1027 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?9V?$allocator@PAE@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@0@Z ENDP ; std::operator!=<std::allocator<unsigned char *>,std::allocator<unsigned char *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PAEABQAE@?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QAEXPAPAEABQAE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAEABQAE@?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QAEXPAPAEABQAE@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned char *> >::construct<unsigned char *,unsigned char * const &>, COMDAT
; _this$ = ecx

; 994  : 		{	// construct _Ty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 995  : 		_Mytraits::construct(*this, _Ptr,

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABQAE@std@@YAABQAEABQAE@Z	; std::forward<unsigned char * const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PAEABQAE@?$allocator_traits@V?$allocator@PAE@std@@@std@@SAXAAV?$allocator@PAE@1@PAPAEABQAE@Z ; std::allocator_traits<std::allocator<unsigned char *> >::construct<unsigned char *,unsigned char * const &>
	add	esp, 12					; 0000000cH

; 996  : 			_STD forward<_Types>(_Args)...);
; 997  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PAEABQAE@?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QAEXPAPAEABQAE@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned char *> >::construct<unsigned char *,unsigned char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PAEAAPAE@?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QAEXPAPAEAAPAE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAEAAPAE@?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QAEXPAPAEAAPAE@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned char *> >::construct<unsigned char *,unsigned char * &>, COMDAT
; _this$ = ecx

; 994  : 		{	// construct _Ty(_Types...) at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 995  : 		_Mytraits::construct(*this, _Ptr,

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAE@std@@YAAAPAEAAPAE@Z	; std::forward<unsigned char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PAEAAPAE@?$allocator_traits@V?$allocator@PAE@std@@@std@@SAXAAV?$allocator@PAE@1@PAPAEAAPAE@Z ; std::allocator_traits<std::allocator<unsigned char *> >::construct<unsigned char *,unsigned char * &>
	add	esp, 12					; 0000000cH

; 996  : 			_STD forward<_Types>(_Args)...);
; 997  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PAEAAPAE@?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QAEXPAPAEAAPAE@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned char *> >::construct<unsigned char *,unsigned char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Unfancy@PAE@std@@YAPAPAEPAPAE@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@PAE@std@@YAPAPAEPAPAE@Z PROC		; std::_Unfancy<unsigned char *>, COMDAT

; 739  : 	{	// do nothing for plain pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 740  : 	return (_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]

; 741  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unfancy@PAE@std@@YAPAPAEPAPAE@Z ENDP		; std::_Unfancy<unsigned char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@QAE@std@@YAPBQAEABQAE@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@QAE@std@@YAPBQAEABQAE@Z PROC		; std::addressof<unsigned char * const>, COMDAT

; 724  : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 725  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 726  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@QAE@std@@YAPBQAEABQAE@Z ENDP		; std::addressof<unsigned char * const>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Move_unchecked@PAPAEPAPAE@std@@YAPAPAEPAPAE00@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
$T2 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move_unchecked@PAPAEPAPAE@std@@YAPAPAEPAPAE00@Z PROC ; std::_Move_unchecked<unsigned char * *,unsigned char * *>, COMDAT

; 2597 : 	{	// move [_First, _Last) to [_Dest, ...), choose optimization

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 2598 : 	return (_Move_unchecked1(_First, _Last,

	lea	eax, DWORD PTR __Dest$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	call	??$_Ptr_move_cat@PAEPAE@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAPAE0@Z ; std::_Ptr_move_cat<unsigned char *,unsigned char *>
	add	esp, 12					; 0000000cH
	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Move_unchecked1@PAPAEPAPAE@std@@YAPAPAEPAPAE00U_Trivially_copyable_ptr_iterator_tag@0@@Z ; std::_Move_unchecked1<unsigned char * *,unsigned char * *>
	add	esp, 16					; 00000010H

; 2599 : 		_Dest, _Ptr_move_cat(_First, _Dest)));
; 2600 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Move_unchecked@PAPAEPAPAE@std@@YAPAPAEPAPAE00@Z ENDP ; std::_Move_unchecked<unsigned char * *,unsigned char * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@XZ PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool>::~pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@XZ ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool>::~pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,bool>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\map
;	COMDAT ??$try_emplace@$$V@?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABI@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$try_emplace@$$V@?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABI@Z PROC ; std::map<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::try_emplace<>, COMDAT
; _this$ = ecx

; 228  : 		{	// fail if _Keyval present, else emplace

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 229  : 		return (_Try_emplace(_Keyval, _STD forward<_Mappedty>(_Mapval)...));

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Try_emplace@ABI$$V@?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABI@Z ; std::map<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Try_emplace<unsigned int const &>
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 230  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$try_emplace@$$V@?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABI@Z ENDP ; std::map<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::try_emplace<>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
tv66 = -280						; size = 4
tv141 = -276						; size = 4
tv138 = -272						; size = 4
tv144 = -268						; size = 4
$T2 = -260						; size = 4
$T3 = -248						; size = 4
$T4 = -233						; size = 1
$T5 = -221						; size = 1
$T6 = -212						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@0@Z PROC ; std::distance<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > >, COMDAT

; 1125 : 	{	// return distance between iterators

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 1126 : 	return (_Distance1(_First, _Last, _Iter_cat_t<_InIt>()));

	xor	eax, eax
	mov	BYTE PTR $T5[ebp], al
	movzx	ecx, BYTE PTR $T4[ebp]
	push	ecx
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv144[ebp], eax
	mov	eax, DWORD PTR tv144[ebp]
	mov	DWORD PTR tv138[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv141[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z ; std::_Distance1<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > >
	add	esp, 28					; 0000001cH
	mov	DWORD PTR tv66[ebp], eax
	mov	eax, DWORD PTR tv66[ebp]
	mov	DWORD PTR $T6[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T6[ebp]

; 1127 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@0@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@0@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@0@Z$2:
	mov	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-284]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@0@Z ENDP ; std::distance<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > >::~pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > >::~pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Debug_lt_pred@AAU?$less@I@std@@ABIABI@std@@YA_NAAU?$less@I@0@ABI1PB_WI@Z
_TEXT	SEGMENT
tv79 = -194						; size = 1
tv80 = -193						; size = 1
__Pred$ = 8						; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
__File$ = 20						; size = 4
__Line$ = 24						; size = 4
??$_Debug_lt_pred@AAU?$less@I@std@@ABIABI@std@@YA_NAAU?$less@I@0@ABI1PB_WI@Z PROC ; std::_Debug_lt_pred<std::less<unsigned int> &,unsigned int const &,unsigned int const &>, COMDAT

; 895  : 	{	// test if _Pred(_Left, _Right) and _Pred is strict weak ordering

	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 896  : 	return (!_Pred(_Left, _Right)

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Pred$[ebp]
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN5@Debug_lt_p
	mov	BYTE PTR tv80[ebp], 0
	jmp	SHORT $LN6@Debug_lt_p
$LN5@Debug_lt_p:
	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Pred$[ebp]
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@Debug_lt_p
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CG@LEJCKCBB@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
	mov	BYTE PTR tv79[ebp], 1
	jmp	SHORT $LN4@Debug_lt_p
$LN3@Debug_lt_p:
	mov	BYTE PTR tv79[ebp], 1
$LN4@Debug_lt_p:
	mov	dl, BYTE PTR tv79[ebp]
	mov	BYTE PTR tv80[ebp], dl
$LN6@Debug_lt_p:
	mov	al, BYTE PTR tv80[ebp]

; 897  : 		? false
; 898  : 		: _Pred(_Right, _Left)
; 899  : 			? (_DEBUG_ERROR2("invalid comparator", _File, _Line), true)
; 900  : 			: true);
; 901  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_lt_pred@AAU?$less@I@std@@ABIABI@std@@YA_NAAU?$less@I@0@ABI1PB_WI@Z ENDP ; std::_Debug_lt_pred<std::less<unsigned int> &,unsigned int const &,unsigned int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::~_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::~_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator--, COMDAT
; _this$ = ecx

; 424  : 		{	// predecrement

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 425  : 		--static_cast<_Mybase&>(*this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator--

; 426  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 427  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator--
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator++, COMDAT
; _this$ = ecx

; 411  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 412  : 		++static_cast<_Mybase&>(*this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator++

; 413  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 414  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBEPAU?$pair@QAEI@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBEPAU?$pair@QAEI@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator->, COMDAT
; _this$ = ecx

; 406  : 		{	// return pointer to class object

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 407  : 		return (pointer_traits<pointer>::pointer_to(**this));

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBEAAU?$pair@QAEI@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator*
	push	eax
	call	?pointer_to@?$pointer_traits@PAU?$pair@QAEI@std@@@std@@SAPAU?$pair@QAEI@2@AAU32@@Z ; std::pointer_traits<std::pair<unsigned char * const,unsigned int> *>::pointer_to
	add	esp, 4

; 408  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBEPAU?$pair@QAEI@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBEAAU?$pair@QAEI@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBEAAU?$pair@QAEI@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator*, COMDAT
; _this$ = ecx

; 401  : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 		return ((reference)**(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBEABU?$pair@QAEI@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator*

; 403  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBEAAU?$pair@QAEI@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@1@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >, COMDAT
; _this$ = ecx

; 384  : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 383  : 		: _Mybase(_Pnode, _Plist)

	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >

; 385  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@1@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm
;	COMDAT ??$remove@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@PAE@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@V10@0ABQAE@Z
_TEXT	SEGMENT
tv130 = -284						; size = 4
tv184 = -280						; size = 4
tv183 = -276						; size = 4
tv176 = -276						; size = 4
tv180 = -272						; size = 4
tv173 = -272						; size = 4
tv179 = -268						; size = 4
tv128 = -268						; size = 4
$T2 = -260						; size = 4
$T3 = -248						; size = 4
$T4 = -236						; size = 4
$T5 = -224						; size = 4
$T6 = -212						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 12
__Last$ = 24						; size = 12
__Val$ = 36						; size = 4
??$remove@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@PAE@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@V10@0ABQAE@Z PROC ; std::remove<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >,unsigned char *>, COMDAT

; 1464 : 	{	// remove each matching _Val

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$remove@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@PAE@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@V10@0ABQAE@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 272				; 00000110H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-284]
	mov	ecx, 68					; 00000044H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 1465 : 	_DEBUG_RANGE(_First, _Last);

	push	1465					; 000005b9H
	push	OFFSET ??_C@_1JC@ELNBGKIG@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T6[ebp], esp
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv128[ebp], eax
	mov	ecx, DWORD PTR tv128[ebp]
	mov	DWORD PTR tv173[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T5[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv176[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	??$_Debug_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@0PB_WI@Z ; std::_Debug_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > > >
	add	esp, 32					; 00000020H

; 1466 : 	return (_Rechecked(_First,

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T4[ebp], esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv179[ebp], eax
	call	??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@YAPAPAEV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<std::_Simple_types<unsigned char *> > >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv180[ebp], eax
	mov	eax, DWORD PTR tv180[ebp]
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv183[ebp], eax
	call	??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@YAPAPAEV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<std::_Simple_types<unsigned char *> > >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv184[ebp], eax
	mov	eax, DWORD PTR tv184[ebp]
	push	eax
	call	??$_Remove_unchecked@PAPAEPAE@std@@YAPAPAEPAPAE0ABQAE@Z ; std::_Remove_unchecked<unsigned char * *,unsigned char *>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv130[ebp], eax
	mov	ecx, DWORD PTR tv130[ebp]
	push	ecx
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Rechecked@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@YAAAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@AAV10@PAPAE@Z ; std::_Rechecked<std::_Vector_val<std::_Simple_types<unsigned char *> > >
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1467 : 		_Remove_unchecked(_Unchecked(_First), _Unchecked(_Last), _Val)));
; 1468 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 284				; 0000011cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$remove@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@PAE@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@V10@0ABQAE@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$remove@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@PAE@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@V10@0ABQAE@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$remove@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@PAE@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@V10@0ABQAE@Z$2:
	mov	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
__ehhandler$??$remove@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@PAE@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@V10@0ABQAE@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-288]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$remove@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@PAE@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@V10@0ABQAE@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$remove@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@PAE@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@V10@0ABQAE@Z ENDP ; std::remove<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >,unsigned char *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::operator++, COMDAT
; _this$ = ecx

; 340  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 341  : 		++*(_Mybase *)this;

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::operator++

; 342  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 343  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBEAAPAEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBEAAPAEXZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::operator*, COMDAT
; _this$ = ecx

; 330  : 		{	// return designated object

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 331  : 		return ((reference)**(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBEABQAEXZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::operator*

; 332  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBEAAPAEXZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Unchecked@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBEPAPAEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Unchecked@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBEPAPAEXZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::_Unchecked, COMDAT
; _this$ = ecx

; 325  : 		{	// make an unchecked iterator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 326  : 		return (this->_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]

; 327  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unchecked@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBEPAPAEXZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::_Unchecked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Rechecked@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAEAAV12@PAPAE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?_Rechecked@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAEAAV12@PAPAE@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::_Rechecked, COMDAT
; _this$ = ecx

; 319  : 		{	// reset from unchecked iterator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 320  : 		this->_Ptr = _Right;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 321  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 322  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?_Rechecked@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAEAAV12@PAPAE@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::_Rechecked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@PAPAEPBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@PAPAEPBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >, COMDAT
; _this$ = ecx

; 313  : 		{	// construct with pointer _Parg

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 312  : 		: _Mybase(_Parg, _Pvector)

	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@PAPAEPBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >

; 314  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@PAPAEPBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAEHPBQAEABQAEU_Iterator_base12@2@@std@@QAE@$$QAU01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAEHPBQAEABQAEU_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAEHPBQAEABQAEU_Iterator_base12@2@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::_Compat, COMDAT
; _this$ = ecx

; 245  : 		{	// test for compatible iterator pair

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 246  : 		if (this->_Getcont() != _Right._Getcont())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	esi, eax
	je	SHORT $LN1@Compat

; 247  : 			{
; 248  : 			_DEBUG_ERROR("vector iterators incompatible");

	push	248					; 000000f8H
	push	OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 249  : 			_SCL_SECURE_INVALID_ARGUMENT;

	mov	eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
	test	eax, eax
	je	SHORT $LN4@Compat
	xor	ecx, ecx
	jne	SHORT $LN5@Compat
$LN4@Compat:
	push	OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	249					; 000000f9H
	push	OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN5@Compat
	int	3
$LN5@Compat:
	push	0
	push	249					; 000000f9H
	push	OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1NG@JPNIJBOB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN1@Compat:

; 250  : 			}
; 251  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??M?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??M?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::operator<, COMDAT
; _this$ = ecx

; 223  : 		{	// test if this < _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 224  : 		_Compat(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::_Compat

; 225  : 		return (_Ptr < _Right._Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jae	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 226  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??M?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::operator<
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::operator!=, COMDAT
; _this$ = ecx

; 218  : 		{	// test for iterator inequality

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 219  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 220  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::operator==, COMDAT
; _this$ = ecx

; 212  : 		{	// test for iterator equality

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 213  : 		_Compat(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::_Compat

; 214  : 		return (_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 215  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Mycont$ = -20						; size = 4
_this$ = -8						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::operator++, COMDAT
; _this$ = ecx

; 95   : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 96   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 97   : 		const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	DWORD PTR __Mycont$[ebp], eax

; 98   : 		if (_Mycont == 0
; 99   : 			|| _Ptr == nullptr_t{}
; 100  : 			|| _Mycont->_Mylast <= _Ptr)

	cmp	DWORD PTR __Mycont$[ebp], 0
	je	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN3@operator
	mov	eax, DWORD PTR __Mycont$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	ja	SHORT $LN2@operator
$LN3@operator:

; 101  : 			{	// report error
; 102  : 			_DEBUG_ERROR("vector iterator not incrementable");

	push	102					; 00000066H
	push	OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 103  : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	103					; 00000067H
	push	OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	push	0
	push	103					; 00000067H
	push	OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1NO@HLNMIEPK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator:

; 104  : 			}
; 105  : 
; 106  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 107  : 		_SCL_SECURE_VALIDATE(_Ptr != _Tptr());
; 108  : 		const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());
; 109  : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 110  : 		_SCL_SECURE_VALIDATE_RANGE(_Ptr < _Mycont->_Mylast);
; 111  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 112  : 
; 113  : 		++_Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 114  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 115  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBEABQAEXZ
_TEXT	SEGMENT
__Mycont$ = -20						; size = 4
_this$ = -8						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBEABQAEXZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::operator*, COMDAT
; _this$ = ecx

; 65   : 		{	// return designated object

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 66   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 67   : 		const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	DWORD PTR __Mycont$[ebp], eax

; 68   : 		if (_Mycont == 0
; 69   : 			|| _Ptr == _Tptr()
; 70   : 			|| _Ptr < _Mycont->_Myfirst
; 71   : 			|| _Mycont->_Mylast <= _Ptr)

	cmp	DWORD PTR __Mycont$[ebp], 0
	je	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Mycont$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	jb	SHORT $LN3@operator
	mov	eax, DWORD PTR __Mycont$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	ja	SHORT $LN2@operator
$LN3@operator:

; 72   : 			{	// report error
; 73   : 			_DEBUG_ERROR("vector iterator not dereferencable");

	push	73					; 00000049H
	push	OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 74   : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	74					; 0000004aH
	push	OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	push	0
	push	74					; 0000004aH
	push	OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1NM@LMHMLLBJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator:

; 75   : 			}
; 76   : 
; 77   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 78   : 		_SCL_SECURE_VALIDATE(_Ptr != _Tptr());
; 79   : 		const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());
; 80   : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 81   : 		_SCL_SECURE_VALIDATE_RANGE(_Mycont->_Myfirst <= _Ptr && _Ptr < _Mycont->_Mylast);
; 82   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 83   : 
; 84   : 		_Analysis_assume_(_Ptr != _Tptr());
; 85   : 
; 86   : 		return (*_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]

; 87   : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBEABQAEXZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@PAPAEPBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@PAPAEPBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >, COMDAT
; _this$ = ecx

; 47   : 		{	// construct with pointer _Parg

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@PAPAEPBU_Container_base12@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAEHPBQAEABQAEU_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 46   : 		: _Ptr(_Parg)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 48   : 		this->_Adopt(_Pvector);

	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 49   : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@PAPAEPBU_Container_base12@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAEHPBQAEABQAEU_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@PAPAEPBU_Container_base12@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@PAPAEPBU_Container_base12@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@PAPAEPBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAEHPBQAEABQAEU_Iterator_base12@2@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAEHPBQAEABQAEU_Iterator_base12@2@@std@@QAE@$$QAU01@@Z PROC ; std::_Iterator012<std::random_access_iterator_tag,unsigned char *,int,unsigned char * const *,unsigned char * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,unsigned char *,int,unsigned char * const *,unsigned char * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAEHPBQAEABQAEU_Iterator_base12@2@@std@@QAE@$$QAU01@@Z ENDP ; std::_Iterator012<std::random_access_iterator_tag,unsigned char *,int,unsigned char * const *,unsigned char * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,unsigned char *,int,unsigned char * const *,unsigned char * const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAEHPBQAEABQAEU_Iterator_base12@2@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAEHPBQAEABQAEU_Iterator_base12@2@@std@@QAE@ABU01@@Z PROC ; std::_Iterator012<std::random_access_iterator_tag,unsigned char *,int,unsigned char * const *,unsigned char * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,unsigned char *,int,unsigned char * const *,unsigned char * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAEHPBQAEABQAEU_Iterator_base12@2@@std@@QAE@ABU01@@Z ENDP ; std::_Iterator012<std::random_access_iterator_tag,unsigned char *,int,unsigned char * const *,unsigned char * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,unsigned char *,int,unsigned char * const *,unsigned char * const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAEHPBQAEABQAEU_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAEHPBQAEABQAEU_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,unsigned char *,int,unsigned char * const *,unsigned char * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,unsigned char *,int,unsigned char * const *,unsigned char * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAEHPBQAEABQAEU_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,unsigned char *,int,unsigned char * const *,unsigned char * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,unsigned char *,int,unsigned char * const *,unsigned char * const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAEHPBQAEABQAEU_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAEHPBQAEABQAEU_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,unsigned char *,int,unsigned char * const *,unsigned char * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,unsigned char *,int,unsigned char * const *,unsigned char * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAEHPBQAEABQAEU_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,unsigned char *,int,unsigned char * const *,unsigned char * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,unsigned char *,int,unsigned char * const *,unsigned char * const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::~_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::~_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator!=, COMDAT
; _this$ = ecx

; 340  : 		{	// test for iterator inequality

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 341  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 342  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv139 = -208						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator==, COMDAT
; _this$ = ecx

; 324  : 		{	// test for iterator equality

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 325  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 326  : 		if (this->_Getcont() != _Right._Getcont())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	esi, eax
	je	SHORT $LN2@operator

; 327  : 			{	// report error
; 328  : 			_DEBUG_ERROR("map/set iterators incompatible");

	push	328					; 00000148H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DO@CFEEPGGJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 329  : 			_SCL_SECURE_INVALID_ARGUMENT;

	mov	eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
	test	eax, eax
	je	SHORT $LN4@operator
	xor	ecx, ecx
	jne	SHORT $LN5@operator
$LN4@operator:
	push	OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	329					; 00000149H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN5@operator
	int	3
$LN5@operator:
	push	0
	push	329					; 00000149H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BCM@JEGMNCCB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator:

; 330  : 			}
; 331  : 
; 332  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 333  : 		_SCL_SECURE_VALIDATE(this->_Getcont() == _Right._Getcont());
; 334  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 335  : 
; 336  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN6@operator
	mov	DWORD PTR tv139[ebp], 1
	jmp	SHORT $LN7@operator
$LN6@operator:
	mov	DWORD PTR tv139[ebp], 0
$LN7@operator:
	mov	al, BYTE PTR tv139[ebp]

; 337  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Ptrsav$ = -20						; size = 4
_this$ = -8						; size = 4
??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator--, COMDAT
; _this$ = ecx

; 285  : 		{	// predecrement

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 286  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 287  : 		if (this->_Getcont() == 0
; 288  : 			|| this->_Ptr == nullptr_t{})

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@operator
$LN3@operator:

; 289  : 			{	// report error
; 290  : 			_DEBUG_ERROR("map/set iterator not decrementable");

	push	290					; 00000122H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@OKCGOALM@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 291  : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN6@operator
	xor	ecx, ecx
	jne	SHORT $LN7@operator
$LN6@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	291					; 00000123H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN7@operator
	int	3
$LN7@operator:
	push	0
	push	291					; 00000123H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BCM@MHKDIHCF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator:

; 292  : 			}
; 293  : 
; 294  : 		_Nodeptr _Ptrsav = this->_Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR __Ptrsav$[ebp], ecx

; 295  : 		--static_cast<_Mybase&>(*this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::operator--

; 296  : 		if (_Ptrsav == this->_Ptr)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptrsav$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN4@operator

; 297  : 			{	// report error
; 298  : 			_DEBUG_ERROR("map/set iterator not decrementable");

	push	298					; 0000012aH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@OKCGOALM@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 299  : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN8@operator
	xor	ecx, ecx
	jne	SHORT $LN9@operator
$LN8@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	299					; 0000012bH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN9@operator
	int	3
$LN9@operator:
	push	0
	push	299					; 0000012bH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BCM@MHKDIHCF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN4@operator:

; 300  : 			}
; 301  : 
; 302  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 303  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != nullptr_t{});
; 304  : 
; 305  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 306  : 		--static_cast<_Mybase&>(*this);
; 307  : 		_SCL_SECURE_VALIDATE(_Ptrsav != this->_Ptr);
; 308  : 
; 309  :  #else /* _ITERATOR_DEBUG_LEVEL == 0 */
; 310  : 		--static_cast<_Mybase&>(*this);
; 311  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 312  : 
; 313  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 314  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator--
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
$T2 = -244						; size = 4
__Tmp$ = -40						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator++, COMDAT
; _this$ = ecx

; 278  : 		{	// postincrement

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE?AV01@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0

; 279  : 		_Myiter _Tmp = *this;

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 280  : 		++*this;

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator++

; 281  : 		return (_Tmp);

	lea	eax, DWORD PTR __Tmp$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 282  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN9@operator:
	DD	1
	DD	$LN8@operator
$LN8@operator:
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN6@operator
$LN6@operator:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE?AV01@H@Z$0:
	lea	ecx, DWORD PTR __Tmp$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE?AV01@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-252]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE?AV01@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator++
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator++, COMDAT
; _this$ = ecx

; 258  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 259  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 260  : 		if (this->_Getcont() == 0
; 261  : 			|| this->_Ptr == nullptr_t{}
; 262  : 			|| _Mytree::_Isnil(this->_Ptr))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN2@operator
$LN3@operator:

; 263  : 			{	// report error
; 264  : 			_DEBUG_ERROR("map/set iterator not incrementable");

	push	264					; 00000108H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@EHJFMBHJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 265  : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	265					; 00000109H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	push	0
	push	265					; 00000109H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BCM@DEJBDLOE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator:

; 266  : 			}
; 267  : 
; 268  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 269  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != nullptr_t{});
; 270  : 		_SCL_SECURE_VALIDATE_RANGE(!_Mytree::_Isnil(this->_Ptr));
; 271  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 272  : 
; 273  : 		++static_cast<_Mybase&>(*this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::operator++

; 274  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 275  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBEABU?$pair@QAEI@1@XZ
_TEXT	SEGMENT
__Mycont$ = -20						; size = 4
_this$ = -8						; size = 4
??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBEABU?$pair@QAEI@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator*, COMDAT
; _this$ = ecx

; 231  : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 232  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 233  : 		const auto _Mycont = static_cast<const _Mytree *>(this->_Getcont());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	DWORD PTR __Mycont$[ebp], eax

; 234  : 		if (_Mycont == 0
; 235  : 			|| this->_Ptr == nullptr_t{}
; 236  : 			|| this->_Ptr == _Mycont->_Myhead)

	cmp	DWORD PTR __Mycont$[ebp], 0
	je	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Mycont$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN2@operator
$LN3@operator:

; 237  : 			{	// report error
; 238  : 			_DEBUG_ERROR("map/set iterator not dereferencable");

	push	238					; 000000eeH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EI@FHEHNNNM@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 239  : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	239					; 000000efH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	push	0
	push	239					; 000000efH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BCK@CDLOIDNF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator:

; 240  : 			}
; 241  : 
; 242  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 243  : 		_SCL_SECURE_VALIDATE(this->_Ptr != nullptr_t{});
; 244  : 		const auto _Mycont = static_cast<const _Mytree *>(this->_Getcont());
; 245  : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 246  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr != _Mycont->_Myhead);
; 247  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 248  : 
; 249  : 		return (_Mytree::_Myval(this->_Ptr));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAAU?$pair@QAEI@2@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Myval
	add	esp, 4

; 250  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBEABU?$pair@QAEI@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >, COMDAT
; _this$ = ecx

; 214  : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 213  : 		: _Mybase(_Pnode, _Plist)

	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>

; 215  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >, COMDAT
; _this$ = ecx

; 209  : 		{	// construct with null node pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 208  : 		: _Mybase()

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>

; 210  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEI@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEI@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@$$QAU01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEI@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEI@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Mynode, COMDAT
; _this$ = ecx

; 122  : 		{	// return node pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 123  : 		return (_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]

; 124  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Mynode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Pnode$1 = -20						; size = 4
_this$ = -8						; size = 4
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::operator--, COMDAT
; _this$ = ecx

; 84   : 		{	// predecrement

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 85   : 		if (_Mytree::_Isnil(_Ptr))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN4@operator

; 86   : 			_Ptr = _Mytree::_Right(_Ptr);	// end() ==> rightmost

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Right
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx+8], eax
	jmp	$LN5@operator
$LN4@operator:

; 87   : 		else if (!_Mytree::_Isnil(_Mytree::_Left(_Ptr)))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN2@operator

; 88   : 			_Ptr = _Mytree::_Max(

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Max
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 89   : 				_Mytree::_Left(_Ptr));	// ==> largest of left subtree
; 90   : 		else

	jmp	SHORT $LN5@operator
$LN2@operator:

; 91   : 			{	// climb looking for left subtree
; 92   : 			_Nodeptr _Pnode;
; 93   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 94   : 				&& _Ptr == _Mytree::_Left(_Pnode))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$1[ebp], edx
	mov	eax, DWORD PTR __Pnode$1[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR __Pnode$1[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN3@operator

; 95   : 				_Ptr = _Pnode;	// ==> parent while left subtree

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$1[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN2@operator
$LN3@operator:

; 96   : 			if (_Mytree::_Isnil(_Ptr))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN8@operator

; 97   : 				;	// begin() shouldn't be decremented, don't move
; 98   : 			else

	jmp	SHORT $LN5@operator
$LN8@operator:

; 99   : 				_Ptr = _Pnode;	// ==> parent if not head

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$1[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN5@operator:

; 100  : 			}
; 101  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 102  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::operator--
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Pnode$1 = -20						; size = 4
_this$ = -8						; size = 4
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::operator++, COMDAT
; _this$ = ecx

; 59   : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 60   : 		if (_Mytree::_Isnil(_Ptr))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN4@operator
	jmp	$LN5@operator
$LN4@operator:

; 61   : 			;	// end() shouldn't be incremented, don't move
; 62   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN2@operator

; 63   : 			_Ptr = _Mytree::_Min(

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Min
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 64   : 				_Mytree::_Right(_Ptr));	// ==> smallest of right subtree
; 65   : 		else

	jmp	SHORT $LN5@operator
$LN2@operator:

; 66   : 			{	// climb looking for right subtree
; 67   : 			_Nodeptr _Pnode;
; 68   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 69   : 				&& _Ptr == _Mytree::_Right(_Pnode))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$1[ebp], edx
	mov	eax, DWORD PTR __Pnode$1[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR __Pnode$1[ebp]
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN3@operator

; 70   : 				_Ptr = _Pnode;	// ==> parent while right subtree

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$1[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN2@operator
$LN3@operator:

; 71   : 			_Ptr = _Pnode;	// ==> parent (head if end())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$1[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN5@operator:

; 72   : 			}
; 73   : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 74   : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx

; 44   : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEI@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 45   : 		this->_Adopt(_Plist);

	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 46   : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEI@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx

; 39   : 		{	// construct with null node pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEI@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ

; 38   : 		: _Ptr()

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 40   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEI@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEI@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z PROC ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,unsigned int>,int,std::pair<unsigned char * const,unsigned int> const *,std::pair<unsigned char * const,unsigned int> const &,std::_Iterator_base12>::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEI@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,unsigned int>,int,std::pair<unsigned char * const,unsigned int> const *,std::pair<unsigned char * const,unsigned int> const &,std::_Iterator_base12>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEI@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEI@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@$$QAU01@@Z PROC ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,unsigned int>,int,std::pair<unsigned char * const,unsigned int> const *,std::pair<unsigned char * const,unsigned int> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,unsigned int>,int,std::pair<unsigned char * const,unsigned int> const *,std::pair<unsigned char * const,unsigned int> const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEI@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@$$QAU01@@Z ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,unsigned int>,int,std::pair<unsigned char * const,unsigned int> const *,std::pair<unsigned char * const,unsigned int> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,unsigned int>,int,std::pair<unsigned char * const,unsigned int> const *,std::pair<unsigned char * const,unsigned int> const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEI@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEI@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z PROC ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,unsigned int>,int,std::pair<unsigned char * const,unsigned int> const *,std::pair<unsigned char * const,unsigned int> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,unsigned int>,int,std::pair<unsigned char * const,unsigned int> const *,std::pair<unsigned char * const,unsigned int> const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEI@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,unsigned int>,int,std::pair<unsigned char * const,unsigned int> const *,std::pair<unsigned char * const,unsigned int> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,unsigned int>,int,std::pair<unsigned char * const,unsigned int> const *,std::pair<unsigned char * const,unsigned int> const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEI@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEI@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,unsigned int>,int,std::pair<unsigned char * const,unsigned int> const *,std::pair<unsigned char * const,unsigned int> const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,unsigned int>,int,std::pair<unsigned char * const,unsigned int> const *,std::pair<unsigned char * const,unsigned int> const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEI@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,unsigned int>,int,std::pair<unsigned char * const,unsigned int> const *,std::pair<unsigned char * const,unsigned int> const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,unsigned int>,int,std::pair<unsigned char * const,unsigned int> const *,std::pair<unsigned char * const,unsigned int> const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEI@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEI@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,unsigned int>,int,std::pair<unsigned char * const,unsigned int> const *,std::pair<unsigned char * const,unsigned int> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,unsigned int>,int,std::pair<unsigned char * const,unsigned int> const *,std::pair<unsigned char * const,unsigned int> const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEI@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,unsigned int>,int,std::pair<unsigned char * const,unsigned int> const *,std::pair<unsigned char * const,unsigned int> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,unsigned int>,int,std::pair<unsigned char * const,unsigned int> const *,std::pair<unsigned char * const,unsigned int> const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@QAEPAXI@Z PROC ; std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	20					; 00000014H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@QAEPAXI@Z ENDP ; std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@XZ PROC ; std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >::~pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$vector@PAEV?$allocator@PAE@std@@@std@@QAE@XZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::~vector<unsigned char *,std::allocator<unsigned char *> >
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@XZ ENDP ; std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >::~pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Orphan_range@?$vector@PAEV?$allocator@PAE@std@@@std@@IBEXPAPAE0@Z
_TEXT	SEGMENT
__Pnext$ = -44						; size = 4
__Lock$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@PAEV?$allocator@PAE@std@@@std@@IBEXPAPAE0@Z PROC ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1775 : 		{	// orphan iterators within specified (inclusive) range

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_range@?$vector@PAEV?$allocator@PAE@std@@@std@@IBEXPAPAE0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1776 : 		_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1777 : 		const_iterator **_Pnext = (const_iterator **)this->_Getpfirst();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Getpfirst
	mov	DWORD PTR __Pnext$[ebp], eax

; 1778 : 		if (_Pnext != 0)

	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN4@Orphan_ran
$LN2@Orphan_ran:

; 1779 : 			{	// test an iterator
; 1780 : 			while (*_Pnext != 0)

	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN4@Orphan_ran

; 1781 : 				if ((*_Pnext)->_Ptr < _First || _Last < (*_Pnext)->_Ptr)

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR __First$[ebp]
	jb	SHORT $LN7@Orphan_ran
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Last$[ebp]
	cmp	edx, DWORD PTR [ecx+8]
	jae	SHORT $LN5@Orphan_ran
$LN7@Orphan_ran:

; 1782 : 					_Pnext = (const_iterator **)(*_Pnext)->_Getpnext();

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax

; 1783 : 				else

	jmp	SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:

; 1784 : 					{	// orphan the iterator
; 1785 : 					(*_Pnext)->_Clrcont();

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont

; 1786 : 					*_Pnext = *(const_iterator **)(*_Pnext)->_Getpnext();

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
$LN6@Orphan_ran:

; 1787 : 					}

	jmp	SHORT $LN2@Orphan_ran
$LN4@Orphan_ran:

; 1788 : 			}
; 1789 : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Orphan_ran
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN13@Orphan_ran:
	DD	1
	DD	$LN12@Orphan_ran
$LN12@Orphan_ran:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN10@Orphan_ran
$LN10@Orphan_ran:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@PAEV?$allocator@PAE@std@@@std@@IBEXPAPAE0@Z$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Orphan_range@?$vector@PAEV?$allocator@PAE@std@@@std@@IBEXPAPAE0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@PAEV?$allocator@PAE@std@@@std@@IBEXPAPAE0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@PAEV?$allocator@PAE@std@@@std@@IBEXPAPAE0@Z ENDP ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Orphan_range
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Xlen@?$vector@PAEV?$allocator@PAE@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xlen@?$vector@PAEV?$allocator@PAE@std@@@std@@IBEXXZ PROC ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Xlen, COMDAT
; _this$ = ecx

; 1764 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1765 : 		_Xlength_error("vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 1766 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@PAEV?$allocator@PAE@std@@@std@@IBEXXZ ENDP ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Tidy@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Tidy@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXXZ PROC ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Tidy, COMDAT
; _this$ = ecx

; 1636 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1637 : 		if (this->_Myfirst() != pointer())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myfirst
	cmp	DWORD PTR [eax], 0
	je	$LN1@Tidy

; 1638 : 			{	// something to free, destroy and deallocate it
; 1639 : 			this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Orphan_all

; 1640 : 			_Destroy(this->_Myfirst(), this->_Mylast());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myfirst
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXPAPAE0@Z ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Destroy

; 1641 : 			this->_Getal().deallocate(this->_Myfirst(),

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myend
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myfirst
	mov	ecx, DWORD PTR [esi]
	sub	ecx, DWORD PTR [eax]
	sar	ecx, 2
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myfirst
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QAEXPAPAEI@Z ; std::_Wrap_alloc<std::allocator<unsigned char *> >::deallocate

; 1642 : 				this->_Myend() - this->_Myfirst());
; 1643 : 			this->_Myfirst() = pointer();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myfirst
	mov	DWORD PTR [eax], 0

; 1644 : 			this->_Mylast() = pointer();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast
	mov	DWORD PTR [eax], 0

; 1645 : 			this->_Myend() = pointer();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myend
	mov	DWORD PTR [eax], 0
$LN1@Tidy:

; 1646 : 			}
; 1647 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXXZ ENDP ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Reserve@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXI@Z PROC ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Reserve, COMDAT
; _this$ = ecx

; 1626 : 		{	// ensure room for _Count new elements, grow exponentially

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1627 : 		if (_Unused_capacity() < _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unused_capacity@?$vector@PAEV?$allocator@PAE@std@@@std@@QBEIXZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Unused_capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN4@Reserve

; 1628 : 			{	// need more room, try to get it
; 1629 : 			if (max_size() - size() < _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@PAEV?$allocator@PAE@std@@@std@@QBEIXZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::max_size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAEV?$allocator@PAE@std@@@std@@QBEIXZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::size
	sub	esi, eax
	cmp	esi, DWORD PTR __Count$[ebp]
	jae	SHORT $LN3@Reserve

; 1630 : 				_Xlen();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@PAEV?$allocator@PAE@std@@@std@@IBEXXZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Xlen
$LN3@Reserve:

; 1631 : 			_Reallocate(_Grow_to(size() + _Count));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAEV?$allocator@PAE@std@@@std@@QBEIXZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::size
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@PAEV?$allocator@PAE@std@@@std@@IBEII@Z ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reallocate@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXI@Z ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Reallocate
$LN4@Reserve:

; 1632 : 			}
; 1633 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXI@Z ENDP ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Reallocate@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Size$ = -48						; size = 4
__Ptr$ = -36						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXI@Z PROC ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Reallocate, COMDAT
; _this$ = ecx

; 1601 : 		{	// move to array of exactly _Count elements

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Reallocate@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1602 : 		pointer _Ptr = this->_Getal().allocate(_Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QAEPAPAEI@Z ; std::_Wrap_alloc<std::allocator<unsigned char *> >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax

; 1603 : 
; 1604 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1605 : 		_Umove(this->_Myfirst(), this->_Mylast(), _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myfirst
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAPAE@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEPAPAEPAPAE00@Z ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Umove<unsigned char * *>
	jmp	SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXI@Z$0:

; 1606 : 		_CATCH_ALL
; 1607 : 		this->_Getal().deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QAEXPAPAEI@Z ; std::_Wrap_alloc<std::allocator<unsigned char *> >::deallocate

; 1608 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1609 : 		_CATCH_END

	mov	eax, $LN8@Reallocate
	ret	0
$LN5@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Reallocate@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXI@Z$1:

; 1610 : 
; 1611 : 		size_type _Size = size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAEV?$allocator@PAE@std@@@std@@QBEIXZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::size
	mov	DWORD PTR __Size$[ebp], eax

; 1612 : 		if (this->_Myfirst() != pointer())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myfirst
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Reallocate

; 1613 : 			{	// destroy and deallocate old array
; 1614 : 			_Destroy(this->_Myfirst(), this->_Mylast());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myfirst
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXPAPAE0@Z ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Destroy

; 1615 : 			this->_Getal().deallocate(this->_Myfirst(),

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myfirst
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myend
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR [esi]
	sar	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myfirst
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QAEXPAPAEI@Z ; std::_Wrap_alloc<std::allocator<unsigned char *> >::deallocate
$LN3@Reallocate:

; 1616 : 				this->_Myend() - this->_Myfirst());
; 1617 : 			}
; 1618 : 
; 1619 : 		this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Orphan_all

; 1620 : 		this->_Myend() = _Ptr + _Count;

	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	lea	esi, DWORD PTR [ecx+eax*4]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myend
	mov	DWORD PTR [eax], esi

; 1621 : 		this->_Mylast() = _Ptr + _Size;

	mov	eax, DWORD PTR __Size$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	lea	esi, DWORD PTR [ecx+eax*4]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast
	mov	DWORD PTR [eax], esi

; 1622 : 		this->_Myfirst() = _Ptr;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myfirst
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax], ecx
$LN4@Reallocate:

; 1623 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXI@Z ENDP ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Reallocate
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Inside@?$vector@PAEV?$allocator@PAE@std@@@std@@IBE_NPBQAE@Z
_TEXT	SEGMENT
tv82 = -208						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@PAEV?$allocator@PAE@std@@@std@@IBE_NPBQAE@Z PROC ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Inside, COMDAT
; _this$ = ecx

; 1596 : 		{	// test if _Ptr points inside vector

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1597 : 		return (_Ptr < _Unfancy(this->_Mylast()) && _Unfancy(this->_Myfirst()) <= _Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABQAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast
	mov	eax, DWORD PTR [eax]
	push	eax
	call	??$_Unfancy@PAE@std@@YAPAPAEPAPAE@Z	; std::_Unfancy<unsigned char *>
	add	esp, 4
	cmp	DWORD PTR __Ptr$[ebp], eax
	jae	SHORT $LN3@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABQAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myfirst
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??$_Unfancy@PAE@std@@YAPAPAEPAPAE@Z	; std::_Unfancy<unsigned char *>
	add	esp, 4
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
	mov	DWORD PTR tv82[ebp], 1
	jmp	SHORT $LN4@Inside
$LN3@Inside:
	mov	DWORD PTR tv82[ebp], 0
$LN4@Inside:
	mov	al, BYTE PTR tv82[ebp]

; 1598 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$vector@PAEV?$allocator@PAE@std@@@std@@IBE_NPBQAE@Z ENDP ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Grow_to@?$vector@PAEV?$allocator@PAE@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -220						; size = 4
__Capacity$ = -20					; size = 4
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@PAEV?$allocator@PAE@std@@@std@@IBEII@Z PROC ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Grow_to, COMDAT
; _this$ = ecx

; 1585 : 		{	// grow by 50% or at least to _Count

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1586 : 		size_type _Capacity = capacity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@PAEV?$allocator@PAE@std@@@std@@QBEIXZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax

; 1587 : 
; 1588 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@PAEV?$allocator@PAE@std@@@std@@QBEIXZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax

; 1589 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%
; 1590 : 		if (_Capacity < _Count)

	mov	eax, DWORD PTR __Capacity$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN2@Grow_to

; 1591 : 			_Capacity = _Count;

	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
$LN2@Grow_to:

; 1592 : 		return (_Capacity);

	mov	eax, DWORD PTR __Capacity$[ebp]

; 1593 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@PAEV?$allocator@PAE@std@@@std@@IBEII@Z ENDP ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXPAPAE0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXPAPAE0@Z PROC ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Destroy, COMDAT
; _this$ = ecx

; 1580 : 		{	// destroy [_First, _Last) using allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1581 : 		_Destroy_range(_First, _Last, this->_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Getal
	push	eax
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Destroy_range@V?$allocator@PAE@std@@PAPAE@std@@YAXPAPAE0AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@@Z ; std::_Destroy_range<std::allocator<unsigned char *>,unsigned char * *>
	add	esp, 12					; 0000000cH

; 1582 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXPAPAE0@Z ENDP ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?clear@?$vector@PAEV?$allocator@PAE@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?clear@?$vector@PAEV?$allocator@PAE@std@@@std@@QAEXXZ PROC ; std::vector<unsigned char *,std::allocator<unsigned char *> >::clear, COMDAT
; _this$ = ecx

; 1539 : 		{	// erase all

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?clear@?$vector@PAEV?$allocator@PAE@std@@@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1540 : 		this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Orphan_all

; 1541 : 		_Destroy(this->_Myfirst(), this->_Mylast());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myfirst
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXPAPAE0@Z ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Destroy

; 1542 : 		this->_Mylast() = this->_Myfirst();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myfirst
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1543 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?clear@?$vector@PAEV?$allocator@PAE@std@@@std@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?clear@?$vector@PAEV?$allocator@PAE@std@@@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clear@?$vector@PAEV?$allocator@PAE@std@@@std@@QAEXXZ ENDP ; std::vector<unsigned char *,std::allocator<unsigned char *> >::clear
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?erase@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@0@Z
_TEXT	SEGMENT
tv94 = -388						; size = 4
tv320 = -384						; size = 4
tv346 = -380						; size = 4
tv335 = -376						; size = 4
tv331 = -376						; size = 4
tv327 = -376						; size = 4
tv315 = -376						; size = 4
tv342 = -372						; size = 4
tv334 = -372						; size = 4
tv330 = -372						; size = 4
tv326 = -372						; size = 4
$T2 = -364						; size = 4
$T3 = -352						; size = 4
$T4 = -340						; size = 4
$T5 = -328						; size = 4
$T6 = -316						; size = 12
$T7 = -296						; size = 12
$T8 = -273						; size = 1
__Ptr$9 = -72						; size = 4
__Last$10 = -60						; size = 12
__First$11 = -40					; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 12
__Last_arg$ = 24					; size = 12
?erase@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@0@Z PROC ; std::vector<unsigned char *,std::allocator<unsigned char *> >::erase, COMDAT
; _this$ = ecx

; 1495 : 		{	// erase [_First, _Last)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?erase@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 376				; 00000178H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-388]
	mov	ecx, 94					; 0000005eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 1496 : 		if (_First_arg == begin() && _Last_arg == end())

	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@XZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::begin
	mov	DWORD PTR tv342[ebp], eax
	mov	ecx, DWORD PTR tv342[ebp]
	mov	DWORD PTR tv315[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR tv315[ebp]
	push	eax
	lea	ecx, DWORD PTR __First_arg$[ebp]
	call	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN9@erase
	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@XZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::end
	mov	DWORD PTR tv346[ebp], eax
	mov	eax, DWORD PTR tv346[ebp]
	mov	DWORD PTR tv320[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 2
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR tv320[ebp]
	push	edx
	lea	ecx, DWORD PTR __Last_arg$[ebp]
	call	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN9@erase
	mov	DWORD PTR tv94[ebp], 1
	jmp	SHORT $LN10@erase
$LN9@erase:
	mov	DWORD PTR tv94[ebp], 0
$LN10@erase:
	mov	cl, BYTE PTR tv94[ebp]
	mov	BYTE PTR $T8[ebp], cl
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR $T2[ebp]
	and	edx, 2
	je	SHORT $LN17@erase
	and	DWORD PTR $T2[ebp], -3			; fffffffdH
	lea	ecx, DWORD PTR $T6[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
$LN17@erase:
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	SHORT $LN18@erase
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	lea	ecx, DWORD PTR $T7[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
$LN18@erase:
	movzx	ecx, BYTE PTR $T8[ebp]
	test	ecx, ecx
	je	SHORT $LN2@erase

; 1497 : 			clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$vector@PAEV?$allocator@PAE@std@@@std@@QAEXXZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::clear
	jmp	$LN3@erase
$LN2@erase:

; 1498 : 		else if (_First_arg != _Last_arg)

	lea	eax, DWORD PTR __Last_arg$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First_arg$[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	$LN3@erase

; 1499 : 			{	// clear partial
; 1500 : 			iterator _First = _Make_iter(_First_arg);

	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T5[ebp], esp
	lea	eax, DWORD PTR __First_arg$[ebp]
	push	eax
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv326[ebp], eax
	lea	ecx, DWORD PTR __First$11[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$vector@PAEV?$allocator@PAE@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@@Z ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Make_iter
	mov	DWORD PTR tv327[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4

; 1501 : 			iterator _Last = _Make_iter(_Last_arg);

	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T4[ebp], esp
	lea	eax, DWORD PTR __Last_arg$[ebp]
	push	eax
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv330[ebp], eax
	lea	ecx, DWORD PTR __Last$10[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$vector@PAEV?$allocator@PAE@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@@Z ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Make_iter
	mov	DWORD PTR tv331[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5

; 1502 : 
; 1503 : 			if (_First != _Last)

	lea	eax, DWORD PTR __Last$10[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$11[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	$LN5@erase

; 1504 : 				{	// worth doing, copy down over hole
; 1505 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1506 : 				if (_Last < _First || _VICONT(_First) != &this->_Get_data()
; 1507 : 					|| _VIPTR(_First) < this->_Myfirst()
; 1508 : 					|| this->_Mylast() < _VIPTR(_Last))

	lea	eax, DWORD PTR __First$11[ebp]
	push	eax
	lea	ecx, DWORD PTR __Last$10[ebp]
	call	??M?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::operator<
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN7@erase
	lea	ecx, DWORD PTR __First$11[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAE@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Get_data
	cmp	esi, eax
	jne	SHORT $LN7@erase
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myfirst
	mov	ecx, DWORD PTR __First$11[ebp+8]
	cmp	ecx, DWORD PTR [eax]
	jb	SHORT $LN7@erase
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR __Last$10[ebp+8]
	jae	SHORT $LN6@erase
$LN7@erase:

; 1509 : 					_DEBUG_ERROR("vector erase iterator outside range");

	push	1509					; 000005e5H
	push	OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EI@HGIDLLCM@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN6@erase:

; 1510 : 				pointer _Ptr = _Move_unchecked(_VIPTR(_Last), this->_Mylast(),

	mov	eax, DWORD PTR __First$11[ebp+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __Last$10[ebp+8]
	push	edx
	call	??$_Move_unchecked@PAPAEPAPAE@std@@YAPAPAEPAPAE00@Z ; std::_Move_unchecked<unsigned char * *,unsigned char * *>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Ptr$9[ebp], eax

; 1511 : 					_VIPTR(_First));
; 1512 : 				_Orphan_range(_VIPTR(_First), this->_Mylast());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR __First$11[ebp+8]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@PAEV?$allocator@PAE@std@@@std@@IBEXPAPAE0@Z ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Orphan_range

; 1513 : 
; 1514 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1515 : 				pointer _Ptr = _Move_unchecked(_VIPTR(_Last), this->_Mylast(),
; 1516 : 					_VIPTR(_First));
; 1517 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1518 : 
; 1519 : 				_Destroy(_Ptr, this->_Mylast());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR __Ptr$9[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXPAPAE0@Z ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Destroy

; 1520 : 				this->_Mylast() = _Ptr;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast
	mov	ecx, DWORD PTR __Ptr$9[ebp]
	mov	DWORD PTR [eax], ecx
$LN5@erase:

; 1521 : 				}
; 1522 : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR __Last$10[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __First$11[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
$LN3@erase:

; 1523 : 		return (_Make_iter(_First_arg));

	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	eax, DWORD PTR __First_arg$[ebp]
	push	eax
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv334[ebp], eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$vector@PAEV?$allocator@PAE@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@@Z ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Make_iter
	mov	DWORD PTR tv335[ebp], eax
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 4
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First_arg$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last_arg$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1524 : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN30@erase
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 388				; 00000184H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
$LN30@erase:
	DD	2
	DD	$LN29@erase
$LN29@erase:
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN26@erase
	DD	-60					; ffffffc4H
	DD	12					; 0000000cH
	DD	$LN27@erase
$LN27@erase:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN26@erase:
	DB	95					; 0000005fH
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@0@Z$0:
	lea	ecx, DWORD PTR __Last_arg$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@0@Z$1:
	lea	ecx, DWORD PTR __First_arg$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@0@Z$2:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN14@erase
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	lea	ecx, DWORD PTR $T7[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
$LN14@erase:
	ret	0
__unwindfunclet$?erase@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@0@Z$3:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 2
	je	$LN16@erase
	and	DWORD PTR $T2[ebp], -3			; fffffffdH
	lea	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
$LN16@erase:
	ret	0
__unwindfunclet$?erase@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@0@Z$5:
	lea	ecx, DWORD PTR __First$11[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@0@Z$7:
	lea	ecx, DWORD PTR __Last$10[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
__ehhandler$?erase@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-392]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?erase@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@0@Z ENDP ; std::vector<unsigned char *,std::allocator<unsigned char *> >::erase
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?push_back@?$vector@PAEV?$allocator@PAE@std@@@std@@QAEXABQAE@Z
_TEXT	SEGMENT
tv231 = -220						; size = 4
tv176 = -220						; size = 4
__Idx$1 = -20						; size = 4
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@PAEV?$allocator@PAE@std@@@std@@QAEXABQAE@Z PROC ; std::vector<unsigned char *,std::allocator<unsigned char *> >::push_back, COMDAT
; _this$ = ecx

; 1276 : 		{	// insert element at end

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1277 : 		if (_Inside(_STD addressof(_Val)))

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@QAE@std@@YAPBQAEABQAE@Z	; std::addressof<unsigned char * const>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@PAEV?$allocator@PAE@std@@@std@@IBE_NPBQAE@Z ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	$LN2@push_back

; 1278 : 			{	// push back an element
; 1279 : 			size_type _Idx = _STD addressof(_Val) - _Unfancy(this->_Myfirst());

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@QAE@std@@YAPBQAEABQAE@Z	; std::addressof<unsigned char * const>
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myfirst
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??$_Unfancy@PAE@std@@YAPAPAEPAPAE@Z	; std::_Unfancy<unsigned char *>
	add	esp, 4
	sub	esi, eax
	sar	esi, 2
	mov	DWORD PTR __Idx$1[ebp], esi

; 1280 : 			if (this->_Mylast() == this->_Myend())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myend
	mov	ecx, DWORD PTR [esi]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN4@push_back

; 1281 : 				_Reserve(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXI@Z ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Reserve
$LN4@push_back:

; 1282 : 			_Orphan_range(this->_Mylast(), this->_Mylast());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@PAEV?$allocator@PAE@std@@@std@@IBEXPAPAE0@Z ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Orphan_range

; 1283 : 			this->_Getal().construct(_Unfancy(this->_Mylast()),

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myfirst
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Idx$1[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast
	mov	eax, DWORD PTR [eax]
	push	eax
	call	??$_Unfancy@PAE@std@@YAPAPAEPAPAE@Z	; std::_Unfancy<unsigned char *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Getal
	mov	ecx, eax
	call	??$construct@PAEAAPAE@?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QAEXPAPAEAAPAE@Z ; std::_Wrap_alloc<std::allocator<unsigned char *> >::construct<unsigned char *,unsigned char * &>

; 1284 : 				this->_Myfirst()[_Idx]);
; 1285 : 			++this->_Mylast();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast
	mov	DWORD PTR tv176[ebp], eax
	mov	eax, DWORD PTR tv176[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	edx, DWORD PTR tv176[ebp]
	mov	DWORD PTR [edx], ecx

; 1286 : 			}
; 1287 : 		else

	jmp	$LN1@push_back
$LN2@push_back:

; 1288 : 			{	// push back a non-element
; 1289 : 			if (this->_Mylast() == this->_Myend())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myend
	mov	ecx, DWORD PTR [esi]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN5@push_back

; 1290 : 				_Reserve(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXI@Z ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Reserve
$LN5@push_back:

; 1291 : 			_Orphan_range(this->_Mylast(), this->_Mylast());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@PAEV?$allocator@PAE@std@@@std@@IBEXPAPAE0@Z ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Orphan_range

; 1292 : 			this->_Getal().construct(_Unfancy(this->_Mylast()),

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??$_Unfancy@PAE@std@@YAPAPAEPAPAE@Z	; std::_Unfancy<unsigned char *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Getal
	mov	ecx, eax
	call	??$construct@PAEABQAE@?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QAEXPAPAEABQAE@Z ; std::_Wrap_alloc<std::allocator<unsigned char *> >::construct<unsigned char *,unsigned char * const &>

; 1293 : 				_Val);
; 1294 : 			++this->_Mylast();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast
	mov	DWORD PTR tv231[ebp], eax
	mov	eax, DWORD PTR tv231[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	edx, DWORD PTR tv231[ebp]
	mov	DWORD PTR [edx], ecx
$LN1@push_back:

; 1295 : 			}
; 1296 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@PAEV?$allocator@PAE@std@@@std@@QAEXABQAE@Z ENDP ; std::vector<unsigned char *,std::allocator<unsigned char *> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?empty@?$vector@PAEV?$allocator@PAE@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
tv77 = -208						; size = 4
_this$ = -8						; size = 4
?empty@?$vector@PAEV?$allocator@PAE@std@@@std@@QBE_NXZ PROC ; std::vector<unsigned char *,std::allocator<unsigned char *> >::empty, COMDAT
; _this$ = ecx

; 1189 : 		{	// test if sequence is empty

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1190 : 		return (this->_Myfirst() == this->_Mylast());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABQAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myfirst
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABQAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast
	mov	ecx, DWORD PTR [esi]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN3@empty
	mov	DWORD PTR tv77[ebp], 1
	jmp	SHORT $LN4@empty
$LN3@empty:
	mov	DWORD PTR tv77[ebp], 0
$LN4@empty:
	mov	al, BYTE PTR tv77[ebp]

; 1191 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?empty@?$vector@PAEV?$allocator@PAE@std@@@std@@QBE_NXZ ENDP ; std::vector<unsigned char *,std::allocator<unsigned char *> >::empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?max_size@?$vector@PAEV?$allocator@PAE@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
?max_size@?$vector@PAEV?$allocator@PAE@std@@@std@@QBEIXZ PROC ; std::vector<unsigned char *,std::allocator<unsigned char *> >::max_size, COMDAT
; _this$ = ecx

; 1184 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1185 : 		return (this->_Getal().max_size());

	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<unsigned char *> >::max_size

; 1186 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@PAEV?$allocator@PAE@std@@@std@@QBEIXZ ENDP ; std::vector<unsigned char *,std::allocator<unsigned char *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?size@?$vector@PAEV?$allocator@PAE@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$vector@PAEV?$allocator@PAE@std@@@std@@QBEIXZ PROC ; std::vector<unsigned char *,std::allocator<unsigned char *> >::size, COMDAT
; _this$ = ecx

; 1179 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1180 : 		return (this->_Mylast() - this->_Myfirst());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABQAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABQAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myfirst
	mov	ecx, DWORD PTR [esi]
	sub	ecx, DWORD PTR [eax]
	sar	ecx, 2
	mov	eax, ecx

; 1181 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@PAEV?$allocator@PAE@std@@@std@@QBEIXZ ENDP ; std::vector<unsigned char *,std::allocator<unsigned char *> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Make_iter@?$vector@PAEV?$allocator@PAE@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@@Z
_TEXT	SEGMENT
$T2 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?_Make_iter@?$vector@PAEV?$allocator@PAE@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@@Z PROC ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Make_iter, COMDAT
; _this$ = ecx

; 1077 : 		{	// make iterator from const_iterator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Make_iter@?$vector@PAEV?$allocator@PAE@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1078 : 		return (iterator(_Where._Ptr, &this->_Get_data()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@PAE@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Get_data
	push	eax
	mov	eax, DWORD PTR __Where$[ebp+8]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@PAPAEPBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1079 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Make_iter@?$vector@PAEV?$allocator@PAE@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
__ehhandler$?_Make_iter@?$vector@PAEV?$allocator@PAE@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Make_iter@?$vector@PAEV?$allocator@PAE@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Make_iter@?$vector@PAEV?$allocator@PAE@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@@Z ENDP ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Make_iter
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?end@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@XZ PROC ; std::vector<unsigned char *,std::allocator<unsigned char *> >::end, COMDAT
; _this$ = ecx

; 1067 : 		{	// return iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?end@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1068 : 		return (iterator(this->_Mylast(), &this->_Get_data()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAE@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Get_data
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@PAPAEPBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1069 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?end@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?end@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?end@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@XZ ENDP ; std::vector<unsigned char *,std::allocator<unsigned char *> >::end
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?begin@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@XZ PROC ; std::vector<unsigned char *,std::allocator<unsigned char *> >::begin, COMDAT
; _this$ = ecx

; 1057 : 		{	// return iterator for beginning of mutable sequence

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?begin@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1058 : 		return (iterator(this->_Myfirst(), &this->_Get_data()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAE@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Get_data
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myfirst
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@PAPAEPBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1059 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?begin@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?begin@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?begin@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@XZ ENDP ; std::vector<unsigned char *,std::allocator<unsigned char *> >::begin
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Unused_capacity@?$vector@PAEV?$allocator@PAE@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Unused_capacity@?$vector@PAEV?$allocator@PAE@std@@@std@@QBEIXZ PROC ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Unused_capacity, COMDAT
; _this$ = ecx

; 1047 : 		{	// micro-optimization for capacity() - size()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1048 : 		return (this->_Myend() - this->_Mylast());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABQAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myend
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABQAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast
	mov	ecx, DWORD PTR [esi]
	sub	ecx, DWORD PTR [eax]
	sar	ecx, 2
	mov	eax, ecx

; 1049 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unused_capacity@?$vector@PAEV?$allocator@PAE@std@@@std@@QBEIXZ ENDP ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?capacity@?$vector@PAEV?$allocator@PAE@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?capacity@?$vector@PAEV?$allocator@PAE@std@@@std@@QBEIXZ PROC ; std::vector<unsigned char *,std::allocator<unsigned char *> >::capacity, COMDAT
; _this$ = ecx

; 1042 : 		{	// return current length of allocated storage

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1043 : 		return (this->_Myend() - this->_Myfirst());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABQAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myend
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABQAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myfirst
	mov	ecx, DWORD PTR [esi]
	sub	ecx, DWORD PTR [eax]
	sar	ecx, 2
	mov	eax, ecx

; 1044 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@PAEV?$allocator@PAE@std@@@std@@QBEIXZ ENDP ; std::vector<unsigned char *,std::allocator<unsigned char *> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??1?$vector@PAEV?$allocator@PAE@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@PAEV?$allocator@PAE@std@@@std@@QAE@XZ PROC	; std::vector<unsigned char *,std::allocator<unsigned char *> >::~vector<unsigned char *,std::allocator<unsigned char *> >, COMDAT
; _this$ = ecx

; 975  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@PAEV?$allocator@PAE@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 976  : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXXZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Tidy

; 977  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::~_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$vector@PAEV?$allocator@PAE@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@PAEV?$allocator@PAE@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@PAEV?$allocator@PAE@std@@@std@@QAE@XZ ENDP	; std::vector<unsigned char *,std::allocator<unsigned char *> >::~vector<unsigned char *,std::allocator<unsigned char *> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Assign_rv@?$vector@PAEV?$allocator@PAE@std@@@std@@QAEX$$QAV12@@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?_Assign_rv@?$vector@PAEV?$allocator@PAE@std@@@std@@QAEX$$QAV12@@Z PROC ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Assign_rv, COMDAT
; _this$ = ecx

; 889  : 		{	// assign by moving _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 890  : 		_Assign_rv(_STD forward<_Myt>(_Right),

	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	call	??$forward@V?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@YA$$QAV?$vector@PAEV?$allocator@PAE@std@@@0@AAV10@@Z ; std::forward<std::vector<unsigned char *,std::allocator<unsigned char *> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Assign_rv@?$vector@PAEV?$allocator@PAE@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Assign_rv

; 891  : 			typename _Alty::propagate_on_container_move_assignment());
; 892  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Assign_rv@?$vector@PAEV?$allocator@PAE@std@@@std@@QAEX$$QAV12@@Z ENDP ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Assign_rv
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Assign_rv@?$vector@PAEV?$allocator@PAE@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
___formal$ = 12						; size = 1
?_Assign_rv@?$vector@PAEV?$allocator@PAE@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Assign_rv, COMDAT
; _this$ = ecx

; 868  : 		{	// move from _Right, stealing its contents

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 869  : 		this->_Swap_all((_Myt&)_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Swap_all@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEXAAV12@@Z ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Swap_all

; 870  : 		this->_Myfirst() = _Right._Myfirst();

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myfirst
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myfirst
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 871  : 		this->_Mylast() = _Right._Mylast();

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 872  : 		this->_Myend() = _Right._Myend();

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myend
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myend
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 873  : 
; 874  : 		_Right._Myfirst() = pointer();

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myfirst
	mov	DWORD PTR [eax], 0

; 875  : 		_Right._Mylast() = pointer();

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast
	mov	DWORD PTR [eax], 0

; 876  : 		_Right._Myend() = pointer();

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myend
	mov	DWORD PTR [eax], 0

; 877  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Assign_rv@?$vector@PAEV?$allocator@PAE@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Assign_rv
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??4?$vector@PAEV?$allocator@PAE@std@@@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??4?$vector@PAEV?$allocator@PAE@std@@@std@@QAEAAV01@$$QAV01@@Z PROC ; std::vector<unsigned char *,std::allocator<unsigned char *> >::operator=, COMDAT
; _this$ = ecx

; 854  : 		{	// assign by moving _Right

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??4?$vector@PAEV?$allocator@PAE@std@@@std@@QAEAAV01@$$QAV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 855  : 		if (this != &_Right)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	je	SHORT $LN2@operator

; 856  : 			{	// different, assign it
; 857  : 			_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXXZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Tidy

; 858  : 			if (_Alty::propagate_on_container_move_assignment::value
; 859  : 				&& this->_Getal() != _Right._Getal())

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Getal
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Getal
	push	eax
	call	??$?9V?$allocator@PAE@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@0@Z ; std::operator!=<std::allocator<unsigned char *>,std::allocator<unsigned char *> >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator

; 860  : 				this->_Move_alloc(_Right._Getal());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Getal
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Move_alloc@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEXAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@@Z ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Move_alloc
$LN3@operator:

; 861  : 
; 862  : 			_Assign_rv(_STD forward<_Myt>(_Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@V?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@YA$$QAV?$vector@PAEV?$allocator@PAE@std@@@0@AAV10@@Z ; std::forward<std::vector<unsigned char *,std::allocator<unsigned char *> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Assign_rv@?$vector@PAEV?$allocator@PAE@std@@@std@@QAEX$$QAV12@@Z ; std::vector<unsigned char *,std::allocator<unsigned char *> >::_Assign_rv
$LN2@operator:

; 863  : 			}
; 864  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 865  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??4?$vector@PAEV?$allocator@PAE@std@@@std@@QAEAAV01@$$QAV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??4?$vector@PAEV?$allocator@PAE@std@@@std@@QAEAAV01@$$QAV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??4?$vector@PAEV?$allocator@PAE@std@@@std@@QAEAAV01@$$QAV01@@Z ENDP ; std::vector<unsigned char *,std::allocator<unsigned char *> >::operator=
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$vector@PAEV?$allocator@PAE@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$vector@PAEV?$allocator@PAE@std@@@std@@QAE@XZ PROC	; std::vector<unsigned char *,std::allocator<unsigned char *> >::vector<unsigned char *,std::allocator<unsigned char *> >, COMDAT
; _this$ = ecx

; 707  : 		{	// construct empty vector

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@PAEV?$allocator@PAE@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 706  : 		: _Mybase()

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >

; 708  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$vector@PAEV?$allocator@PAE@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@PAEV?$allocator@PAE@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@PAEV?$allocator@PAE@std@@@std@@QAE@XZ ENDP	; std::vector<unsigned char *,std::allocator<unsigned char *> >::vector<unsigned char *,std::allocator<unsigned char *> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAE@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAE@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char *> >,std::_Vector_val<std::_Simple_types<unsigned char *> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char *> >,std::_Vector_val<std::_Simple_types<unsigned char *> >,1>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAE@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char *> >,std::_Vector_val<std::_Simple_types<unsigned char *> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char *> >,std::_Vector_val<std::_Simple_types<unsigned char *> >,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAE@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@PAE@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAE@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@PAE@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char *> >,std::_Vector_val<std::_Simple_types<unsigned char *> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 319  : 		{	// return const reference to second

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 320  : 		return (_Myval2);

	mov	eax, DWORD PTR _this$[ebp]

; 321  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAE@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@PAE@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char *> >,std::_Vector_val<std::_Simple_types<unsigned char *> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAE@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAE@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAE@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAE@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char *> >,std::_Vector_val<std::_Simple_types<unsigned char *> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 314  : 		{	// return reference to second

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 315  : 		return (_Myval2);

	mov	eax, DWORD PTR _this$[ebp]

; 316  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAE@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAE@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char *> >,std::_Vector_val<std::_Simple_types<unsigned char *> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAE@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAE@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char *> >,std::_Vector_val<std::_Simple_types<unsigned char *> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 299  : 		{	// return const reference to first

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 300  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 301  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAE@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char *> >,std::_Vector_val<std::_Simple_types<unsigned char *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAE@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAE@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char *> >,std::_Vector_val<std::_Simple_types<unsigned char *> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 294  : 		{	// return reference to first

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 295  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 296  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAE@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char *> >,std::_Vector_val<std::_Simple_types<unsigned char *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<unsigned char *> >::~_Vector_val<std::_Simple_types<unsigned char *> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<unsigned char *> >::~_Vector_val<std::_Simple_types<unsigned char *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<unsigned char *> >::_Vector_val<std::_Simple_types<unsigned char *> >, COMDAT
; _this$ = ecx

; 488  : 		{	// initialize values

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12

; 485  : 		: _Myfirst(),

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 486  : 		_Mylast(),

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 487  : 		_Myend()

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0

; 489  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<unsigned char *> >::_Vector_val<std::_Simple_types<unsigned char *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABQAPAEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABQAPAEXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myend, COMDAT
; _this$ = ecx

; 667  : 		{	// return const reference to _Myend

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 668  : 		return (_Get_data()._Myend);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@PAE@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Get_data
	add	eax, 12					; 0000000cH

; 669  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABQAPAEXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myend, COMDAT
; _this$ = ecx

; 662  : 		{	// return reference to _Myend

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 663  : 		return (_Get_data()._Myend);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAE@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Get_data
	add	eax, 12					; 0000000cH

; 664  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABQAPAEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABQAPAEXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast, COMDAT
; _this$ = ecx

; 657  : 		{	// return const reference to _Mylast

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 658  : 		return (_Get_data()._Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@PAE@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Get_data
	add	eax, 8

; 659  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABQAPAEXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast, COMDAT
; _this$ = ecx

; 652  : 		{	// return reference to _Mylast

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 653  : 		return (_Get_data()._Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAE@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Get_data
	add	eax, 8

; 654  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABQAPAEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABQAPAEXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myfirst, COMDAT
; _this$ = ecx

; 647  : 		{	// return const reference to _Myfirst

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 648  : 		return (_Get_data()._Myfirst);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@PAE@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Get_data
	add	eax, 4

; 649  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABQAPAEXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myfirst, COMDAT
; _this$ = ecx

; 642  : 		{	// return reference to _Myfirst

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 643  : 		return (_Get_data()._Myfirst);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAE@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Get_data
	add	eax, 4

; 644  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAPAEXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@PAE@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@PAE@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Get_data, COMDAT
; _this$ = ecx

; 637  : 		{	// return const reference to _Vector_val

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 638  : 		return (_Mypair._Get_second());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAE@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@PAE@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char *> >,std::_Vector_val<std::_Simple_types<unsigned char *> >,1>::_Get_second

; 639  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@PAE@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAE@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAE@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Get_data, COMDAT
; _this$ = ecx

; 632  : 		{	// return reference to _Vector_val

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 633  : 		return (_Mypair._Get_second());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAE@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAE@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char *> >,std::_Vector_val<std::_Simple_types<unsigned char *> >,1>::_Get_second

; 634  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAE@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Getal, COMDAT
; _this$ = ecx

; 627  : 		{	// return const reference to allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return (_Mypair._Get_first());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAE@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char *> >,std::_Vector_val<std::_Simple_types<unsigned char *> >,1>::_Get_first

; 629  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Getal, COMDAT
; _this$ = ecx

; 622  : 		{	// return reference to allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 623  : 		return (_Mypair._Get_first());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAE@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char *> >,std::_Vector_val<std::_Simple_types<unsigned char *> >,1>::_Get_first

; 624  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Swap_all@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?_Swap_all@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEXAAV12@@Z PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Swap_all, COMDAT
; _this$ = ecx

; 617  : 		{	// swap all iterators

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 618  : 		_Get_data()._Swap_all(_Right._Get_data());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAE@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Get_data
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAE@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Get_data
	mov	ecx, eax
	call	?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z ; std::_Container_base12::_Swap_all

; 619  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Swap_all@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEXAAV12@@Z ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Swap_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Orphan_all, COMDAT
; _this$ = ecx

; 612  : 		{	// orphan all iterators

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 613  : 		_Get_data()._Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAE@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Get_data
	mov	ecx, eax
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 614  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myproxy, COMDAT
; _this$ = ecx

; 601  : 		{	// return reference to _Myproxy

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 602  : 		return (_Get_data()._Myproxy);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAE@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Get_data

; 603  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myproxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Getpfirst, COMDAT
; _this$ = ecx

; 596  : 		{	// get address of iterator chain

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 597  : 		return (_Get_data()._Getpfirst());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@PAE@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Get_data
	mov	ecx, eax
	call	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst

; 598  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Getpfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -17					; size = 1
_this$ = -8						; size = 4
?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Free_proxy, COMDAT
; _this$ = ecx

; 586  : 		{	// destroy proxy

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 587  : 		typename _Alty::template rebind<_Container_proxy>::other
; 588  : 			_Alproxy(_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Getal
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<unsigned char *> > &>

; 589  : 		_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Orphan_all

; 590  : 		_Alproxy.destroy(_Myproxy());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myproxy
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>

; 591  : 		_Alproxy.deallocate(_Alproxy.address(*_Myproxy()), 1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myproxy
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QBEPAU_Container_proxy@2@AAU32@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate

; 592  : 		_Myproxy() = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myproxy
	mov	DWORD PTR [eax], 0

; 593  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Free_proxy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Free_proxy:
	DD	1
	DD	$LN4@Free_proxy
$LN4@Free_proxy:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@Free_proxy
$LN3@Free_proxy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -228						; size = 8
__Alproxy$ = -17					; size = 1
_this$ = -8						; size = 4
?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Alloc_proxy, COMDAT
; _this$ = ecx

; 577  : 		{	// construct proxy

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 578  : 		typename _Alty::template rebind<_Container_proxy>::other
; 579  : 			_Alproxy(_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Getal
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<unsigned char *> > &>

; 580  : 		_Myproxy() = _Unfancy(_Alproxy.allocate(1));

	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
	push	eax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myproxy
	mov	DWORD PTR [eax], esi

; 581  : 		_Alproxy.construct(_Myproxy(), _Container_proxy());

	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myproxy
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>

; 582  : 		_Myproxy()->_Mycont = &_Get_data();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAE@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Get_data
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Myproxy
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax], esi

; 583  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Alloc_prox
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@Alloc_prox:
	DD	1
	DD	$LN4@Alloc_prox
$LN4@Alloc_prox:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@Alloc_prox
$LN3@Alloc_prox:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Move_alloc@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEXAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Al$ = 8						; size = 4
?_Move_alloc@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEXAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@@Z PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Move_alloc, COMDAT
; _this$ = ecx

; 570  : 		{	// replace old allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 571  : 		_Free_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Free_proxy

; 572  : 		_Pocma(_Getal(), _Al);

	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Getal
	push	eax
	call	??$_Pocma@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@0@Z ; std::_Pocma<std::_Wrap_alloc<std::allocator<unsigned char *> > >
	add	esp, 8

; 573  : 		_Alloc_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Alloc_proxy

; 574  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Move_alloc@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEXAAU?$_Wrap_alloc@V?$allocator@PAE@std@@@2@@Z ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Move_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??1?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::~_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy proxy

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 559  : 		_Free_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Free_proxy

; 560  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAE@std@@@2@$00@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::~_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T2 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >, COMDAT
; _this$ = ecx

; 544  : 		{	// default construct allocator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 543  : 		: _Mypair(_Zero_then_variadic_args_t())

	movzx	eax, BYTE PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAE@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char *> >,std::_Vector_val<std::_Simple_types<unsigned char *> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char *> >,std::_Vector_val<std::_Simple_types<unsigned char *> >,1><>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 545  : 		_Alloc_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Alloc_proxy

; 546  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAE@std@@@2@$00@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@U?$_Vec_base_types@PAEV?$allocator@PAE@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >::_Vector_alloc<std::_Vec_base_types<unsigned char *,std::allocator<unsigned char *> > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QBEIU_Nil@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
?max_size@?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QBEIU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned char *> >::max_size, COMDAT
; _this$ = ecx

; 1007 : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1008 : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@PAE@std@@@std@@SAIABV?$allocator@PAE@2@@Z ; std::allocator_traits<std::allocator<unsigned char *> >::max_size
	add	esp, 4

; 1009 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?max_size@?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QBEIU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned char *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QAEXPAPAEI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QAEXPAPAEI@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned char *> >::deallocate, COMDAT
; _this$ = ecx

; 986  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 987  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@PAE@std@@QAEXPAPAEI@Z ; std::allocator<unsigned char *>::deallocate

; 988  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QAEXPAPAEI@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned char *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QAEPAPAEI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QAEPAPAEI@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned char *> >::allocate, COMDAT
; _this$ = ecx

; 975  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 976  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@PAE@std@@QAEPAPAEI@Z ; std::allocator<unsigned char *>::allocate

; 977  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QAEPAPAEI@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned char *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??4?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QAEAAU01@$$QAU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??4?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QAEAAU01@$$QAU01@@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned char *> >::operator=, COMDAT
; _this$ = ecx

; 962  : 		{	// assign by moving

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 963  : 		_Mybase::operator=(_STD move(_Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$move@AAU?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@PAE@std@@@0@AAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<unsigned char *> > &>
	add	esp, 4

; 964  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 965  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QAEAAU01@$$QAU01@@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned char *> >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<unsigned char *> >::_Wrap_alloc<std::allocator<unsigned char *> >, COMDAT
; _this$ = ecx

; 936  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 935  : 		: _Mybase()

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@PAE@std@@QAE@XZ		; std::allocator<unsigned char *>::allocator<unsigned char *>

; 937  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@PAE@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<unsigned char *> >::_Wrap_alloc<std::allocator<unsigned char *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@PAE@std@@@std@@SAIABV?$allocator@PAE@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@PAE@std@@@std@@SAIABV?$allocator@PAE@2@@Z PROC ; std::allocator_traits<std::allocator<unsigned char *> >::max_size, COMDAT

; 868  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 869  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@PAE@std@@QBEIXZ	; std::allocator<unsigned char *>::max_size

; 870  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@PAE@std@@@std@@SAIABV?$allocator@PAE@2@@Z ENDP ; std::allocator_traits<std::allocator<unsigned char *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@PAE@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?max_size@?$allocator@PAE@std@@QBEIXZ PROC		; std::allocator<unsigned char *>::max_size, COMDAT
; _this$ = ecx

; 748  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 749  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 1073741823				; 3fffffffH

; 750  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@PAE@std@@QBEIXZ ENDP		; std::allocator<unsigned char *>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@PAE@std@@QAEPAPAEI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@PAE@std@@QAEPAPAEI@Z PROC		; std::allocator<unsigned char *>::allocate, COMDAT
; _this$ = ecx

; 724  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 725  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));

	push	1
	push	4
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	?_Allocate@std@@YAPAXII_N@Z		; std::_Allocate
	add	esp, 12					; 0000000cH

; 726  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@PAE@std@@QAEPAPAEI@Z ENDP		; std::allocator<unsigned char *>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@PAE@std@@QAEXPAPAEI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@PAE@std@@QAEXPAPAEI@Z PROC	; std::allocator<unsigned char *>::deallocate, COMDAT
; _this$ = ecx

; 719  : 		{	// deallocate object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 720  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 721  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@PAE@std@@QAEXPAPAEI@Z ENDP	; std::allocator<unsigned char *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@PAE@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@PAE@std@@QAE@XZ PROC			; std::allocator<unsigned char *>::allocator<unsigned char *>, COMDAT
; _this$ = ecx

; 699  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 700  : 		{	// construct default allocator (do nothing)
; 701  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@PAE@std@@QAE@XZ ENDP			; std::allocator<unsigned char *>::allocator<unsigned char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::~_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::~_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator--, COMDAT
; _this$ = ecx

; 424  : 		{	// predecrement

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 425  : 		--static_cast<_Mybase&>(*this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator--

; 426  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 427  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator--
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator++, COMDAT
; _this$ = ecx

; 411  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 412  : 		++static_cast<_Mybase&>(*this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator++

; 413  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 414  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator->, COMDAT
; _this$ = ecx

; 406  : 		{	// return pointer to class object

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 407  : 		return (pointer_traits<pointer>::pointer_to(**this));

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator*
	push	eax
	call	?pointer_to@?$pointer_traits@PAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@SAPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@AAU32@@Z ; std::pointer_traits<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > *>::pointer_to
	add	esp, 4

; 408  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator*, COMDAT
; _this$ = ecx

; 401  : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 		return ((reference)**(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator*

; 403  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >, COMDAT
; _this$ = ecx

; 384  : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 383  : 		: _Mybase(_Pnode, _Plist)

	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >

; 385  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::~_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::~_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator!=, COMDAT
; _this$ = ecx

; 340  : 		{	// test for iterator inequality

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 341  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 342  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv139 = -208						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator==, COMDAT
; _this$ = ecx

; 324  : 		{	// test for iterator equality

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 325  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 326  : 		if (this->_Getcont() != _Right._Getcont())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	esi, eax
	je	SHORT $LN2@operator

; 327  : 			{	// report error
; 328  : 			_DEBUG_ERROR("map/set iterators incompatible");

	push	328					; 00000148H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DO@CFEEPGGJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 329  : 			_SCL_SECURE_INVALID_ARGUMENT;

	mov	eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
	test	eax, eax
	je	SHORT $LN4@operator
	xor	ecx, ecx
	jne	SHORT $LN5@operator
$LN4@operator:
	push	OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	329					; 00000149H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN5@operator
	int	3
$LN5@operator:
	push	0
	push	329					; 00000149H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BKE@OPEFEOIF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator:

; 330  : 			}
; 331  : 
; 332  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 333  : 		_SCL_SECURE_VALIDATE(this->_Getcont() == _Right._Getcont());
; 334  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 335  : 
; 336  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN6@operator
	mov	DWORD PTR tv139[ebp], 1
	jmp	SHORT $LN7@operator
$LN6@operator:
	mov	DWORD PTR tv139[ebp], 0
$LN7@operator:
	mov	al, BYTE PTR tv139[ebp]

; 337  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Ptrsav$ = -20						; size = 4
_this$ = -8						; size = 4
??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator--, COMDAT
; _this$ = ecx

; 285  : 		{	// predecrement

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 286  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 287  : 		if (this->_Getcont() == 0
; 288  : 			|| this->_Ptr == nullptr_t{})

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@operator
$LN3@operator:

; 289  : 			{	// report error
; 290  : 			_DEBUG_ERROR("map/set iterator not decrementable");

	push	290					; 00000122H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@OKCGOALM@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 291  : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN6@operator
	xor	ecx, ecx
	jne	SHORT $LN7@operator
$LN6@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	291					; 00000123H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN7@operator
	int	3
$LN7@operator:
	push	0
	push	291					; 00000123H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BKE@LMIKBLIB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator:

; 292  : 			}
; 293  : 
; 294  : 		_Nodeptr _Ptrsav = this->_Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR __Ptrsav$[ebp], ecx

; 295  : 		--static_cast<_Mybase&>(*this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::operator--

; 296  : 		if (_Ptrsav == this->_Ptr)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptrsav$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN4@operator

; 297  : 			{	// report error
; 298  : 			_DEBUG_ERROR("map/set iterator not decrementable");

	push	298					; 0000012aH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@OKCGOALM@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 299  : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN8@operator
	xor	ecx, ecx
	jne	SHORT $LN9@operator
$LN8@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	299					; 0000012bH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN9@operator
	int	3
$LN9@operator:
	push	0
	push	299					; 0000012bH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BKE@LMIKBLIB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN4@operator:

; 300  : 			}
; 301  : 
; 302  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 303  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != nullptr_t{});
; 304  : 
; 305  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 306  : 		--static_cast<_Mybase&>(*this);
; 307  : 		_SCL_SECURE_VALIDATE(_Ptrsav != this->_Ptr);
; 308  : 
; 309  :  #else /* _ITERATOR_DEBUG_LEVEL == 0 */
; 310  : 		--static_cast<_Mybase&>(*this);
; 311  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 312  : 
; 313  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 314  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator--
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
$T2 = -244						; size = 4
__Tmp$ = -40						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator++, COMDAT
; _this$ = ecx

; 278  : 		{	// postincrement

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0

; 279  : 		_Myiter _Tmp = *this;

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 280  : 		++*this;

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator++

; 281  : 		return (_Tmp);

	lea	eax, DWORD PTR __Tmp$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 282  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN9@operator:
	DD	1
	DD	$LN8@operator
$LN8@operator:
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN6@operator
$LN6@operator:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z$0:
	lea	ecx, DWORD PTR __Tmp$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-252]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator++
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator++, COMDAT
; _this$ = ecx

; 258  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 259  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 260  : 		if (this->_Getcont() == 0
; 261  : 			|| this->_Ptr == nullptr_t{}
; 262  : 			|| _Mytree::_Isnil(this->_Ptr))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN2@operator
$LN3@operator:

; 263  : 			{	// report error
; 264  : 			_DEBUG_ERROR("map/set iterator not incrementable");

	push	264					; 00000108H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@EHJFMBHJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 265  : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	265					; 00000109H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	push	0
	push	265					; 00000109H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BKE@EPLIKHEA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator:

; 266  : 			}
; 267  : 
; 268  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 269  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != nullptr_t{});
; 270  : 		_SCL_SECURE_VALIDATE_RANGE(!_Mytree::_Isnil(this->_Ptr));
; 271  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 272  : 
; 273  : 		++static_cast<_Mybase&>(*this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::operator++

; 274  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 275  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@XZ
_TEXT	SEGMENT
__Mycont$ = -20						; size = 4
_this$ = -8						; size = 4
??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator*, COMDAT
; _this$ = ecx

; 231  : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 232  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 233  : 		const auto _Mycont = static_cast<const _Mytree *>(this->_Getcont());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	DWORD PTR __Mycont$[ebp], eax

; 234  : 		if (_Mycont == 0
; 235  : 			|| this->_Ptr == nullptr_t{}
; 236  : 			|| this->_Ptr == _Mycont->_Myhead)

	cmp	DWORD PTR __Mycont$[ebp], 0
	je	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Mycont$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN2@operator
$LN3@operator:

; 237  : 			{	// report error
; 238  : 			_DEBUG_ERROR("map/set iterator not dereferencable");

	push	238					; 000000eeH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EI@FHEHNNNM@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 239  : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	239					; 000000efH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	push	0
	push	239					; 000000efH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BKC@EGJEPFJH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator:

; 240  : 			}
; 241  : 
; 242  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 243  : 		_SCL_SECURE_VALIDATE(this->_Ptr != nullptr_t{});
; 244  : 		const auto _Mycont = static_cast<const _Mytree *>(this->_Getcont());
; 245  : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 246  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr != _Mycont->_Myhead);
; 247  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 248  : 
; 249  : 		return (_Mytree::_Myval(this->_Ptr));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Myval
	add	esp, 4

; 250  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >, COMDAT
; _this$ = ecx

; 214  : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 213  : 		: _Mybase(_Pnode, _Plist)

	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>

; 215  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >, COMDAT
; _this$ = ecx

; 209  : 		{	// construct with null node pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 208  : 		: _Mybase()

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>

; 210  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@$$QAU01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Mynode, COMDAT
; _this$ = ecx

; 122  : 		{	// return node pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 123  : 		return (_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]

; 124  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Mynode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Pnode$1 = -20						; size = 4
_this$ = -8						; size = 4
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::operator--, COMDAT
; _this$ = ecx

; 84   : 		{	// predecrement

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 85   : 		if (_Mytree::_Isnil(_Ptr))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN4@operator

; 86   : 			_Ptr = _Mytree::_Right(_Ptr);	// end() ==> rightmost

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Right
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx+8], eax
	jmp	$LN5@operator
$LN4@operator:

; 87   : 		else if (!_Mytree::_Isnil(_Mytree::_Left(_Ptr)))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN2@operator

; 88   : 			_Ptr = _Mytree::_Max(

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Max
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 89   : 				_Mytree::_Left(_Ptr));	// ==> largest of left subtree
; 90   : 		else

	jmp	SHORT $LN5@operator
$LN2@operator:

; 91   : 			{	// climb looking for left subtree
; 92   : 			_Nodeptr _Pnode;
; 93   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 94   : 				&& _Ptr == _Mytree::_Left(_Pnode))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$1[ebp], edx
	mov	eax, DWORD PTR __Pnode$1[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR __Pnode$1[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN3@operator

; 95   : 				_Ptr = _Pnode;	// ==> parent while left subtree

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$1[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN2@operator
$LN3@operator:

; 96   : 			if (_Mytree::_Isnil(_Ptr))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN8@operator

; 97   : 				;	// begin() shouldn't be decremented, don't move
; 98   : 			else

	jmp	SHORT $LN5@operator
$LN8@operator:

; 99   : 				_Ptr = _Pnode;	// ==> parent if not head

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$1[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN5@operator:

; 100  : 			}
; 101  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 102  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::operator--
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Pnode$1 = -20						; size = 4
_this$ = -8						; size = 4
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::operator++, COMDAT
; _this$ = ecx

; 59   : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 60   : 		if (_Mytree::_Isnil(_Ptr))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN4@operator
	jmp	$LN5@operator
$LN4@operator:

; 61   : 			;	// end() shouldn't be incremented, don't move
; 62   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN2@operator

; 63   : 			_Ptr = _Mytree::_Min(

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Min
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 64   : 				_Mytree::_Right(_Ptr));	// ==> smallest of right subtree
; 65   : 		else

	jmp	SHORT $LN5@operator
$LN2@operator:

; 66   : 			{	// climb looking for right subtree
; 67   : 			_Nodeptr _Pnode;
; 68   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 69   : 				&& _Ptr == _Mytree::_Right(_Pnode))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$1[ebp], edx
	mov	eax, DWORD PTR __Pnode$1[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR __Pnode$1[ebp]
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN3@operator

; 70   : 				_Ptr = _Pnode;	// ==> parent while right subtree

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$1[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN2@operator
$LN3@operator:

; 71   : 			_Ptr = _Pnode;	// ==> parent (head if end())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$1[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN5@operator:

; 72   : 			}
; 73   : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 74   : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx

; 44   : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 45   : 		this->_Adopt(_Plist);

	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 46   : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx

; 39   : 		{	// construct with null node pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ

; 38   : 		: _Ptr()

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 40   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z PROC ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,int,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const *,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const &,std::_Iterator_base12>::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,int,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const *,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const &,std::_Iterator_base12>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@$$QAU01@@Z PROC ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,int,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const *,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,int,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const *,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@$$QAU01@@Z ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,int,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const *,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,int,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const *,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z PROC ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,int,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const *,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,int,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const *,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,int,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const *,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,int,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const *,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,int,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const *,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,int,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const *,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,int,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const *,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,int,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const *,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,int,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const *,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,int,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const *,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,int,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const *,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,int,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const *,std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEPAXI@Z PROC ; std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	20					; 00000014H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEPAXI@Z ENDP ; std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@XZ PROC ; std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >::~pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$vector@EV?$allocator@E@std@@@std@@QAE@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@XZ ENDP ; std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >::~pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\windows\fastgh3\plugins\code\core\patchmanager.cpp
;	COMDAT ??0?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@ABU01@@Z PROC ; std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >, COMDAT
; _this$ = ecx

; 41   : 	}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$vector@EV?$allocator@E@std@@@std@@QAE@ABV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> >
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@ABU01@@Z ENDP ; std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Xlen@?$vector@EV?$allocator@E@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xlen@?$vector@EV?$allocator@E@std@@@std@@IBEXXZ PROC	; std::vector<unsigned char,std::allocator<unsigned char> >::_Xlen, COMDAT
; _this$ = ecx

; 1764 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1765 : 		_Xlength_error("vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 1766 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@EV?$allocator@E@std@@@std@@IBEXXZ ENDP	; std::vector<unsigned char,std::allocator<unsigned char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Tidy@?$vector@EV?$allocator@E@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Tidy@?$vector@EV?$allocator@E@std@@@std@@IAEXXZ PROC	; std::vector<unsigned char,std::allocator<unsigned char> >::_Tidy, COMDAT
; _this$ = ecx

; 1636 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1637 : 		if (this->_Myfirst() != pointer())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst
	cmp	DWORD PTR [eax], 0
	je	$LN1@Tidy

; 1638 : 			{	// something to free, destroy and deallocate it
; 1639 : 			this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Orphan_all

; 1640 : 			_Destroy(this->_Myfirst(), this->_Mylast());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Mylast
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@EV?$allocator@E@std@@@std@@IAEXPAE0@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Destroy

; 1641 : 			this->_Getal().deallocate(this->_Myfirst(),

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myend
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst
	mov	ecx, DWORD PTR [esi]
	sub	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAEXPAEI@Z ; std::_Wrap_alloc<std::allocator<unsigned char> >::deallocate

; 1642 : 				this->_Myend() - this->_Myfirst());
; 1643 : 			this->_Myfirst() = pointer();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst
	mov	DWORD PTR [eax], 0

; 1644 : 			this->_Mylast() = pointer();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Mylast
	mov	DWORD PTR [eax], 0

; 1645 : 			this->_Myend() = pointer();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myend
	mov	DWORD PTR [eax], 0
$LN1@Tidy:

; 1646 : 			}
; 1647 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@EV?$allocator@E@std@@@std@@IAEXXZ ENDP	; std::vector<unsigned char,std::allocator<unsigned char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@EV?$allocator@E@std@@@std@@IAEXPAE0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@EV?$allocator@E@std@@@std@@IAEXPAE0@Z PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::_Destroy, COMDAT
; _this$ = ecx

; 1580 : 		{	// destroy [_First, _Last) using allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1581 : 		_Destroy_range(_First, _Last, this->_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Getal
	push	eax
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Destroy_range@V?$allocator@E@std@@PAE@std@@YAXPAE0AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z ; std::_Destroy_range<std::allocator<unsigned char>,unsigned char *>
	add	esp, 12					; 0000000cH

; 1582 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@EV?$allocator@E@std@@@std@@IAEXPAE0@Z ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Buy@?$vector@EV?$allocator@E@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Capacity$ = 8						; size = 4
?_Buy@?$vector@EV?$allocator@E@std@@@std@@IAE_NI@Z PROC	; std::vector<unsigned char,std::allocator<unsigned char> >::_Buy, COMDAT
; _this$ = ecx

; 1561 : 		{	// allocate array with _Capacity elements

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1562 : 		this->_Myfirst() = pointer();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst
	mov	DWORD PTR [eax], 0

; 1563 : 		this->_Mylast() = pointer();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Mylast
	mov	DWORD PTR [eax], 0

; 1564 : 		this->_Myend() = pointer();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myend
	mov	DWORD PTR [eax], 0

; 1565 : 
; 1566 : 		if (_Capacity == 0)

	cmp	DWORD PTR __Capacity$[ebp], 0
	jne	SHORT $LN2@Buy

; 1567 : 			return (false);

	xor	al, al
	jmp	SHORT $LN6@Buy
	jmp	SHORT $LN3@Buy
$LN2@Buy:

; 1568 : 		else if (max_size() < _Capacity)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::max_size
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Buy

; 1569 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@EV?$allocator@E@std@@@std@@IBEXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Xlen

; 1570 : 		else

	jmp	SHORT $LN3@Buy
$LN4@Buy:

; 1571 : 			{	// nonempty array, allocate storage
; 1572 : 			this->_Myfirst() = this->_Getal().allocate(_Capacity);

	mov	eax, DWORD PTR __Capacity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAEPAEI@Z ; std::_Wrap_alloc<std::allocator<unsigned char> >::allocate
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst
	mov	DWORD PTR [eax], esi

; 1573 : 			this->_Mylast() = this->_Myfirst();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Mylast
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1574 : 			this->_Myend() = this->_Myfirst() + _Capacity;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst
	mov	esi, DWORD PTR [eax]
	add	esi, DWORD PTR __Capacity$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myend
	mov	DWORD PTR [eax], esi
$LN3@Buy:

; 1575 : 			}
; 1576 : 		return (true);

	mov	al, 1
$LN6@Buy:

; 1577 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Buy@?$vector@EV?$allocator@E@std@@@std@@IAE_NI@Z ENDP	; std::vector<unsigned char,std::allocator<unsigned char> >::_Buy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?clear@?$vector@EV?$allocator@E@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?clear@?$vector@EV?$allocator@E@std@@@std@@QAEXXZ PROC	; std::vector<unsigned char,std::allocator<unsigned char> >::clear, COMDAT
; _this$ = ecx

; 1539 : 		{	// erase all

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?clear@?$vector@EV?$allocator@E@std@@@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1540 : 		this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Orphan_all

; 1541 : 		_Destroy(this->_Myfirst(), this->_Mylast());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Mylast
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@EV?$allocator@E@std@@@std@@IAEXPAE0@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Destroy

; 1542 : 		this->_Mylast() = this->_Myfirst();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Mylast
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1543 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?clear@?$vector@EV?$allocator@E@std@@@std@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?clear@?$vector@EV?$allocator@E@std@@@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clear@?$vector@EV?$allocator@E@std@@@std@@QAEXXZ ENDP	; std::vector<unsigned char,std::allocator<unsigned char> >::clear
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??A?$vector@EV?$allocator@E@std@@@std@@QAEAAEI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@EV?$allocator@E@std@@@std@@QAEAAEI@Z PROC	; std::vector<unsigned char,std::allocator<unsigned char> >::operator[], COMDAT
; _this$ = ecx

; 1230 : 		{	// subscript mutable sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1231 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1232 : 		if (size() <= _Pos)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::size
	cmp	eax, DWORD PTR __Pos$[ebp]
	ja	SHORT $LN2@operator

; 1233 : 			{	// report error
; 1234 : 			_DEBUG_ERROR("vector subscript out of range");

	push	1234					; 000004d2H
	push	OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 1235 : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN4@operator
	xor	ecx, ecx
	jne	SHORT $LN5@operator
$LN4@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	1235					; 000004d3H
	push	OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN5@operator
	int	3
$LN5@operator:
	push	0
	push	1235					; 000004d3H
	push	OFFSET ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1JK@PKCFAHNP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAu?$AAn?$AAs?$AAi?$AAg?$AAn?$AAe?$AAd?$AA?5?$AAc?$AAh?$AAa?$AAr?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator:

; 1236 : 			}
; 1237 : 
; 1238 :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 1239 : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 1240 :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 1241 : 
; 1242 : 		return (*(this->_Myfirst() + _Pos));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR __Pos$[ebp]

; 1243 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@EV?$allocator@E@std@@@std@@QAEAAEI@Z ENDP	; std::vector<unsigned char,std::allocator<unsigned char> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?empty@?$vector@EV?$allocator@E@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
tv77 = -208						; size = 4
_this$ = -8						; size = 4
?empty@?$vector@EV?$allocator@E@std@@@std@@QBE_NXZ PROC	; std::vector<unsigned char,std::allocator<unsigned char> >::empty, COMDAT
; _this$ = ecx

; 1189 : 		{	// test if sequence is empty

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1190 : 		return (this->_Myfirst() == this->_Mylast());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABQAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABQAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Mylast
	mov	ecx, DWORD PTR [esi]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN3@empty
	mov	DWORD PTR tv77[ebp], 1
	jmp	SHORT $LN4@empty
$LN3@empty:
	mov	DWORD PTR tv77[ebp], 0
$LN4@empty:
	mov	al, BYTE PTR tv77[ebp]

; 1191 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?empty@?$vector@EV?$allocator@E@std@@@std@@QBE_NXZ ENDP	; std::vector<unsigned char,std::allocator<unsigned char> >::empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?max_size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
?max_size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::max_size, COMDAT
; _this$ = ecx

; 1184 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1185 : 		return (this->_Getal().max_size());

	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<unsigned char> >::max_size

; 1186 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ PROC	; std::vector<unsigned char,std::allocator<unsigned char> >::size, COMDAT
; _this$ = ecx

; 1179 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1180 : 		return (this->_Mylast() - this->_Myfirst());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABQAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Mylast
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABQAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst
	mov	ecx, DWORD PTR [esi]
	sub	ecx, DWORD PTR [eax]
	mov	eax, ecx

; 1181 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ ENDP	; std::vector<unsigned char,std::allocator<unsigned char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?end@?$vector@EV?$allocator@E@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@EV?$allocator@E@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@2@XZ PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::end, COMDAT
; _this$ = ecx

; 1072 : 		{	// return iterator for end of nonmutable sequence

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?end@?$vector@EV?$allocator@E@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1073 : 		return (const_iterator(this->_Mylast(), &this->_Get_data()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@E@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Get_data
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABQAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Mylast
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@PAEPBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1074 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?end@?$vector@EV?$allocator@E@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?end@?$vector@EV?$allocator@E@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?end@?$vector@EV?$allocator@E@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@2@XZ ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::end
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?begin@?$vector@EV?$allocator@E@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@EV?$allocator@E@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@2@XZ PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::begin, COMDAT
; _this$ = ecx

; 1062 : 		{	// return iterator for beginning of nonmutable sequence

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?begin@?$vector@EV?$allocator@E@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1063 : 		return (const_iterator(this->_Myfirst(), &this->_Get_data()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@E@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Get_data
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABQAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@PAEPBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1064 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?begin@?$vector@EV?$allocator@E@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?begin@?$vector@EV?$allocator@E@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?begin@?$vector@EV?$allocator@E@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@2@XZ ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::begin
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?capacity@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?capacity@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::capacity, COMDAT
; _this$ = ecx

; 1042 : 		{	// return current length of allocated storage

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1043 : 		return (this->_Myend() - this->_Myfirst());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABQAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myend
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABQAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst
	mov	ecx, DWORD PTR [esi]
	sub	ecx, DWORD PTR [eax]
	mov	eax, ecx

; 1044 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??4?$vector@EV?$allocator@E@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
tv331 = -248						; size = 4
__Ptr$2 = -48						; size = 4
__Ptr$3 = -36						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Right$ = 8						; size = 4
??4?$vector@EV?$allocator@E@std@@@std@@QAEAAV01@ABV01@@Z PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=, COMDAT
; _this$ = ecx

; 980  : 		{	// assign _Right

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??4?$vector@EV?$allocator@E@std@@@std@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 981  : 		if (this != &_Right)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	je	$LN2@operator

; 982  : 			{	// different, assign it
; 983  : 			if (this->_Getal() != _Right._Getal()
; 984  : 				&& _Alty::propagate_on_container_copy_assignment::value)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Getal
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Getal
	push	eax
	call	??$?9V?$allocator@E@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@E@std@@@0@0@Z ; std::operator!=<std::allocator<unsigned char>,std::allocator<unsigned char> >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	xor	eax, eax
	je	SHORT $LN3@operator

; 985  : 				{	// change allocator before copying
; 986  : 				_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@EV?$allocator@E@std@@@std@@IAEXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Tidy

; 987  : 				this->_Copy_alloc(_Right._Getal());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Getal
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy_alloc@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEXABU?$_Wrap_alloc@V?$allocator@E@std@@@2@@Z ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Copy_alloc
$LN3@operator:

; 988  : 				}
; 989  : 
; 990  : 			this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Orphan_all

; 991  : 
; 992  : 			if (_Right.empty())

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?empty@?$vector@EV?$allocator@E@std@@@std@@QBE_NXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::empty
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@operator

; 993  : 				clear();	// new sequence empty, erase existing sequence

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$vector@EV?$allocator@E@std@@@std@@QAEXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::clear
	jmp	$LN2@operator
$LN4@operator:

; 994  : 			else if (_Right.size() <= size())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::size
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::size
	cmp	eax, esi
	ja	SHORT $LN6@operator

; 995  : 				{	// enough elements, copy new and destroy old
; 996  : 				pointer _Ptr = _Copy_unchecked(_Right._Myfirst(),

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABQAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Mylast
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABQAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst
	mov	edx, DWORD PTR [eax]
	push	edx
	call	??$_Copy_unchecked@PAEPAE@std@@YAPAEPAE00@Z ; std::_Copy_unchecked<unsigned char *,unsigned char *>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Ptr$3[ebp], eax

; 997  : 					_Right._Mylast(), this->_Myfirst());	// copy new
; 998  : 				_Destroy(_Ptr, this->_Mylast());	// destroy old

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Mylast
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR __Ptr$3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@EV?$allocator@E@std@@@std@@IAEXPAE0@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Destroy

; 999  : 				this->_Mylast() = this->_Myfirst() + _Right.size();

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst
	add	esi, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Mylast
	mov	DWORD PTR [eax], esi
	jmp	$LN2@operator
$LN6@operator:

; 1000 : 				}
; 1001 : 			else if (_Right.size() <= capacity())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::capacity
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::size
	cmp	eax, esi
	ja	SHORT $LN8@operator

; 1002 : 				{	// enough room, copy and construct new
; 1003 : 				pointer _Ptr = _Right._Myfirst() + size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::size
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABQAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst
	add	esi, DWORD PTR [eax]
	mov	DWORD PTR __Ptr$2[ebp], esi

; 1004 : 				_Copy_unchecked(_Right._Myfirst(),

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR __Ptr$2[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABQAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst
	mov	edx, DWORD PTR [eax]
	push	edx
	call	??$_Copy_unchecked@PAEPAE@std@@YAPAEPAE00@Z ; std::_Copy_unchecked<unsigned char *,unsigned char *>
	add	esp, 12					; 0000000cH

; 1005 : 					_Ptr, this->_Myfirst());
; 1006 : 				this->_Mylast() = _Ucopy(_Ptr, _Right._Mylast(),

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Mylast
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABQAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Mylast
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Ucopy@PAE@?$vector@EV?$allocator@E@std@@@std@@IAEPAEPAE00@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Ucopy<unsigned char *>
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Mylast
	mov	DWORD PTR [eax], esi

; 1007 : 					this->_Mylast());
; 1008 : 				}
; 1009 : 			else

	jmp	$LN2@operator
$LN8@operator:

; 1010 : 				{	// not enough room, allocate new array and construct new
; 1011 : 				if (this->_Myfirst() != pointer())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN10@operator

; 1012 : 					{	// discard old array
; 1013 : 					_Destroy(this->_Myfirst(), this->_Mylast());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Mylast
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@EV?$allocator@E@std@@@std@@IAEXPAE0@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Destroy

; 1014 : 					this->_Getal().deallocate(this->_Myfirst(),

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myend
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR [esi]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAEXPAEI@Z ; std::_Wrap_alloc<std::allocator<unsigned char> >::deallocate
$LN10@operator:

; 1015 : 						this->_Myend() - this->_Myfirst());
; 1016 : 					}
; 1017 : 				if (_Buy(_Right.size()))

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::size
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buy@?$vector@EV?$allocator@E@std@@@std@@IAE_NI@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Buy
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@operator

; 1018 : 					_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1019 : 					this->_Mylast() =

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABQAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Mylast
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABQAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Ucopy@PAE@?$vector@EV?$allocator@E@std@@@std@@IAEPAEPAE00@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Ucopy<unsigned char *>
	mov	DWORD PTR tv331[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Mylast
	mov	ecx, DWORD PTR tv331[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN14@operator
__catch$??4?$vector@EV?$allocator@E@std@@@std@@QAEAAV01@ABV01@@Z$0:

; 1020 : 						_Ucopy(_Right._Myfirst(), _Right._Mylast(),
; 1021 : 						this->_Myfirst());
; 1022 : 					_CATCH_ALL
; 1023 : 					_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@EV?$allocator@E@std@@@std@@IAEXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Tidy

; 1024 : 					_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1025 : 					_CATCH_END

	mov	eax, $LN17@operator
	ret	0
$LN14@operator:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN2@operator
$LN17@operator:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN2@operator:

; 1026 : 				}
; 1027 : 			}
; 1028 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN13@operator:

; 1029 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??4?$vector@EV?$allocator@E@std@@@std@@QAEAAV01@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-252]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??4?$vector@EV?$allocator@E@std@@@std@@QAEAAV01@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??4?$vector@EV?$allocator@E@std@@@std@@QAEAAV01@ABV01@@Z ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??1?$vector@EV?$allocator@E@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@EV?$allocator@E@std@@@std@@QAE@XZ PROC	; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >, COMDAT
; _this$ = ecx

; 975  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@EV?$allocator@E@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 976  : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@EV?$allocator@E@std@@@std@@IAEXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Tidy

; 977  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::~_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$vector@EV?$allocator@E@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@EV?$allocator@E@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@EV?$allocator@E@std@@@std@@QAE@XZ ENDP	; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$vector@EV?$allocator@E@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv132 = -280						; size = 4
tv176 = -276						; size = 4
tv173 = -272						; size = 4
$T2 = -264						; size = 4
$T3 = -252						; size = 4
$T4 = -237						; size = 1
$T5 = -225						; size = 1
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Right$ = 8						; size = 4
??0?$vector@EV?$allocator@E@std@@@std@@QAE@ABV01@@Z PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> >, COMDAT
; _this$ = ecx

; 748  : 		{	// construct by copying _Right

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@EV?$allocator@E@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 745  : 		: _Mybase(_Right._Getal().select_on_container_copy_construction())

	movzx	eax, BYTE PTR $T5[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Getal
	mov	ecx, eax
	call	?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QBE?AU12@U_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<unsigned char> >::select_on_container_copy_construction
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0U?$_Wrap_alloc@V?$allocator@E@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@E@std@@@1@@Z ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > ><std::_Wrap_alloc<std::allocator<unsigned char> >,void>
	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 749  : 		if (_Buy(_Right.size()))

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::size
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buy@?$vector@EV?$allocator@E@std@@@std@@IAE_NI@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Buy
	movzx	eax, al
	test	eax, eax
	je	$LN1@vector

; 750  : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 1

; 751  : 			this->_Mylast() = _Ucopy(_Right.begin(), _Right.end(),

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst
	mov	eax, DWORD PTR [eax]
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?end@?$vector@EV?$allocator@E@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@2@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::end
	mov	DWORD PTR tv173[ebp], eax
	sub	esp, 12					; 0000000cH
	mov	edx, esp
	mov	DWORD PTR $T2[ebp], esp
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?begin@?$vector@EV?$allocator@E@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@2@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::begin
	mov	DWORD PTR tv176[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@@?$vector@EV?$allocator@E@std@@@std@@IAEPAEV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@1@0PAE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > > >
	mov	DWORD PTR tv132[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Mylast
	mov	ecx, DWORD PTR tv132[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN5@vector
__catch$??0?$vector@EV?$allocator@E@std@@@std@@QAE@ABV01@@Z$0:

; 752  : 				this->_Myfirst());
; 753  : 			_CATCH_ALL
; 754  : 			_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@EV?$allocator@E@std@@@std@@IAEXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Tidy

; 755  : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 756  : 			_CATCH_END

	mov	eax, $LN11@vector
	ret	0
$LN5@vector:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN1@vector
$LN11@vector:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN1@vector:

; 757  : 		}

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@EV?$allocator@E@std@@@std@@QAE@ABV01@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::~_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >
__ehhandler$??0?$vector@EV?$allocator@E@std@@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-284]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@EV?$allocator@E@std@@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@EV?$allocator@E@std@@@std@@QAE@ABV01@@Z ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$vector@EV?$allocator@E@std@@@std@@QAE@I@Z
_TEXT	SEGMENT
tv133 = -224						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
??0?$vector@EV?$allocator@E@std@@@std@@QAE@I@Z PROC	; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> >, COMDAT
; _this$ = ecx

; 717  : 		{	// construct from _Count * value_type()

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@EV?$allocator@E@std@@@std@@QAE@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 716  : 		: _Mybase()

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >
	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 718  : 		if (_Buy(_Count))

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buy@?$vector@EV?$allocator@E@std@@@std@@IAE_NI@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Buy
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@vector

; 719  : 			{	// nonzero, fill it
; 720  : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 1

; 721  : 			_Uninitialized_default_fill_n(this->_Myfirst(), _Count,

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Getal
	push	eax
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??$_Uninitialized_default_fill_n@PAEIV?$allocator@E@std@@@std@@YAXPAEIAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z ; std::_Uninitialized_default_fill_n<unsigned char *,unsigned int,std::allocator<unsigned char> >
	add	esp, 12					; 0000000cH

; 722  : 				this->_Getal());
; 723  : 			this->_Mylast() += _Count;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Mylast
	mov	DWORD PTR tv133[ebp], eax
	mov	eax, DWORD PTR tv133[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR tv133[ebp]
	mov	DWORD PTR [edx], ecx
	jmp	SHORT $LN5@vector
__catch$??0?$vector@EV?$allocator@E@std@@@std@@QAE@I@Z$0:

; 724  : 			_CATCH_ALL
; 725  : 			_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@EV?$allocator@E@std@@@std@@IAEXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Tidy

; 726  : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 727  : 			_CATCH_END

	mov	eax, $LN9@vector
	ret	0
$LN5@vector:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN1@vector
$LN9@vector:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN1@vector:

; 728  : 			}
; 729  : 		}

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@EV?$allocator@E@std@@@std@@QAE@I@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::~_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >
__ehhandler$??0?$vector@EV?$allocator@E@std@@@std@@QAE@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-228]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@EV?$allocator@E@std@@@std@@QAE@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@EV?$allocator@E@std@@@std@@QAE@I@Z ENDP	; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$vector@EV?$allocator@E@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$vector@EV?$allocator@E@std@@@std@@QAE@XZ PROC	; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> >, COMDAT
; _this$ = ecx

; 707  : 		{	// construct empty vector

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@EV?$allocator@E@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 706  : 		: _Mybase()

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >

; 708  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$vector@EV?$allocator@E@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@EV?$allocator@E@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@EV?$allocator@E@std@@@std@@QAE@XZ ENDP	; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_val@U?$_Simple_types@E@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@E@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@E@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 319  : 		{	// return const reference to second

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 320  : 		return (_Myval2);

	mov	eax, DWORD PTR _this$[ebp]

; 321  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@E@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@E@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@E@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 314  : 		{	// return reference to second

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 315  : 		return (_Myval2);

	mov	eax, DWORD PTR _this$[ebp]

; 316  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@E@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 299  : 		{	// return const reference to first

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 300  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 301  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 294  : 		{	// return reference to first

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 295  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 296  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@E@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Vector_val@U?$_Simple_types@E@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<unsigned char> >::~_Vector_val<std::_Simple_types<unsigned char> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@U?$_Simple_types@E@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<unsigned char> >::~_Vector_val<std::_Simple_types<unsigned char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@E@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Vector_val@U?$_Simple_types@E@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<unsigned char> >::_Vector_val<std::_Simple_types<unsigned char> >, COMDAT
; _this$ = ecx

; 488  : 		{	// initialize values

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12

; 485  : 		: _Myfirst(),

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 486  : 		_Mylast(),

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 487  : 		_Myend()

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0

; 489  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Vector_val@U?$_Simple_types@E@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<unsigned char> >::_Vector_val<std::_Simple_types<unsigned char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABQAEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABQAEXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myend, COMDAT
; _this$ = ecx

; 667  : 		{	// return const reference to _Myend

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 668  : 		return (_Get_data()._Myend);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@E@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Get_data
	add	eax, 12					; 0000000cH

; 669  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABQAEXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myend, COMDAT
; _this$ = ecx

; 662  : 		{	// return reference to _Myend

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 663  : 		return (_Get_data()._Myend);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@E@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Get_data
	add	eax, 12					; 0000000cH

; 664  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABQAEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABQAEXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Mylast, COMDAT
; _this$ = ecx

; 657  : 		{	// return const reference to _Mylast

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 658  : 		return (_Get_data()._Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@E@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Get_data
	add	eax, 8

; 659  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABQAEXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Mylast, COMDAT
; _this$ = ecx

; 652  : 		{	// return reference to _Mylast

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 653  : 		return (_Get_data()._Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@E@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Get_data
	add	eax, 8

; 654  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABQAEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABQAEXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst, COMDAT
; _this$ = ecx

; 647  : 		{	// return const reference to _Myfirst

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 648  : 		return (_Get_data()._Myfirst);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@E@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Get_data
	add	eax, 4

; 649  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABQAEXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst, COMDAT
; _this$ = ecx

; 642  : 		{	// return reference to _Myfirst

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 643  : 		return (_Get_data()._Myfirst);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@E@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Get_data
	add	eax, 4

; 644  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAEXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@E@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@E@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Get_data, COMDAT
; _this$ = ecx

; 637  : 		{	// return const reference to _Vector_val

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 638  : 		return (_Mypair._Get_second());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@E@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Get_second

; 639  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@E@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@E@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@E@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Get_data, COMDAT
; _this$ = ecx

; 632  : 		{	// return reference to _Vector_val

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 633  : 		return (_Mypair._Get_second());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@E@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Get_second

; 634  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@E@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Getal, COMDAT
; _this$ = ecx

; 627  : 		{	// return const reference to allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return (_Mypair._Get_first());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Get_first

; 629  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Getal, COMDAT
; _this$ = ecx

; 622  : 		{	// return reference to allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 623  : 		return (_Mypair._Get_first());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Get_first

; 624  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Orphan_all, COMDAT
; _this$ = ecx

; 612  : 		{	// orphan all iterators

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 613  : 		_Get_data()._Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@E@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Get_data
	mov	ecx, eax
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 614  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myproxy, COMDAT
; _this$ = ecx

; 601  : 		{	// return reference to _Myproxy

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 602  : 		return (_Get_data()._Myproxy);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@E@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Get_data

; 603  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myproxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -17					; size = 1
_this$ = -8						; size = 4
?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Free_proxy, COMDAT
; _this$ = ecx

; 586  : 		{	// destroy proxy

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 587  : 		typename _Alty::template rebind<_Container_proxy>::other
; 588  : 			_Alproxy(_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Getal
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0AAU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@E@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<unsigned char> > &>

; 589  : 		_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Orphan_all

; 590  : 		_Alproxy.destroy(_Myproxy());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myproxy
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>

; 591  : 		_Alproxy.deallocate(_Alproxy.address(*_Myproxy()), 1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myproxy
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QBEPAU_Container_proxy@2@AAU32@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate

; 592  : 		_Myproxy() = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myproxy
	mov	DWORD PTR [eax], 0

; 593  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Free_proxy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Free_proxy:
	DD	1
	DD	$LN4@Free_proxy
$LN4@Free_proxy:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@Free_proxy
$LN3@Free_proxy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -228						; size = 8
__Alproxy$ = -17					; size = 1
_this$ = -8						; size = 4
?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Alloc_proxy, COMDAT
; _this$ = ecx

; 577  : 		{	// construct proxy

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 578  : 		typename _Alty::template rebind<_Container_proxy>::other
; 579  : 			_Alproxy(_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Getal
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0AAU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@E@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<unsigned char> > &>

; 580  : 		_Myproxy() = _Unfancy(_Alproxy.allocate(1));

	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
	push	eax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myproxy
	mov	DWORD PTR [eax], esi

; 581  : 		_Alproxy.construct(_Myproxy(), _Container_proxy());

	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myproxy
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>

; 582  : 		_Myproxy()->_Mycont = &_Get_data();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@E@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Get_data
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Myproxy
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax], esi

; 583  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Alloc_prox
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@Alloc_prox:
	DD	1
	DD	$LN4@Alloc_prox
$LN4@Alloc_prox:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@Alloc_prox
$LN3@Alloc_prox:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Copy_alloc@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEXABU?$_Wrap_alloc@V?$allocator@E@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Al$ = 8						; size = 4
?_Copy_alloc@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEXABU?$_Wrap_alloc@V?$allocator@E@std@@@2@@Z PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Copy_alloc, COMDAT
; _this$ = ecx

; 563  : 		{	// replace old allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 564  : 		_Free_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Free_proxy

; 565  : 		_Pocca(_Getal(), _Al);

	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Getal
	push	eax
	call	??$_Pocca@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@ABU10@@Z ; std::_Pocca<std::_Wrap_alloc<std::allocator<unsigned char> > >
	add	esp, 8

; 566  : 		_Alloc_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Alloc_proxy

; 567  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Copy_alloc@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEXABU?$_Wrap_alloc@V?$allocator@E@std@@@2@@Z ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Copy_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??1?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::~_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy proxy

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 559  : 		_Free_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Free_proxy

; 560  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::~_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T2 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >, COMDAT
; _this$ = ecx

; 544  : 		{	// default construct allocator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 543  : 		: _Mypair(_Zero_then_variadic_args_t())

	movzx	eax, BYTE PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned char> >,std::_Vector_val<std::_Simple_types<unsigned char> >,1><>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 545  : 		_Alloc_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Alloc_proxy

; 546  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Vector_alloc<std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QBEIU_Nil@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
?max_size@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QBEIU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned char> >::max_size, COMDAT
; _this$ = ecx

; 1007 : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1008 : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@E@std@@@std@@SAIABV?$allocator@E@2@@Z ; std::allocator_traits<std::allocator<unsigned char> >::max_size
	add	esp, 4

; 1009 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?max_size@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QBEIU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAEXPAEI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAEXPAEI@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned char> >::deallocate, COMDAT
; _this$ = ecx

; 986  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 987  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@E@std@@QAEXPAEI@Z ; std::allocator<unsigned char>::deallocate

; 988  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAEXPAEI@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAEPAEI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAEPAEI@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned char> >::allocate, COMDAT
; _this$ = ecx

; 975  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 976  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@E@std@@QAEPAEI@Z	; std::allocator<unsigned char>::allocate

; 977  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAEPAEI@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??0?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAE@$$QAU01@@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned char> >::_Wrap_alloc<std::allocator<unsigned char> >, COMDAT
; _this$ = ecx

; 946  : 		{	// construct by moving

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 945  : 		: _Mybase(_STD move(_Right))

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$move@AAU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@E@std@@@0@AAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<unsigned char> > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@E@std@@QAE@ABV01@@Z	; std::allocator<unsigned char>::allocator<unsigned char>

; 947  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAE@$$QAU01@@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned char> >::_Wrap_alloc<std::allocator<unsigned char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<unsigned char> >::_Wrap_alloc<std::allocator<unsigned char> >, COMDAT
; _this$ = ecx

; 936  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 935  : 		: _Mybase()

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@E@std@@QAE@XZ		; std::allocator<unsigned char>::allocator<unsigned char>

; 937  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<unsigned char> >::_Wrap_alloc<std::allocator<unsigned char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QBE?AU12@U_Nil@2@@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 1
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QBE?AU12@U_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned char> >::select_on_container_copy_construction, COMDAT
; _this$ = ecx

; 912  : 		{	// get allocator to use

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 913  : 		return (_Mytraits::select_on_container_copy_construction(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	?select_on_container_copy_construction@?$allocator_traits@V?$allocator@E@std@@@std@@SA?AV?$allocator@E@2@ABV32@@Z ; std::allocator_traits<std::allocator<unsigned char> >::select_on_container_copy_construction
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$allocator@E@std@@@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAE@$$QAV?$allocator@E@1@@Z ; std::_Wrap_alloc<std::allocator<unsigned char> >::_Wrap_alloc<std::allocator<unsigned char> ><std::allocator<unsigned char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 914  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QBE?AU12@U_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned char> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?select_on_container_copy_construction@?$allocator_traits@V?$allocator@E@std@@@std@@SA?AV?$allocator@E@2@ABV32@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Al$ = 12						; size = 4
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@E@std@@@std@@SA?AV?$allocator@E@2@ABV32@@Z PROC ; std::allocator_traits<std::allocator<unsigned char> >::select_on_container_copy_construction, COMDAT

; 874  : 		{	// get allocator to use

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 875  : 		return (_Al);

	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$allocator@E@std@@QAE@ABV01@@Z	; std::allocator<unsigned char>::allocator<unsigned char>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 876  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@E@std@@@std@@SA?AV?$allocator@E@2@ABV32@@Z ENDP ; std::allocator_traits<std::allocator<unsigned char> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@E@std@@@std@@SAIABV?$allocator@E@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@E@std@@@std@@SAIABV?$allocator@E@2@@Z PROC ; std::allocator_traits<std::allocator<unsigned char> >::max_size, COMDAT

; 868  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 869  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@E@std@@QBEIXZ	; std::allocator<unsigned char>::max_size

; 870  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@E@std@@@std@@SAIABV?$allocator@E@2@@Z ENDP ; std::allocator_traits<std::allocator<unsigned char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@E@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?max_size@?$allocator@E@std@@QBEIXZ PROC		; std::allocator<unsigned char>::max_size, COMDAT
; _this$ = ecx

; 748  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 749  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 750  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@E@std@@QBEIXZ ENDP		; std::allocator<unsigned char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@E@std@@QAEPAEI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@E@std@@QAEPAEI@Z PROC		; std::allocator<unsigned char>::allocate, COMDAT
; _this$ = ecx

; 724  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 725  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));

	push	1
	push	1
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	?_Allocate@std@@YAPAXII_N@Z		; std::_Allocate
	add	esp, 12					; 0000000cH

; 726  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@E@std@@QAEPAEI@Z ENDP		; std::allocator<unsigned char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@E@std@@QAEXPAEI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@E@std@@QAEXPAEI@Z PROC		; std::allocator<unsigned char>::deallocate, COMDAT
; _this$ = ecx

; 719  : 		{	// deallocate object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 720  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	1
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 721  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@E@std@@QAEXPAEI@Z ENDP		; std::allocator<unsigned char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@E@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@E@std@@QAE@ABV01@@Z PROC			; std::allocator<unsigned char>::allocator<unsigned char>, COMDAT
; _this$ = ecx

; 703  : 	allocator(const allocator<_Ty>&) _THROW0()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 704  : 		{	// construct by copying (do nothing)
; 705  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@E@std@@QAE@ABV01@@Z ENDP			; std::allocator<unsigned char>::allocator<unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@E@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@E@std@@QAE@XZ PROC			; std::allocator<unsigned char>::allocator<unsigned char>, COMDAT
; _this$ = ecx

; 699  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 700  : 		{	// construct default allocator (do nothing)
; 701  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@E@std@@QAE@XZ ENDP			; std::allocator<unsigned char>::allocator<unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::~_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::~_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator--, COMDAT
; _this$ = ecx

; 424  : 		{	// predecrement

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 425  : 		--static_cast<_Mybase&>(*this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator--

; 426  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 427  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator--
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator++, COMDAT
; _this$ = ecx

; 411  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 412  : 		++static_cast<_Mybase&>(*this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator++

; 413  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 414  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBEPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBEPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator->, COMDAT
; _this$ = ecx

; 406  : 		{	// return pointer to class object

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 407  : 		return (pointer_traits<pointer>::pointer_to(**this));

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBEAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator*
	push	eax
	call	?pointer_to@?$pointer_traits@PAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@SAPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@AAU32@@Z ; std::pointer_traits<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > *>::pointer_to
	add	esp, 4

; 408  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBEPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBEAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBEAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator*, COMDAT
; _this$ = ecx

; 401  : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 		return ((reference)**(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBEABU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator*

; 403  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBEAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >, COMDAT
; _this$ = ecx

; 384  : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 383  : 		: _Mybase(_Pnode, _Plist)

	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >

; 385  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::~_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::~_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator!=, COMDAT
; _this$ = ecx

; 340  : 		{	// test for iterator inequality

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 341  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 342  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv139 = -208						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator==, COMDAT
; _this$ = ecx

; 324  : 		{	// test for iterator equality

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 325  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 326  : 		if (this->_Getcont() != _Right._Getcont())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	esi, eax
	je	SHORT $LN2@operator

; 327  : 			{	// report error
; 328  : 			_DEBUG_ERROR("map/set iterators incompatible");

	push	328					; 00000148H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DO@CFEEPGGJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 329  : 			_SCL_SECURE_INVALID_ARGUMENT;

	mov	eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
	test	eax, eax
	je	SHORT $LN4@operator
	xor	ecx, ecx
	jne	SHORT $LN5@operator
$LN4@operator:
	push	OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	329					; 00000149H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN5@operator
	int	3
$LN5@operator:
	push	0
	push	329					; 00000149H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BKA@BAPCOJKI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator:

; 330  : 			}
; 331  : 
; 332  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 333  : 		_SCL_SECURE_VALIDATE(this->_Getcont() == _Right._Getcont());
; 334  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 335  : 
; 336  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN6@operator
	mov	DWORD PTR tv139[ebp], 1
	jmp	SHORT $LN7@operator
$LN6@operator:
	mov	DWORD PTR tv139[ebp], 0
$LN7@operator:
	mov	al, BYTE PTR tv139[ebp]

; 337  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Ptrsav$ = -20						; size = 4
_this$ = -8						; size = 4
??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator--, COMDAT
; _this$ = ecx

; 285  : 		{	// predecrement

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 286  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 287  : 		if (this->_Getcont() == 0
; 288  : 			|| this->_Ptr == nullptr_t{})

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@operator
$LN3@operator:

; 289  : 			{	// report error
; 290  : 			_DEBUG_ERROR("map/set iterator not decrementable");

	push	290					; 00000122H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@OKCGOALM@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 291  : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN6@operator
	xor	ecx, ecx
	jne	SHORT $LN7@operator
$LN6@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	291					; 00000123H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN7@operator
	int	3
$LN7@operator:
	push	0
	push	291					; 00000123H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BKA@EDDNLMKM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator:

; 292  : 			}
; 293  : 
; 294  : 		_Nodeptr _Ptrsav = this->_Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR __Ptrsav$[ebp], ecx

; 295  : 		--static_cast<_Mybase&>(*this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::operator--

; 296  : 		if (_Ptrsav == this->_Ptr)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptrsav$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN4@operator

; 297  : 			{	// report error
; 298  : 			_DEBUG_ERROR("map/set iterator not decrementable");

	push	298					; 0000012aH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@OKCGOALM@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 299  : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN8@operator
	xor	ecx, ecx
	jne	SHORT $LN9@operator
$LN8@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	299					; 0000012bH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN9@operator
	int	3
$LN9@operator:
	push	0
	push	299					; 0000012bH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BKA@EDDNLMKM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN4@operator:

; 300  : 			}
; 301  : 
; 302  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 303  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != nullptr_t{});
; 304  : 
; 305  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 306  : 		--static_cast<_Mybase&>(*this);
; 307  : 		_SCL_SECURE_VALIDATE(_Ptrsav != this->_Ptr);
; 308  : 
; 309  :  #else /* _ITERATOR_DEBUG_LEVEL == 0 */
; 310  : 		--static_cast<_Mybase&>(*this);
; 311  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 312  : 
; 313  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 314  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator--
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
$T2 = -244						; size = 4
__Tmp$ = -40						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator++, COMDAT
; _this$ = ecx

; 278  : 		{	// postincrement

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0

; 279  : 		_Myiter _Tmp = *this;

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 280  : 		++*this;

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator++

; 281  : 		return (_Tmp);

	lea	eax, DWORD PTR __Tmp$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 282  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN9@operator:
	DD	1
	DD	$LN8@operator
$LN8@operator:
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN6@operator
$LN6@operator:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z$0:
	lea	ecx, DWORD PTR __Tmp$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-252]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator++
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator++, COMDAT
; _this$ = ecx

; 258  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 259  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 260  : 		if (this->_Getcont() == 0
; 261  : 			|| this->_Ptr == nullptr_t{}
; 262  : 			|| _Mytree::_Isnil(this->_Ptr))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN2@operator
$LN3@operator:

; 263  : 			{	// report error
; 264  : 			_DEBUG_ERROR("map/set iterator not incrementable");

	push	264					; 00000108H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@EHJFMBHJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 265  : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	265					; 00000109H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	push	0
	push	265					; 00000109H
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BKA@LAAPAAGN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator:

; 266  : 			}
; 267  : 
; 268  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 269  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != nullptr_t{});
; 270  : 		_SCL_SECURE_VALIDATE_RANGE(!_Mytree::_Isnil(this->_Ptr));
; 271  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 272  : 
; 273  : 		++static_cast<_Mybase&>(*this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::operator++

; 274  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 275  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBEABU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@XZ
_TEXT	SEGMENT
__Mycont$ = -20						; size = 4
_this$ = -8						; size = 4
??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBEABU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator*, COMDAT
; _this$ = ecx

; 231  : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 232  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 233  : 		const auto _Mycont = static_cast<const _Mytree *>(this->_Getcont());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	DWORD PTR __Mycont$[ebp], eax

; 234  : 		if (_Mycont == 0
; 235  : 			|| this->_Ptr == nullptr_t{}
; 236  : 			|| this->_Ptr == _Mycont->_Myhead)

	cmp	DWORD PTR __Mycont$[ebp], 0
	je	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Mycont$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN2@operator
$LN3@operator:

; 237  : 			{	// report error
; 238  : 			_DEBUG_ERROR("map/set iterator not dereferencable");

	push	238					; 000000eeH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EI@FHEHNNNM@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 239  : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	239					; 000000efH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	push	0
	push	239					; 000000efH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BJO@DGGMCDKA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator:

; 240  : 			}
; 241  : 
; 242  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 243  : 		_SCL_SECURE_VALIDATE(this->_Ptr != nullptr_t{});
; 244  : 		const auto _Mycont = static_cast<const _Mytree *>(this->_Getcont());
; 245  : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 246  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr != _Mycont->_Myhead);
; 247  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 248  : 
; 249  : 		return (_Mytree::_Myval(this->_Ptr));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Myval
	add	esp, 4

; 250  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBEABU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >, COMDAT
; _this$ = ecx

; 214  : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 213  : 		: _Mybase(_Pnode, _Plist)

	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>

; 215  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >, COMDAT
; _this$ = ecx

; 209  : 		{	// construct with null node pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 208  : 		: _Mybase()

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>

; 210  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@$$QAU01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Mynode, COMDAT
; _this$ = ecx

; 122  : 		{	// return node pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 123  : 		return (_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]

; 124  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Mynode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Pnode$1 = -20						; size = 4
_this$ = -8						; size = 4
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::operator--, COMDAT
; _this$ = ecx

; 84   : 		{	// predecrement

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 85   : 		if (_Mytree::_Isnil(_Ptr))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN4@operator

; 86   : 			_Ptr = _Mytree::_Right(_Ptr);	// end() ==> rightmost

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Right
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx+8], eax
	jmp	$LN5@operator
$LN4@operator:

; 87   : 		else if (!_Mytree::_Isnil(_Mytree::_Left(_Ptr)))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN2@operator

; 88   : 			_Ptr = _Mytree::_Max(

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Max
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 89   : 				_Mytree::_Left(_Ptr));	// ==> largest of left subtree
; 90   : 		else

	jmp	SHORT $LN5@operator
$LN2@operator:

; 91   : 			{	// climb looking for left subtree
; 92   : 			_Nodeptr _Pnode;
; 93   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 94   : 				&& _Ptr == _Mytree::_Left(_Pnode))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$1[ebp], edx
	mov	eax, DWORD PTR __Pnode$1[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR __Pnode$1[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN3@operator

; 95   : 				_Ptr = _Pnode;	// ==> parent while left subtree

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$1[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN2@operator
$LN3@operator:

; 96   : 			if (_Mytree::_Isnil(_Ptr))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN8@operator

; 97   : 				;	// begin() shouldn't be decremented, don't move
; 98   : 			else

	jmp	SHORT $LN5@operator
$LN8@operator:

; 99   : 				_Ptr = _Pnode;	// ==> parent if not head

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$1[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN5@operator:

; 100  : 			}
; 101  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 102  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::operator--
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Pnode$1 = -20						; size = 4
_this$ = -8						; size = 4
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::operator++, COMDAT
; _this$ = ecx

; 59   : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 60   : 		if (_Mytree::_Isnil(_Ptr))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN4@operator
	jmp	$LN5@operator
$LN4@operator:

; 61   : 			;	// end() shouldn't be incremented, don't move
; 62   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN2@operator

; 63   : 			_Ptr = _Mytree::_Min(

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Min
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 64   : 				_Mytree::_Right(_Ptr));	// ==> smallest of right subtree
; 65   : 		else

	jmp	SHORT $LN5@operator
$LN2@operator:

; 66   : 			{	// climb looking for right subtree
; 67   : 			_Nodeptr _Pnode;
; 68   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 69   : 				&& _Ptr == _Mytree::_Right(_Pnode))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$1[ebp], edx
	mov	eax, DWORD PTR __Pnode$1[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR __Pnode$1[ebp]
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN3@operator

; 70   : 				_Ptr = _Pnode;	// ==> parent while right subtree

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$1[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN2@operator
$LN3@operator:

; 71   : 			_Ptr = _Pnode;	// ==> parent (head if end())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$1[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN5@operator:

; 72   : 			}
; 73   : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 74   : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx

; 44   : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 45   : 		this->_Adopt(_Plist);

	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 46   : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx

; 39   : 		{	// construct with null node pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ

; 38   : 		: _Ptr()

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 40   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z PROC ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,int,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const *,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const &,std::_Iterator_base12>::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,int,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const *,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const &,std::_Iterator_base12>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@$$QAU01@@Z PROC ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,int,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const *,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,int,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const *,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@$$QAU01@@Z ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,int,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const *,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,int,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const *,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z PROC ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,int,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const *,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,int,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const *,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,int,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const *,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,int,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const *,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,int,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const *,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,int,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const *,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,int,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const *,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,int,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const *,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,int,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const *,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,int,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const *,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,int,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const *,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,int,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const *,std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__FsOwnerPatches@GH3P@@YAXXZ
text$yd	SEGMENT
??__FsOwnerPatches@GH3P@@YAXXZ PROC			; GH3P::`dynamic atexit destructor for 'sOwnerPatches'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?sOwnerPatches@GH3P@@3V?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@A
	call	??1?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__FsOwnerPatches@GH3P@@YAXXZ ENDP			; GH3P::`dynamic atexit destructor for 'sOwnerPatches''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\windows\fastgh3\plugins\code\core\patchmanager.cpp
;	COMDAT ??__EsOwnerPatches@GH3P@@YAXXZ
text$di	SEGMENT
??__EsOwnerPatches@GH3P@@YAXXZ PROC			; GH3P::`dynamic initializer for 'sOwnerPatches'', COMDAT

; 12   : 	static std::map< uint32_t, std::vector<uint8_t *> > sOwnerPatches;

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?sOwnerPatches@GH3P@@3V?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@A
	call	??0?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::map<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::map<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >
	push	OFFSET ??__FsOwnerPatches@GH3P@@YAXXZ	; GH3P::`dynamic atexit destructor for 'sOwnerPatches''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EsOwnerPatches@GH3P@@YAXXZ ENDP			; GH3P::`dynamic initializer for 'sOwnerPatches''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAE@XZ PROC ; std::map<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::~map<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::~_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAE@XZ ENDP ; std::map<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::~map<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\map
;	COMDAT ??A?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAEAAV?$vector@PAEV?$allocator@PAE@std@@@1@ABI@Z
_TEXT	SEGMENT
tv75 = -260						; size = 4
tv76 = -256						; size = 4
$T2 = -248						; size = 16
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Keyval$ = 8						; size = 4
??A?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAEAAV?$vector@PAEV?$allocator@PAE@std@@@1@ABI@Z PROC ; std::map<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::operator[], COMDAT
; _this$ = ecx

; 337  : 		{	// find element matching _Keyval or insert with default mapped

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??A?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAEAAV?$vector@PAEV?$allocator@PAE@std@@@1@ABI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 338  : 		return (try_emplace(_Keyval).first->second);

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$try_emplace@$$V@?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABI@Z ; std::map<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::try_emplace<>
	mov	DWORD PTR tv76[ebp], eax
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR tv75[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv75[ebp]
	call	??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator->
	add	eax, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@XZ
	mov	eax, DWORD PTR $T3[ebp]

; 339  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??A?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAEAAV?$vector@PAEV?$allocator@PAE@std@@@1@ABI@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@XZ
__ehhandler$??A?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAEAAV?$vector@PAEV?$allocator@PAE@std@@@1@ABI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-264]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??A?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAEAAV?$vector@PAEV?$allocator@PAE@std@@@1@ABI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??A?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAEAAV?$vector@PAEV?$allocator@PAE@std@@@1@ABI@Z ENDP ; std::map<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\map
;	COMDAT ??0?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
??0?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAE@XZ PROC ; std::map<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::map<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >, COMDAT
; _this$ = ecx

; 100  : 		{	// construct empty map from defaults

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 99   : 		: _Mybase(key_compare())

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >

; 101  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAE@XZ ENDP ; std::map<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::map<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Key, COMDAT
; _this$ = ecx

; 2177 : 		{	// return reference to key in node

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2178 : 		return ((const key_type&)this->_Kfn(this->_Myval(_Pnode)));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myval
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIABU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Kfn

; 2179 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Key@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Key
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Kfn@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIABU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
?_Kfn@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIABU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Kfn, COMDAT
; _this$ = ecx

; 2172 : 		{	// get key from value

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2173 : 		return (_Traits::_Kfn(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$_Kfn@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@SAABIABU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@@Z ; std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0>::_Kfn<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >
	add	esp, 4

; 2174 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Kfn@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIABU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Kfn
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
tv149 = -332						; size = 4
tv154 = -328						; size = 4
tv151 = -324						; size = 4
tv158 = -320						; size = 4
tv148 = -316						; size = 4
tv157 = -312						; size = 4
tv146 = -308						; size = 4
tv156 = -304						; size = 4
$T2 = -296						; size = 12
$T3 = -276						; size = 12
$T4 = -256						; size = 4
$T5 = -244						; size = 12
$T6 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?_Tidy@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 2167 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Tidy@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 320				; 00000140H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-332]
	mov	ecx, 80					; 00000050H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2168 : 		erase(begin(), end());

	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::end
	mov	DWORD PTR tv156[ebp], eax
	mov	ecx, DWORD PTR tv156[ebp]
	mov	DWORD PTR tv146[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T6[ebp], esp
	mov	edx, DWORD PTR tv146[ebp]
	push	edx
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	DWORD PTR tv157[ebp], eax
	mov	eax, DWORD PTR tv157[ebp]
	mov	DWORD PTR tv148[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::begin
	mov	DWORD PTR tv158[ebp], eax
	mov	edx, DWORD PTR tv158[ebp]
	mov	DWORD PTR tv151[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T4[ebp], esp
	mov	eax, DWORD PTR tv151[ebp]
	push	eax
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	DWORD PTR tv154[ebp], eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::erase
	mov	DWORD PTR tv149[ebp], eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ

; 2169 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 332				; 0000014cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ$0:
	lea	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ$1:
	mov	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ$2:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?_Tidy@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-336]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Tidy@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Tidy@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Tidy
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnext$ = -44						; size = 4
__Lock$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Orphan_ptr, COMDAT
; _this$ = ecx

; 2150 : 		{	// orphan iterators with specified node pointers

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2151 : 		_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2152 : 		const_iterator **_Pnext = (const_iterator **)this->_Getpfirst();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getpfirst@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getpfirst
	mov	DWORD PTR __Pnext$[ebp], eax

; 2153 : 		if (_Pnext != 0)

	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN4@Orphan_ptr
$LN2@Orphan_ptr:

; 2154 : 			while (*_Pnext != 0)

	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN4@Orphan_ptr

; 2155 : 				if ((*_Pnext)->_Ptr == this->_Myhead()
; 2156 : 					|| _Ptr != nullptr_t{} && (*_Pnext)->_Ptr != _Ptr)

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	esi, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myhead
	mov	ecx, DWORD PTR [esi+8]
	cmp	ecx, DWORD PTR [eax]
	je	SHORT $LN7@Orphan_ptr
	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN5@Orphan_ptr
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR __Ptr$[ebp]
	je	SHORT $LN5@Orphan_ptr
$LN7@Orphan_ptr:

; 2157 : 					_Pnext = (const_iterator **)(*_Pnext)->_Getpnext();

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax

; 2158 : 				else

	jmp	SHORT $LN6@Orphan_ptr
$LN5@Orphan_ptr:

; 2159 : 					{	// orphan the iterator
; 2160 : 					(*_Pnext)->_Clrcont();

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont

; 2161 : 					*_Pnext = *(const_iterator **)(*_Pnext)->_Getpnext();

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
$LN6@Orphan_ptr:

; 2162 : 					}

	jmp	SHORT $LN2@Orphan_ptr
$LN4@Orphan_ptr:

; 2163 : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Orphan_ptr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN13@Orphan_ptr:
	DD	1
	DD	$LN12@Orphan_ptr
$LN12@Orphan_ptr:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN10@Orphan_ptr
$LN10@Orphan_ptr:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Orphan_ptr
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = -20						; size = 4
_this$ = -8						; size = 4
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 2111 : 		{	// promote left node to root of subtree

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2112 : 		_Nodeptr _Pnode = this->_Left(_Wherenode);

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 2113 : 		this->_Left(_Wherenode) = this->_Right(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx

; 2114 : 
; 2115 : 		if (!this->_Isnil(this->_Right(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN2@Rrotate

; 2116 : 			this->_Parent(this->_Right(_Pnode)) = _Wherenode;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], edx
$LN2@Rrotate:

; 2117 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx

; 2118 : 
; 2119 : 		if (_Wherenode == _Root())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Root
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN3@Rrotate

; 2120 : 			_Root() = _Pnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Root
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN4@Rrotate
$LN3@Rrotate:

; 2121 : 		else if (_Wherenode == this->_Right(this->_Parent(_Wherenode)))

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN5@Rrotate

; 2122 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], edx

; 2123 : 		else

	jmp	SHORT $LN4@Rrotate
$LN5@Rrotate:

; 2124 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], edx
$LN4@Rrotate:

; 2125 : 
; 2126 : 		this->_Right(_Pnode) = _Wherenode;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], ecx

; 2127 : 		this->_Parent(_Wherenode) = _Pnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 2128 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Rrotate@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Rrotate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Root@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Root, COMDAT
; _this$ = ecx

; 2106 : 		{	// return root of nonmutable tree

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2107 : 		return (this->_Parent(this->_Myhead()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myhead
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4

; 2108 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Root@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Root
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Rmost@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 2101 : 		{	// return rightmost node in nonmutable tree

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2102 : 		return (this->_Right(this->_Myhead()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myhead
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4

; 2103 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Rmost@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Rmost
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = -20						; size = 4
_this$ = -8						; size = 4
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 2081 : 		{	// promote right node to root of subtree

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2082 : 		_Nodeptr _Pnode = this->_Right(_Wherenode);

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 2083 : 		this->_Right(_Wherenode) = this->_Left(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx

; 2084 : 
; 2085 : 		if (!this->_Isnil(this->_Left(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN2@Lrotate

; 2086 : 			this->_Parent(this->_Left(_Pnode)) = _Wherenode;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], edx
$LN2@Lrotate:

; 2087 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx

; 2088 : 
; 2089 : 		if (_Wherenode == _Root())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Root
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN3@Lrotate

; 2090 : 			_Root() = _Pnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Root
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN4@Lrotate
$LN3@Lrotate:

; 2091 : 		else if (_Wherenode == this->_Left(this->_Parent(_Wherenode)))

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN5@Lrotate

; 2092 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], edx

; 2093 : 		else

	jmp	SHORT $LN4@Lrotate
$LN5@Lrotate:

; 2094 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], edx
$LN4@Lrotate:

; 2095 : 
; 2096 : 		this->_Left(_Pnode) = _Wherenode;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], ecx

; 2097 : 		this->_Parent(_Wherenode) = _Pnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 2098 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Lrotate@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Lrotate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Lmost@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 2076 : 		{	// return leftmost node in nonmutable tree

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2077 : 		return (this->_Left(this->_Myhead()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myhead
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4

; 2078 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Lmost@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Lmost
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Compare@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE_NABI0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?_Compare@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE_NABI0@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Compare, COMDAT
; _this$ = ecx

; 2046 : 		{	// compare key_type to key_type, with debug checks

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2047 : 		return (_DEBUG_LT_PRED(this->_Getcomp(), _Left, _Right));

	push	2047					; 000007ffH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$less@I@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@ABU?$less@I@std@@ABIABI@std@@YA_NABU?$less@I@0@ABI1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned int> const &,unsigned int const &,unsigned int const &>
	add	esp, 20					; 00000014H

; 2048 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Compare@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE_NABI0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Compare
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$1 = -20						; size = 4
_this$ = -8						; size = 4
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Erase, COMDAT
; _this$ = ecx

; 2032 : 		{	// free entire subtree, recursively

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2033 : 		for (_Nodeptr _Pnode = _Rootnode;

	mov	eax, DWORD PTR __Rootnode$[ebp]
	mov	DWORD PTR __Pnode$1[ebp], eax
	jmp	SHORT $LN4@Erase
$LN2@Erase:

; 2034 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

	mov	eax, DWORD PTR __Pnode$1[ebp]
	mov	DWORD PTR __Rootnode$[ebp], eax
$LN4@Erase:
	mov	eax, DWORD PTR __Pnode$1[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN1@Erase

; 2035 : 			{	// free subtrees, then node
; 2036 : 			_Erase(this->_Right(_Pnode));

	mov	eax, DWORD PTR __Pnode$1[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Erase

; 2037 : 			_Pnode = this->_Left(_Pnode);

	mov	eax, DWORD PTR __Pnode$1[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$1[ebp], ecx

; 2038 : 			this->_Getal().destroy(

	mov	eax, DWORD PTR __Rootnode$[ebp]
	push	eax
	call	?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@YAPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@0@AAU10@@Z ; std::addressof<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getal
	mov	ecx, eax
	call	??$destroy@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::destroy<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >

; 2039 : 				_STD addressof(this->_Myval(_Rootnode)));
; 2040 : 
; 2041 : 			this->_Getal().deallocate(_Rootnode, 1);

	push	1
	mov	eax, DWORD PTR __Rootnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::deallocate

; 2042 : 			}

	jmp	SHORT $LN2@Erase
$LN1@Erase:

; 2043 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Newnode$ = 8						; size = 4
?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Destroy_if_not_nil, COMDAT
; _this$ = ecx

; 1640 : 		{	// node exists, destroy it

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1641 : 		this->_Getal().destroy(

	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	call	?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@YAPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@0@AAU10@@Z ; std::addressof<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getal
	mov	ecx, eax
	call	??$destroy@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::destroy<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >

; 1642 : 			_STD addressof(this->_Myval(_Newnode)));
; 1643 : 
; 1644 : 		this->_Getal().deallocate(_Newnode, 1);

	push	1
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::deallocate

; 1645 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Destroy_if_not_nil
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@2@ABI@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?equal_range@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@2@ABI@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::equal_range, COMDAT
; _this$ = ecx

; 1589 : 		{	// find range equivalent to _Keyval in mutable tree

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 1590 : 		return (_Eqrange(_Keyval));

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Eqrange@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Eqrange<unsigned int>
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1591 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?equal_range@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@2@ABI@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::equal_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@ABI@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@ABI@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 1537 : 		{	// find leftmost node not less than _Keyval in mutable tree

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 1538 : 		return (iterator(_Lbound(_Keyval), &this->_Get_data()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Get_data
	push	eax
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Lbound@I@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Lbound<unsigned int>
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1539 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?lower_bound@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@ABI@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::lower_bound
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@ABI@Z
_TEXT	SEGMENT
tv172 = -348						; size = 4
tv190 = -344						; size = 4
tv154 = -340						; size = 4
tv167 = -336						; size = 4
tv186 = -332						; size = 4
tv162 = -328						; size = 4
tv65 = -324						; size = 4
$T2 = -316						; size = 4
$T3 = -304						; size = 12
$T4 = -284						; size = 12
$T5 = -264						; size = 12
$T6 = -244						; size = 4
__Where$ = -40						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@ABI@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::find, COMDAT
; _this$ = ecx

; 1480 : 		{	// find an element in mutable sequence that matches _Keyval

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?find@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@ABI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 336				; 00000150H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-348]
	mov	ecx, 84					; 00000054H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0

; 1481 : 		iterator _Where = lower_bound(_Keyval);

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lower_bound@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::lower_bound
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1482 : 		return (_Where == end()

	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::end
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	mov	DWORD PTR tv162[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR tv162[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@find
	push	1484					; 000005ccH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Mynode
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABIPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Key
	push	eax
	mov	edx, DWORD PTR __Keyval$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@I@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@I@std@@ABIABI@std@@YA_NAAU?$less@I@0@ABI1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned int> &,unsigned int const &,unsigned int const &>
	add	esp, 20					; 00000014H
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@find
	lea	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv186[ebp], eax
	mov	edx, DWORD PTR tv186[ebp]
	mov	DWORD PTR tv167[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 2
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR tv167[ebp]
	mov	DWORD PTR tv154[ebp], ecx
	jmp	SHORT $LN4@find
$LN3@find:
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::end
	mov	DWORD PTR tv190[ebp], eax
	mov	eax, DWORD PTR tv190[ebp]
	mov	DWORD PTR tv172[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 4
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR tv172[ebp]
	mov	DWORD PTR tv154[ebp], edx
$LN4@find:
	mov	eax, DWORD PTR tv154[ebp]
	mov	DWORD PTR $T6[ebp], eax
	mov	ecx, DWORD PTR $T6[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 8
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 4
	je	SHORT $LN14@find
	and	DWORD PTR $T2[ebp], -5			; fffffffbH
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN14@find:
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T2[ebp]
	and	ecx, 2
	je	SHORT $LN15@find
	and	DWORD PTR $T2[ebp], -3			; fffffffdH
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN15@find:
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T2[ebp]
	and	edx, 1
	je	SHORT $LN16@find
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN16@find:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1483 : 			|| _DEBUG_LT_PRED(this->_Getcomp(),
; 1484 : 				_Keyval, this->_Key(_Where._Mynode()))
; 1485 : 					? end() : _Where);
; 1486 : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@find
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 348				; 0000015cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN20@find:
	DD	1
	DD	$LN19@find
$LN19@find:
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN17@find
$LN17@find:
	DB	95					; 0000005fH
	DB	87					; 00000057H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@ABI@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@ABI@Z$1:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN7@find
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	lea	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN7@find:
	ret	0
__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@ABI@Z$2:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 2
	je	$LN9@find
	and	DWORD PTR $T2[ebp], -3			; fffffffdH
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN9@find:
	ret	0
__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@ABI@Z$3:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 4
	je	$LN11@find
	and	DWORD PTR $T2[ebp], -5			; fffffffbH
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN11@find:
	ret	0
__ehhandler$?find@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@ABI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-352]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?find@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@ABI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?find@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@ABI@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::find
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?clear@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::clear, COMDAT
; _this$ = ecx

; 1467 : 		{	// erase all

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?clear@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1468 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1469 : 		this->_Orphan_ptr(nullptr_t{});

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Orphan_ptr

; 1470 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1471 : 
; 1472 : 		_Erase(_Root());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Root
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Erase

; 1473 : 		_Root() = this->_Myhead();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myhead
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Root
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1474 : 		_Lmost() = this->_Myhead();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myhead
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Lmost
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1475 : 		_Rmost() = this->_Myhead();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myhead
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Rmost
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1476 : 		this->_Mysize() = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAIXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Mysize
	mov	DWORD PTR [eax], 0

; 1477 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?clear@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?clear@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clear@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::clear
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEIABI@Z
_TEXT	SEGMENT
tv177 = -356						; size = 4
tv171 = -356						; size = 4
tv180 = -352						; size = 4
tv174 = -352						; size = 4
tv176 = -348						; size = 4
tv170 = -348						; size = 4
tv184 = -344						; size = 4
tv65 = -344						; size = 4
$T2 = -336						; size = 4
$T3 = -324						; size = 12
$T4 = -304						; size = 4
$T5 = -292						; size = 4
$T6 = -280						; size = 4
$T7 = -268						; size = 4
__Num$ = -64						; size = 4
__Where$ = -52						; size = 24
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Keyval$ = 8						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEIABI@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::erase, COMDAT
; _this$ = ecx

; 1459 : 		{	// erase and count all that match _Keyval

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEIABI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 344				; 00000158H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-356]
	mov	ecx, 86					; 00000056H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1460 : 		_Pairii _Where = equal_range(_Keyval);

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?equal_range@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@2@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::equal_range
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1461 : 		size_type _Num = _STD distance(_Where.first, _Where.second);

	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T7[ebp], esp
	lea	eax, DWORD PTR __Where$[ebp+12]
	push	eax
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	mov	DWORD PTR tv170[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T6[ebp], esp
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv174[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	call	??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@0@0@Z ; std::distance<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > > >
	add	esp, 24					; 00000018H
	mov	DWORD PTR tv171[ebp], eax
	mov	eax, DWORD PTR tv171[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1462 : 		erase(_Where.first, _Where.second);

	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T5[ebp], esp
	lea	eax, DWORD PTR __Where$[ebp+12]
	push	eax
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv184[ebp], eax
	mov	ecx, DWORD PTR tv184[ebp]
	mov	DWORD PTR tv176[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T4[ebp], esp
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv180[ebp], eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::erase
	mov	DWORD PTR tv177[ebp], eax
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ

; 1463 : 		return (_Num);

	mov	eax, DWORD PTR __Num$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ
	mov	eax, DWORD PTR $T2[ebp]

; 1464 : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@erase
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 356				; 00000164H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN12@erase:
	DD	1
	DD	$LN11@erase
$LN11@erase:
	DD	-52					; ffffffccH
	DD	24					; 00000018H
	DD	$LN9@erase
$LN9@erase:
	DB	95					; 0000005fH
	DB	87					; 00000057H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEIABI@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEIABI@Z$1:
	mov	ecx, DWORD PTR $T7[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEIABI@Z$3:
	mov	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEIABI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-360]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEIABI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEIABI@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::erase
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
tv94 = -332						; size = 4
tv186 = -328						; size = 4
tv206 = -324						; size = 4
tv199 = -320						; size = 4
tv181 = -320						; size = 4
tv198 = -316						; size = 4
tv160 = -316						; size = 4
$T2 = -308						; size = 4
$T3 = -296						; size = 12
$T4 = -276						; size = 4
$T5 = -264						; size = 12
$T6 = -244						; size = 12
$T7 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 12
__Last$ = 24						; size = 12
?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@0@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::erase, COMDAT
; _this$ = ecx

; 1444 : 		{	// erase [_First, _Last)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 320				; 00000140H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-332]
	mov	ecx, 80					; 00000050H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 1445 : 		if (_First == begin() && _Last == end())

	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::begin
	mov	DWORD PTR tv160[ebp], eax
	mov	ecx, DWORD PTR tv160[ebp]
	mov	DWORD PTR tv181[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR tv181[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@erase
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::end
	mov	DWORD PTR tv206[ebp], eax
	mov	eax, DWORD PTR tv206[ebp]
	mov	DWORD PTR tv186[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 2
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR tv186[ebp]
	push	edx
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@erase
	mov	DWORD PTR tv94[ebp], 1
	jmp	SHORT $LN8@erase
$LN7@erase:
	mov	DWORD PTR tv94[ebp], 0
$LN8@erase:
	mov	cl, BYTE PTR tv94[ebp]
	mov	BYTE PTR $T7[ebp], cl
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR $T2[ebp]
	and	edx, 2
	je	SHORT $LN15@erase
	and	DWORD PTR $T2[ebp], -3			; fffffffdH
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN15@erase:
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	SHORT $LN16@erase
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	lea	ecx, DWORD PTR $T6[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN16@erase:
	movzx	ecx, BYTE PTR $T7[ebp]
	test	ecx, ecx
	je	SHORT $LN2@erase

; 1446 : 			{	// erase all
; 1447 : 			clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::clear

; 1448 : 			return (begin());

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::begin
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 4
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN1@erase

; 1449 : 			}
; 1450 : 		else

	jmp	$LN5@erase
$LN2@erase:

; 1451 : 			{	// partial erase, one at a time
; 1452 : 			while (_First != _Last)

	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@erase

; 1453 : 				erase(_First++);

	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	DWORD PTR $T4[ebp], esp
	push	0
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator++
	mov	DWORD PTR tv198[ebp], eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::erase
	mov	DWORD PTR tv199[ebp], eax
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1454 : 			return (iterator(_First._Ptr, &this->_Get_data()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Get_data
	push	eax
	mov	eax, DWORD PTR __First$[ebp+8]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 4
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN1@erase
$LN5@erase:

; 1455 : 			}
; 1456 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN1@erase:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 332				; 0000014cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@0@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@0@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@0@Z$2:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN12@erase
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	lea	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN12@erase:
	ret	0
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@0@Z$3:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 2
	je	$LN14@erase
	and	DWORD PTR $T2[ebp], -3			; fffffffdH
	lea	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN14@erase:
	ret	0
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-336]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::erase
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
tv434 = -280						; size = 4
tv204 = -280						; size = 4
tv192 = -280						; size = 4
$T2 = -272						; size = 4
__Pnode$ = -68						; size = 4
__Fixnodeparent$ = -56					; size = 4
__Fixnode$ = -44					; size = 4
__Erasednode$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::erase, COMDAT
; _this$ = ecx

; 1259 : 		{	// erase element at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1260 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1261 : 		if (_Where._Getcont() != &this->_Get_data()
; 1262 : 			|| this->_Isnil(_Where._Mynode()))

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Get_data
	cmp	esi, eax
	jne	SHORT $LN6@erase
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN5@erase
$LN6@erase:

; 1263 : 			_DEBUG_ERROR("map/set erase iterator outside range");

	push	1263					; 000004efH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EK@PPDBPCAN@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN5@erase:

; 1264 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR __Erasednode$[ebp], eax

; 1265 : 		++_Where;	// save successor iterator for return

	lea	ecx, DWORD PTR __Where$[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator++

; 1266 : 		_Orphan_ptr(_Erasednode);

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Orphan_ptr

; 1267 : 
; 1268 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1269 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1270 : 		++_Where;	// save successor iterator for return
; 1271 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1272 : 
; 1273 : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 1274 : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 1275 : 		_Nodeptr _Pnode = _Erasednode;

	mov	eax, DWORD PTR __Erasednode$[ebp]
	mov	DWORD PTR __Pnode$[ebp], eax

; 1276 : 
; 1277 : 		if (this->_Isnil(this->_Left(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN7@erase

; 1278 : 			_Fixnode = this->_Right(_Pnode);	// stitch up right subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnode$[ebp], ecx
	jmp	SHORT $LN8@erase
$LN7@erase:

; 1279 : 		else if (this->_Isnil(this->_Right(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN9@erase

; 1280 : 			_Fixnode = this->_Left(_Pnode);	// stitch up left subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnode$[ebp], ecx

; 1281 : 		else

	jmp	SHORT $LN8@erase
$LN9@erase:

; 1282 : 			{	// two subtrees, must lift successor node to replace erased
; 1283 : 			_Pnode = _Where._Mynode();	// _Pnode is successor node

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR __Pnode$[ebp], eax

; 1284 : 			_Fixnode = this->_Right(_Pnode);	// _Fixnode is only subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnode$[ebp], ecx
$LN8@erase:

; 1285 : 			}
; 1286 : 
; 1287 : 		if (_Pnode == _Erasednode)

	mov	eax, DWORD PTR __Pnode$[ebp]
	cmp	eax, DWORD PTR __Erasednode$[ebp]
	jne	$LN11@erase

; 1288 : 			{	// at most one subtree, relink it
; 1289 : 			_Fixnodeparent = this->_Parent(_Erasednode);

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnodeparent$[ebp], ecx

; 1290 : 			if (!this->_Isnil(_Fixnode))

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN13@erase

; 1291 : 				this->_Parent(_Fixnode) = _Fixnodeparent;	// link up

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR [eax], ecx
$LN13@erase:

; 1292 : 
; 1293 : 			if (_Root() == _Erasednode)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Root
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN14@erase

; 1294 : 				_Root() = _Fixnode;	// link down from root

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Root
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN15@erase
$LN14@erase:

; 1295 : 			else if (this->_Left(_Fixnodeparent) == _Erasednode)

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN16@erase

; 1296 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link down to left

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1297 : 			else

	jmp	SHORT $LN15@erase
$LN16@erase:

; 1298 : 				this->_Right(_Fixnodeparent) =

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN15@erase:

; 1299 : 					_Fixnode;	// link down to right
; 1300 : 
; 1301 : 			if (_Lmost() == _Erasednode)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Lmost
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN18@erase

; 1302 : 				_Lmost() = this->_Isnil(_Fixnode)

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN44@erase
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR tv192[ebp], edx
	jmp	SHORT $LN45@erase
$LN44@erase:
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Min@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Min
	add	esp, 4
	mov	DWORD PTR tv192[ebp], eax
$LN45@erase:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Lmost
	mov	ecx, DWORD PTR tv192[ebp]
	mov	DWORD PTR [eax], ecx
$LN18@erase:

; 1303 : 					? _Fixnodeparent	// smallest is parent of erased node
; 1304 : 					: this->_Min(_Fixnode);	// smallest in relinked subtree
; 1305 : 
; 1306 : 			if (_Rmost() == _Erasednode)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Rmost
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN19@erase

; 1307 : 				_Rmost() = this->_Isnil(_Fixnode)

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN46@erase
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR tv204[ebp], edx
	jmp	SHORT $LN47@erase
$LN46@erase:
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Max@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Max
	add	esp, 4
	mov	DWORD PTR tv204[ebp], eax
$LN47@erase:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Rmost
	mov	ecx, DWORD PTR tv204[ebp]
	mov	DWORD PTR [eax], ecx
$LN19@erase:

; 1308 : 					? _Fixnodeparent	// largest is parent of erased node
; 1309 : 					: this->_Max(_Fixnode);	// largest in relinked subtree
; 1310 : 			}
; 1311 : 		else

	jmp	$LN12@erase
$LN11@erase:

; 1312 : 			{	// erased has two subtrees, _Pnode is successor to erased
; 1313 : 			this->_Parent(this->_Left(_Erasednode)) =

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], edx

; 1314 : 				_Pnode;	// link left up
; 1315 : 			this->_Left(_Pnode) =

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx

; 1316 : 				this->_Left(_Erasednode);	// link successor down
; 1317 : 
; 1318 : 			if (_Pnode == this->_Right(_Erasednode))

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN20@erase

; 1319 : 				_Fixnodeparent = _Pnode;	// successor is next to erased

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Fixnodeparent$[ebp], eax

; 1320 : 			else

	jmp	$LN21@erase
$LN20@erase:

; 1321 : 				{	// successor further down, link in place of erased
; 1322 : 				_Fixnodeparent =

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnodeparent$[ebp], ecx

; 1323 : 					this->_Parent(_Pnode);	// parent is successor's
; 1324 : 				if (!this->_Isnil(_Fixnode))

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN22@erase

; 1325 : 					this->_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR [eax], ecx
$LN22@erase:

; 1326 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link fix down

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1327 : 				this->_Right(_Pnode) =

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx

; 1328 : 					this->_Right(_Erasednode);	// link next down
; 1329 : 				this->_Parent(this->_Right(_Erasednode)) =

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], edx
$LN21@erase:

; 1330 : 					_Pnode;	// right up
; 1331 : 				}
; 1332 : 
; 1333 : 			if (_Root() == _Erasednode)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Root
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN23@erase

; 1334 : 				_Root() = _Pnode;	// link down from root

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Root
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN24@erase
$LN23@erase:

; 1335 : 			else if (this->_Left(this->_Parent(_Erasednode)) == _Erasednode)

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN25@erase

; 1336 : 				this->_Left(this->_Parent(_Erasednode)) =

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], edx

; 1337 : 					_Pnode;	// link down to left
; 1338 : 			else

	jmp	SHORT $LN24@erase
$LN25@erase:

; 1339 : 				this->_Right(this->_Parent(_Erasednode)) =

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], edx
$LN24@erase:

; 1340 : 					_Pnode;	// link down to right
; 1341 : 
; 1342 : 			this->_Parent(_Pnode) =

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx

; 1343 : 				this->_Parent(_Erasednode);	// link successor up
; 1344 : 			_STD swap(this->_Color(_Pnode),

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	push	eax
	call	??$swap@DX@std@@YAXAAD0@Z		; std::swap<char,void>
	add	esp, 8
$LN12@erase:

; 1345 : 				this->_Color(_Erasednode));	// recolor it
; 1346 : 			}
; 1347 : 
; 1348 : 		if (this->_Color(_Erasednode) == this->_Black)

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	$LN27@erase

; 1349 : 			{	// erasing black link, must recolor/rebalance tree
; 1350 : 			for (; _Fixnode != _Root()

	jmp	SHORT $LN4@erase
$LN2@erase:

; 1352 : 				_Fixnodeparent = this->_Parent(_Fixnode))

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnodeparent$[ebp], ecx
$LN4@erase:

; 1351 : 				&& this->_Color(_Fixnode) == this->_Black;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Root
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	je	$LN3@erase
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	$LN3@erase

; 1353 : 				if (_Fixnode == this->_Left(_Fixnodeparent))

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	$LN28@erase

; 1354 : 					{	// fixup left subtree
; 1355 : 					_Pnode = this->_Right(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 1356 : 					if (this->_Color(_Pnode) == this->_Red)

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN30@erase

; 1357 : 						{	// rotate red up from right subtree
; 1358 : 						this->_Color(_Pnode) = this->_Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1359 : 						this->_Color(_Fixnodeparent) = this->_Red;

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1360 : 						_Lrotate(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Lrotate

; 1361 : 						_Pnode = this->_Right(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN30@erase:

; 1362 : 						}
; 1363 : 
; 1364 : 					if (this->_Isnil(_Pnode))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN31@erase

; 1365 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], eax

; 1366 : 					else if (this->_Color(this->_Left(_Pnode)) == this->_Black

	jmp	$LN32@erase
$LN31@erase:

; 1367 : 						&& this->_Color(this->_Right(_Pnode)) == this->_Black)

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	SHORT $LN33@erase
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	SHORT $LN33@erase

; 1368 : 						{	// redden right subtree with black children
; 1369 : 						this->_Color(_Pnode) = this->_Red;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1370 : 						_Fixnode = _Fixnodeparent;

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], eax

; 1371 : 						}
; 1372 : 					else

	jmp	$LN32@erase
$LN33@erase:

; 1373 : 						{	// must rearrange right subtree
; 1374 : 						if (this->_Color(this->_Right(_Pnode))
; 1375 : 							== this->_Black)

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	SHORT $LN35@erase

; 1376 : 							{	// rotate red up from left sub-subtree
; 1377 : 							this->_Color(this->_Left(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1378 : 							this->_Color(_Pnode) = this->_Red;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1379 : 							_Rrotate(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Rrotate

; 1380 : 							_Pnode = this->_Right(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN35@erase:

; 1381 : 							}
; 1382 : 
; 1383 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	mov	dl, BYTE PTR [esi]
	mov	BYTE PTR [eax], dl

; 1384 : 						this->_Color(_Fixnodeparent) = this->_Black;

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1385 : 						this->_Color(this->_Right(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1386 : 						_Lrotate(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Lrotate

; 1387 : 						break;	// tree now recolored/rebalanced

	jmp	$LN3@erase
$LN32@erase:

; 1388 : 						}
; 1389 : 					}
; 1390 : 				else

	jmp	$LN29@erase
$LN28@erase:

; 1391 : 					{	// fixup right subtree
; 1392 : 					_Pnode = this->_Left(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 1393 : 					if (this->_Color(_Pnode) == this->_Red)

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN36@erase

; 1394 : 						{	// rotate red up from left subtree
; 1395 : 						this->_Color(_Pnode) = this->_Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1396 : 						this->_Color(_Fixnodeparent) = this->_Red;

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1397 : 						_Rrotate(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Rrotate

; 1398 : 						_Pnode = this->_Left(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN36@erase:

; 1399 : 						}
; 1400 : 
; 1401 : 					if (this->_Isnil(_Pnode))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN37@erase

; 1402 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], eax

; 1403 : 					else if (this->_Color(this->_Right(_Pnode)) ==

	jmp	$LN29@erase
$LN37@erase:

; 1404 : 						this->_Black
; 1405 : 						&& this->_Color(this->_Left(_Pnode)) == this->_Black)

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	SHORT $LN39@erase
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	SHORT $LN39@erase

; 1406 : 						{	// redden left subtree with black children
; 1407 : 						this->_Color(_Pnode) = this->_Red;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1408 : 						_Fixnode = _Fixnodeparent;

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], eax

; 1409 : 						}
; 1410 : 					else

	jmp	$LN29@erase
$LN39@erase:

; 1411 : 						{	// must rearrange left subtree
; 1412 : 						if (this->_Color(this->_Left(_Pnode)) == this->_Black)

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	SHORT $LN41@erase

; 1413 : 							{	// rotate red up from right sub-subtree
; 1414 : 							this->_Color(this->_Right(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1415 : 							this->_Color(_Pnode) = this->_Red;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1416 : 							_Lrotate(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Lrotate

; 1417 : 							_Pnode = this->_Left(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN41@erase:

; 1418 : 							}
; 1419 : 
; 1420 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	mov	dl, BYTE PTR [esi]
	mov	BYTE PTR [eax], dl

; 1421 : 						this->_Color(_Fixnodeparent) = this->_Black;

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1422 : 						this->_Color(this->_Left(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1423 : 						_Rrotate(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Rrotate

; 1424 : 						break;	// tree now recolored/rebalanced

	jmp	SHORT $LN3@erase
$LN29@erase:

; 1425 : 						}
; 1426 : 					}

	jmp	$LN2@erase
$LN3@erase:

; 1427 : 
; 1428 : 			this->_Color(_Fixnode) = this->_Black;	// stopping node is black

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
$LN27@erase:

; 1429 : 			}
; 1430 : 
; 1431 : 		this->_Getal().destroy(

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@YAPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@0@AAU10@@Z ; std::addressof<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getal
	mov	ecx, eax
	call	??$destroy@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::destroy<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >

; 1432 : 			_STD addressof(this->_Myval(_Erasednode)));	// delete erased node
; 1433 : 
; 1434 : 		this->_Getal().deallocate(_Erasednode, 1);

	push	1
	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::deallocate

; 1435 : 
; 1436 : 		if (0 < this->_Mysize())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAIXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Mysize
	cmp	DWORD PTR [eax], 0
	jbe	SHORT $LN42@erase

; 1437 : 			--this->_Mysize();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAIXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Mysize
	mov	DWORD PTR tv434[ebp], eax
	mov	eax, DWORD PTR tv434[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 1
	mov	edx, DWORD PTR tv434[ebp]
	mov	DWORD PTR [edx], ecx
$LN42@erase:

; 1438 : 
; 1439 : 		return (iterator(_Where._Ptr,

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Get_data
	push	eax
	mov	eax, DWORD PTR __Where$[ebp+8]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1440 : 			&this->_Get_data()));	// return successor iterator
; 1441 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-284]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::erase
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
?max_size@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::max_size, COMDAT
; _this$ = ecx

; 1175 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1176 : 		return (this->_Getal().max_size());

	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::max_size

; 1177 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::size, COMDAT
; _this$ = ecx

; 1170 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1171 : 		return (this->_Mysize());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABIXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Mysize
	mov	eax, DWORD PTR [eax]

; 1172 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::end, COMDAT
; _this$ = ecx

; 1120 : 		{	// return iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?end@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1121 : 		return (iterator(this->_Myhead(), &this->_Get_data()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Get_data
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myhead
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1122 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?end@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?end@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?end@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::end
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::begin, COMDAT
; _this$ = ecx

; 1110 : 		{	// return iterator for beginning of mutable sequence

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?begin@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1111 : 		return (iterator(_Lmost(), &this->_Get_data()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Get_data
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Lmost
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1112 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?begin@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?begin@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?begin@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::begin
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::~_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >, COMDAT
; _this$ = ecx

; 1090 : 		{	// destroy tree

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1091 : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Tidy

; 1092 : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::~_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::~_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Parg$ = 8						; size = 4
??0?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >, COMDAT
; _this$ = ecx

; 1004 : 		{	// construct empty tree from comparator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1003 : 		: _Mybase(_Parg)

	mov	eax, DWORD PTR __Parg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >

; 1005 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Compressed_pair@U?$less@I@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Compressed_pair@U?$less@I@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::less<unsigned int>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>,1>::~_Compressed_pair<std::less<unsigned int>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>,1>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Compressed_pair@U?$less@I@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::less<unsigned int>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>,1>::~_Compressed_pair<std::less<unsigned int>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$less@I@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@U?$less@I@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@XZ PROC ; std::_Compressed_pair<std::less<unsigned int>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>,1>::_Get_second, COMDAT
; _this$ = ecx

; 319  : 		{	// return const reference to second

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 320  : 		return (_Myval2);

	mov	eax, DWORD PTR _this$[ebp]

; 321  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_second@?$_Compressed_pair@U?$less@I@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@XZ ENDP ; std::_Compressed_pair<std::less<unsigned int>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$less@I@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@U?$less@I@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@XZ PROC ; std::_Compressed_pair<std::less<unsigned int>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>,1>::_Get_second, COMDAT
; _this$ = ecx

; 314  : 		{	// return reference to second

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 315  : 		return (_Myval2);

	mov	eax, DWORD PTR _this$[ebp]

; 316  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_second@?$_Compressed_pair@U?$less@I@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@XZ ENDP ; std::_Compressed_pair<std::less<unsigned int>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$less@I@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@I@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@U?$less@I@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@I@2@XZ PROC ; std::_Compressed_pair<std::less<unsigned int>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>,1>::_Get_first, COMDAT
; _this$ = ecx

; 299  : 		{	// return const reference to first

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 300  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 301  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@U?$less@I@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@I@2@XZ ENDP ; std::_Compressed_pair<std::less<unsigned int>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$less@I@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@I@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@U?$less@I@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@I@2@XZ PROC ; std::_Compressed_pair<std::less<unsigned int>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>,1>::_Get_first, COMDAT
; _this$ = ecx

; 294  : 		{	// return reference to first

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 295  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 296  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@U?$less@I@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@I@2@XZ ENDP ; std::_Compressed_pair<std::less<unsigned int>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>::_Get_second, COMDAT
; _this$ = ecx

; 319  : 		{	// return const reference to second

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 320  : 		return (_Myval2);

	mov	eax, DWORD PTR _this$[ebp]

; 321  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>::_Get_second, COMDAT
; _this$ = ecx

; 314  : 		{	// return reference to second

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 315  : 		return (_Myval2);

	mov	eax, DWORD PTR _this$[ebp]

; 316  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 299  : 		{	// return const reference to first

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 300  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 301  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 294  : 		{	// return reference to first

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 295  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 296  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::~_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::~_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Min, COMDAT

; 614  : 		{	// return leftmost node in subtree at _Pnode

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN2@Min:

; 615  : 		while (!_Isnil(_Left(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN3@Min

; 616  : 			_Pnode = _Left(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
	jmp	SHORT $LN2@Min
$LN3@Min:

; 617  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 618  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Min
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Max, COMDAT

; 607  : 		{	// return rightmost node in subtree at _Pnode

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN2@Max:

; 608  : 		while (!_Isnil(_Right(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN3@Max

; 609  : 			_Pnode = _Right(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
	jmp	SHORT $LN2@Max
$LN3@Max:

; 610  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 611  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Myval, COMDAT

; 602  : 		{	// return reference to value in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 603  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 16					; 00000010H

; 604  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Myval
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Right, COMDAT

; 597  : 		{	// return reference to right pointer in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 598  : 		return ((_Nodepref)_Pnode->_Right);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8

; 599  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Right
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Parent, COMDAT

; 592  : 		{	// return reference to parent pointer in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 593  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4

; 594  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Parent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Left, COMDAT

; 587  : 		{	// return reference to left pointer in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 588  : 		return ((_Nodepref)_Pnode->_Left);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 589  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Left
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Isnil, COMDAT

; 582  : 		{	// return reference to nil flag in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 583  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 13					; 0000000dH

; 584  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Isnil
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Color, COMDAT

; 577  : 		{	// return reference to color in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 578  : 		return ((char&)_Pnode->_Color);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 12					; 0000000cH

; 579  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Color
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >, COMDAT
; _this$ = ecx

; 569  : 		{	// initialize data

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12

; 567  : 		: _Myhead(),

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 568  : 		_Mysize(0)

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 570  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??R?$less@I@std@@QBE_NABI0@Z
_TEXT	SEGMENT
tv65 = -208						; size = 4
_this$ = -8						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@I@std@@QBE_NABI0@Z PROC			; std::less<unsigned int>::operator(), COMDAT
; _this$ = ecx

; 238  : 		{	// apply operator< to operands

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 239  : 		return (_Left < _Right);

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jae	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]

; 240  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??R?$less@I@std@@QBE_NABI0@Z ENDP			; std::less<unsigned int>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABIXZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Mysize, COMDAT
; _this$ = ecx

; 944  : 		{	// return const reference to _Mysize

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 945  : 		return (_Get_data()._Mysize);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Get_data
	add	eax, 8

; 946  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABIXZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Mysize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAIXZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Mysize, COMDAT
; _this$ = ecx

; 939  : 		{	// return reference to _Mysize

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 940  : 		return (_Get_data()._Mysize);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Get_data
	add	eax, 8

; 941  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAIXZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Mysize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myhead, COMDAT
; _this$ = ecx

; 934  : 		{	// return const reference to _Myhead

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 935  : 		return (_Get_data()._Myhead);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Get_data
	add	eax, 4

; 936  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myhead
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myhead, COMDAT
; _this$ = ecx

; 929  : 		{	// return reference to _Myhead

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 930  : 		return (_Get_data()._Myhead);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Get_data
	add	eax, 4

; 931  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myhead
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Get_data, COMDAT
; _this$ = ecx

; 924  : 		{	// return const reference to _Tree_val

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 925  : 		return (_Mypair._Get_second()._Get_second());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_second@?$_Compressed_pair@U?$less@I@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@XZ ; std::_Compressed_pair<std::less<unsigned int>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>,1>::_Get_second
	mov	ecx, eax
	call	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>::_Get_second

; 926  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Get_data, COMDAT
; _this$ = ecx

; 919  : 		{	// return reference to _Tree_val

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 920  : 		return (_Mypair._Get_second()._Get_second());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_second@?$_Compressed_pair@U?$less@I@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@XZ ; std::_Compressed_pair<std::less<unsigned int>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>,1>::_Get_second
	mov	ecx, eax
	call	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>::_Get_second

; 921  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getal, COMDAT
; _this$ = ecx

; 914  : 		{	// return const reference to allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 915  : 		return (_Mypair._Get_second()._Get_first());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_second@?$_Compressed_pair@U?$less@I@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@XZ ; std::_Compressed_pair<std::less<unsigned int>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>,1>::_Get_second
	mov	ecx, eax
	call	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>::_Get_first

; 916  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getal, COMDAT
; _this$ = ecx

; 909  : 		{	// return reference to allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 910  : 		return (_Mypair._Get_second()._Get_first());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_second@?$_Compressed_pair@U?$less@I@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@XZ ; std::_Compressed_pair<std::less<unsigned int>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>,1>::_Get_second
	mov	ecx, eax
	call	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>::_Get_first

; 911  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$less@I@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$less@I@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getcomp, COMDAT
; _this$ = ecx

; 904  : 		{	// return const reference to ordering predicate

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 905  : 		return (_Mypair._Get_first());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@U?$less@I@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@I@2@XZ ; std::_Compressed_pair<std::less<unsigned int>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>,1>::_Get_first

; 906  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$less@I@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getcomp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@I@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@I@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getcomp, COMDAT
; _this$ = ecx

; 899  : 		{	// return reference to ordering predicate

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 900  : 		return (_Mypair._Get_first());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@U?$less@I@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@I@2@XZ ; std::_Compressed_pair<std::less<unsigned int>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>,1>::_Get_first

; 901  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@I@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getcomp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Freenode0@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$ = 8						; size = 4
?_Freenode0@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Freenode0, COMDAT
; _this$ = ecx

; 868  : 		{	// free non-value node using current allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 869  : 		_Getal().destroy(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>

; 870  : 			_STD addressof(_Left(_Pnode)));
; 871  : 		_Getal().destroy(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>

; 872  : 			_STD addressof(_Parent(_Pnode)));
; 873  : 		_Getal().destroy(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>

; 874  : 			_STD addressof(_Right(_Pnode)));
; 875  : 		_Getal().deallocate(_Pnode, 1);

	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::deallocate

; 876  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Freenode0@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Freenode0
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ
_TEXT	SEGMENT
tv147 = -236						; size = 4
tv146 = -236						; size = 4
tv145 = -236						; size = 4
__Pnode$ = -36						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Buynode0, COMDAT
; _this$ = ecx

; 849  : 		{	// allocate a non-value node

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 850  : 		_Nodeptr _Pnode = _Getal().allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::allocate
	mov	DWORD PTR __Pnode$[ebp], eax

; 851  : 
; 852  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 853  : 		_Getal().construct(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	DWORD PTR tv145[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myhead
	push	eax
	mov	ecx, DWORD PTR tv145[ebp]
	push	ecx
	call	??$addressof@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getal
	mov	ecx, eax
	call	??$construct@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::construct<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> * &>

; 854  : 			_STD addressof(_Left(_Pnode)), _Myhead());
; 855  : 		_Getal().construct(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	DWORD PTR tv146[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myhead
	push	eax
	mov	ecx, DWORD PTR tv146[ebp]
	push	ecx
	call	??$addressof@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getal
	mov	ecx, eax
	call	??$construct@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::construct<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> * &>

; 856  : 			_STD addressof(_Parent(_Pnode)), _Myhead());
; 857  : 		_Getal().construct(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	DWORD PTR tv147[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myhead
	push	eax
	mov	ecx, DWORD PTR tv147[ebp]
	push	ecx
	call	??$addressof@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getal
	mov	ecx, eax
	call	??$construct@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::construct<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> * &>
	jmp	SHORT $LN4@Buynode0
__catch$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ$0:

; 858  : 			_STD addressof(_Right(_Pnode)), _Myhead());
; 859  : 		_CATCH_ALL
; 860  : 		_Getal().deallocate(_Pnode, 1);

	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::deallocate

; 861  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 862  : 		_CATCH_END

	mov	eax, $LN7@Buynode0
	ret	0
$LN4@Buynode0:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ$1
$LN7@Buynode0:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ$1:

; 863  : 
; 864  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
$LN3@Buynode0:

; 865  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-240]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Buynode0
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$ = 8						; size = 4
?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Freeheadnode, COMDAT
; _this$ = ecx

; 838  : 		{	// free head node using current allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 839  : 		_Getal().destroy(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>

; 840  : 			_STD addressof(_Left(_Pnode)));
; 841  : 		_Getal().destroy(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>

; 842  : 			_STD addressof(_Parent(_Pnode)));
; 843  : 		_Getal().destroy(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>

; 844  : 			_STD addressof(_Right(_Pnode)));
; 845  : 		_Getal().deallocate(_Pnode, 1);

	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::deallocate

; 846  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Freeheadnode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ
_TEXT	SEGMENT
tv145 = -236						; size = 4
tv144 = -236						; size = 4
tv143 = -236						; size = 4
__Pnode$ = -36						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Buyheadnode, COMDAT
; _this$ = ecx

; 817  : 		{	// get head node using current allocator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 818  : 		_Nodeptr _Pnode = _Getal().allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::allocate
	mov	DWORD PTR __Pnode$[ebp], eax

; 819  : 
; 820  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 821  : 		_Getal().construct(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
	add	esp, 4
	mov	DWORD PTR tv143[ebp], eax
	lea	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv143[ebp]
	push	edx
	call	??$addressof@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getal
	mov	ecx, eax
	call	??$construct@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::construct<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> * &>

; 822  : 			_STD addressof(_Left(_Pnode)), _Pnode);
; 823  : 		_Getal().construct(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
	add	esp, 4
	mov	DWORD PTR tv144[ebp], eax
	lea	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv144[ebp]
	push	edx
	call	??$addressof@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getal
	mov	ecx, eax
	call	??$construct@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::construct<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> * &>

; 824  : 			_STD addressof(_Parent(_Pnode)), _Pnode);
; 825  : 		_Getal().construct(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
	add	esp, 4
	mov	DWORD PTR tv145[ebp], eax
	lea	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv145[ebp]
	push	edx
	call	??$addressof@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getal
	mov	ecx, eax
	call	??$construct@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::construct<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> *,std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> * &>
	jmp	SHORT $LN4@Buyheadnod
__catch$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ$0:

; 826  : 			_STD addressof(_Right(_Pnode)), _Pnode);
; 827  : 		_CATCH_ALL
; 828  : 		_Getal().deallocate(_Pnode, 1);

	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::deallocate

; 829  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 830  : 		_CATCH_END

	mov	eax, $LN7@Buyheadnod
	ret	0
$LN4@Buyheadnod:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ$1
$LN7@Buyheadnod:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ$1:

; 831  : 
; 832  : 		_Color(_Pnode) = _Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 833  : 		_Isnil(_Pnode) = true;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Isnil
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 834  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
$LN3@Buyheadnod:

; 835  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@Buyheadnod
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN11@Buyheadnod:
	DD	1
	DD	$LN10@Buyheadnod
$LN10@Buyheadnod:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN8@Buyheadnod
$LN8@Buyheadnod:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-240]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Buyheadnode
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Orphan_all@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Orphan_all@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Orphan_all, COMDAT
; _this$ = ecx

; 807  : 		{	// orphan all iterators

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 808  : 		_Get_data()._Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Get_data
	mov	ecx, eax
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 809  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_all@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myproxy, COMDAT
; _this$ = ecx

; 796  : 		{	// return reference to _Myproxy

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 797  : 		return (_Get_data()._Myproxy);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Get_data

; 798  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myproxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Getpfirst@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getpfirst@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getpfirst, COMDAT
; _this$ = ecx

; 791  : 		{	// get address of iterator chain

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 792  : 		return (_Get_data()._Getpfirst());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Get_data
	mov	ecx, eax
	call	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst

; 793  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getpfirst@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getpfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Free_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -17					; size = 1
_this$ = -8						; size = 4
?_Free_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Free_proxy, COMDAT
; _this$ = ecx

; 781  : 		{	// destroy proxy

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 782  : 		typename _Alty::template rebind<_Container_proxy>::other
; 783  : 			_Alproxy(_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getal
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > > &>

; 784  : 		_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Orphan_all

; 785  : 		_Alproxy.destroy(_Myproxy());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myproxy
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>

; 786  : 		_Alproxy.deallocate(_Alproxy.address(*_Myproxy()), 1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myproxy
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QBEPAU_Container_proxy@2@AAU32@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate

; 787  : 		_Myproxy() = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myproxy
	mov	DWORD PTR [eax], 0

; 788  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Free_proxy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Free_proxy:
	DD	1
	DD	$LN4@Free_proxy
$LN4@Free_proxy:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@Free_proxy
$LN3@Free_proxy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Free_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Alloc_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -228						; size = 8
__Alproxy$ = -17					; size = 1
_this$ = -8						; size = 4
?_Alloc_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Alloc_proxy, COMDAT
; _this$ = ecx

; 772  : 		{	// construct proxy

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 773  : 		typename _Alty::template rebind<_Container_proxy>::other
; 774  : 			_Alproxy(_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Getal
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > > &>

; 775  : 		_Myproxy() = _Unfancy(_Alproxy.allocate(1));

	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
	push	eax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myproxy
	mov	DWORD PTR [eax], esi

; 776  : 		_Alproxy.construct(_Myproxy(), _Container_proxy());

	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myproxy
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>

; 777  : 		_Myproxy()->_Mycont = &_Get_data();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Get_data
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myproxy
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax], esi

; 778  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Alloc_prox
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@Alloc_prox:
	DD	1
	DD	$LN4@Alloc_prox
$LN4@Alloc_prox:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@Alloc_prox
$LN3@Alloc_prox:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Alloc_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??1?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::~_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >, COMDAT
; _this$ = ecx

; 752  : 		{	// destroy head node, proxy

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 753  : 		_Freeheadnode(_Myhead());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myhead
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Freeheadnode

; 754  : 		_Free_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Free_proxy

; 755  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Compressed_pair@U?$less@I@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::~_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Construct, COMDAT
; _this$ = ecx

; 741  : 		{	// construct head node, proxy

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 742  : 		_Myhead() = _Buyheadnode();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Buyheadnode
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myhead
	mov	DWORD PTR [eax], esi

; 743  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 744  : 		_Alloc_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Alloc_proxy
	jmp	SHORT $LN4@Construct
__catch$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ$0:

; 745  : 		_CATCH_ALL
; 746  : 		_Freeheadnode(_Myhead());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myhead
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Freeheadnode

; 747  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 748  : 		_CATCH_END

	mov	eax, $LN7@Construct
	ret	0
$LN4@Construct:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN3@Construct
$LN7@Construct:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN3@Construct:

; 749  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-224]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Construct
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??0?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@@Z
_TEXT	SEGMENT
$T2 = -233						; size = 1
$T3 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
??0?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >, COMDAT
; _this$ = ecx

; 704  : 		{	// construct from comparator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 702  : 		: _Mypair(_One_then_variadic_args_t(), _Parg,

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	movzx	edx, BYTE PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0ABU?$less@I@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@I@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@I@1@$$QAU_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::less<unsigned int>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>,1>::_Compressed_pair<std::less<unsigned int>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >,1>,1><std::less<unsigned int> const &,std::_Zero_then_variadic_args_t>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 705  : 		_Construct();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Construct

; 706  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Compressed_pair@U?$less@I@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAE@XZ
__ehhandler$??0?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Min@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Min, COMDAT

; 697  : 		{	// return leftmost node in subtree at _Pnode

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 698  : 		return (_Tree_val<_Val_types>::_Min(_Pnode));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Min
	add	esp, 4

; 699  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Min@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Min
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Max@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Max, COMDAT

; 692  : 		{	// return rightmost node in subtree at _Pnode

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 693  : 		return (_Tree_val<_Val_types>::_Max(_Pnode));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Max
	add	esp, 4

; 694  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Max@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myval, COMDAT

; 687  : 		{	// return reference to value in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 688  : 		return (_Tree_val<_Val_types>::_Myval(_Pnode));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Myval
	add	esp, 4

; 689  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@2@PAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Myval
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right, COMDAT

; 682  : 		{	// return reference to right pointer in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 683  : 		return (_Tree_val<_Val_types>::_Right(_Pnode));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Right
	add	esp, 4

; 684  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Right
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent, COMDAT

; 677  : 		{	// return reference to parent pointer in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 678  : 		return (_Tree_val<_Val_types>::_Parent(_Pnode));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Parent
	add	esp, 4

; 679  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Parent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left, COMDAT

; 672  : 		{	// return reference to left pointer in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 673  : 		return (_Tree_val<_Val_types>::_Left(_Pnode));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Left
	add	esp, 4

; 674  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Left
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Isnil, COMDAT

; 667  : 		{	// return reference to nil flag in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 668  : 		return (_Tree_val<_Val_types>::_Isnil(_Pnode));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Isnil
	add	esp, 4

; 669  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Isnil
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color, COMDAT

; 662  : 		{	// return reference to color in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 663  : 		return (_Tree_val<_Val_types>::_Color(_Pnode));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::_Color
	add	esp, 4

; 664  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::_Color
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::max_size, COMDAT
; _this$ = ecx

; 1007 : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1008 : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::max_size
	add	esp, 4

; 1009 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::deallocate, COMDAT
; _this$ = ecx

; 986  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 987  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >::deallocate

; 988  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::allocate, COMDAT
; _this$ = ecx

; 975  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 976  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >::allocate

; 977  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >, COMDAT
; _this$ = ecx

; 936  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 935  : 		: _Mybase()

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAE@XZ ; std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >

; 937  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::max_size, COMDAT

; 868  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 869  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QBEIXZ ; std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >::max_size

; 870  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?max_size@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QBEIXZ PROC ; std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >::max_size, COMDAT
; _this$ = ecx

; 748  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 749  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 119304647				; 071c71c7H

; 750  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QBEIXZ ENDP ; std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@I@Z PROC ; std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >::allocate, COMDAT
; _this$ = ecx

; 724  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 725  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));

	push	1
	push	36					; 00000024H
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	?_Allocate@std@@YAPAXII_N@Z		; std::_Allocate
	add	esp, 12					; 0000000cH

; 726  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@I@Z ENDP ; std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@I@Z PROC ; std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >::deallocate, COMDAT
; _this$ = ecx

; 719  : 		{	// deallocate object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 720  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	36					; 00000024H
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 721  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@2@I@Z ENDP ; std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAE@XZ PROC ; std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >, COMDAT
; _this$ = ecx

; 699  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 700  : 		{	// construct default allocator (do nothing)
; 701  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@PAX@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >::allocator<std::_Tree_node<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > >,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__FsPatchOwners@GH3P@@YAXXZ
text$yd	SEGMENT
??__FsPatchOwners@GH3P@@YAXXZ PROC			; GH3P::`dynamic atexit destructor for 'sPatchOwners'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?sPatchOwners@GH3P@@3V?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@A
	call	??1?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__FsPatchOwners@GH3P@@YAXXZ ENDP			; GH3P::`dynamic atexit destructor for 'sPatchOwners''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\windows\fastgh3\plugins\code\core\patchmanager.cpp
;	COMDAT ??__EsPatchOwners@GH3P@@YAXXZ
text$di	SEGMENT
??__EsPatchOwners@GH3P@@YAXXZ PROC			; GH3P::`dynamic initializer for 'sPatchOwners'', COMDAT

; 11   : 	static std::map< uint8_t *, uint32_t > sPatchOwners;

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?sPatchOwners@GH3P@@3V?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@A
	call	??0?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAE@XZ ; std::map<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> > >::map<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> > >
	push	OFFSET ??__FsPatchOwners@GH3P@@YAXXZ	; GH3P::`dynamic atexit destructor for 'sPatchOwners''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EsPatchOwners@GH3P@@YAXXZ ENDP			; GH3P::`dynamic initializer for 'sPatchOwners''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAE@XZ PROC ; std::map<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> > >::~map<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::~_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAE@XZ ENDP ; std::map<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> > >::~map<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\map
;	COMDAT ??A?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAEAAIABQAE@Z
_TEXT	SEGMENT
tv75 = -260						; size = 4
tv76 = -256						; size = 4
$T2 = -248						; size = 16
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Keyval$ = 8						; size = 4
??A?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAEAAIABQAE@Z PROC ; std::map<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> > >::operator[], COMDAT
; _this$ = ecx

; 337  : 		{	// find element matching _Keyval or insert with default mapped

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??A?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAEAAIABQAE@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 338  : 		return (try_emplace(_Keyval).first->second);

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$try_emplace@$$V@?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@1@ABQAE@Z ; std::map<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> > >::try_emplace<>
	mov	DWORD PTR tv76[ebp], eax
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR tv75[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv75[ebp]
	call	??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBEPAU?$pair@QAEI@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator->
	add	eax, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@std@@QAE@XZ
	mov	eax, DWORD PTR $T3[ebp]

; 339  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??A?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAEAAIABQAE@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@_N@std@@QAE@XZ
__ehhandler$??A?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAEAAIABQAE@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-264]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??A?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAEAAIABQAE@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??A?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAEAAIABQAE@Z ENDP ; std::map<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> > >::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\map
;	COMDAT ??0?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
??0?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAE@XZ PROC ; std::map<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> > >::map<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> > >, COMDAT
; _this$ = ecx

; 100  : 		{	// construct empty map from defaults

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 99   : 		: _Mybase(key_compare())

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >

; 101  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAE@XZ ENDP ; std::map<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> > >::map<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Key, COMDAT
; _this$ = ecx

; 2177 : 		{	// return reference to key in node

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2178 : 		return ((const key_type&)this->_Kfn(this->_Myval(_Pnode)));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAU?$pair@QAEI@2@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myval
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEI@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Kfn

; 2179 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Key@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Key
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Kfn@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEI@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
?_Kfn@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEI@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Kfn, COMDAT
; _this$ = ecx

; 2172 : 		{	// get key from value

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2173 : 		return (_Traits::_Kfn(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$_Kfn@QAEI@?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@SAABQAEABU?$pair@QAEI@1@@Z ; std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0>::_Kfn<unsigned char * const,unsigned int>
	add	esp, 4

; 2174 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Kfn@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEI@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Kfn
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
tv149 = -332						; size = 4
tv154 = -328						; size = 4
tv151 = -324						; size = 4
tv158 = -320						; size = 4
tv148 = -316						; size = 4
tv157 = -312						; size = 4
tv146 = -308						; size = 4
tv156 = -304						; size = 4
$T2 = -296						; size = 12
$T3 = -276						; size = 12
$T4 = -256						; size = 4
$T5 = -244						; size = 12
$T6 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?_Tidy@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 2167 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Tidy@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 320				; 00000140H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-332]
	mov	ecx, 80					; 00000050H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2168 : 		erase(begin(), end());

	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::end
	mov	DWORD PTR tv156[ebp], eax
	mov	ecx, DWORD PTR tv156[ebp]
	mov	DWORD PTR tv146[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T6[ebp], esp
	mov	edx, DWORD PTR tv146[ebp]
	push	edx
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	DWORD PTR tv157[ebp], eax
	mov	eax, DWORD PTR tv157[ebp]
	mov	DWORD PTR tv148[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::begin
	mov	DWORD PTR tv158[ebp], eax
	mov	edx, DWORD PTR tv158[ebp]
	mov	DWORD PTR tv151[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T4[ebp], esp
	mov	eax, DWORD PTR tv151[ebp]
	push	eax
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	DWORD PTR tv154[ebp], eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::erase
	mov	DWORD PTR tv149[ebp], eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ

; 2169 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 332				; 0000014cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXXZ$0:
	lea	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXXZ$1:
	mov	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXXZ$2:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?_Tidy@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-336]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Tidy@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Tidy@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Tidy
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnext$ = -44						; size = 4
__Lock$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Orphan_ptr, COMDAT
; _this$ = ecx

; 2150 : 		{	// orphan iterators with specified node pointers

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2151 : 		_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2152 : 		const_iterator **_Pnext = (const_iterator **)this->_Getpfirst();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getpfirst@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getpfirst
	mov	DWORD PTR __Pnext$[ebp], eax

; 2153 : 		if (_Pnext != 0)

	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN4@Orphan_ptr
$LN2@Orphan_ptr:

; 2154 : 			while (*_Pnext != 0)

	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN4@Orphan_ptr

; 2155 : 				if ((*_Pnext)->_Ptr == this->_Myhead()
; 2156 : 					|| _Ptr != nullptr_t{} && (*_Pnext)->_Ptr != _Ptr)

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	esi, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myhead
	mov	ecx, DWORD PTR [esi+8]
	cmp	ecx, DWORD PTR [eax]
	je	SHORT $LN7@Orphan_ptr
	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN5@Orphan_ptr
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR __Ptr$[ebp]
	je	SHORT $LN5@Orphan_ptr
$LN7@Orphan_ptr:

; 2157 : 					_Pnext = (const_iterator **)(*_Pnext)->_Getpnext();

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax

; 2158 : 				else

	jmp	SHORT $LN6@Orphan_ptr
$LN5@Orphan_ptr:

; 2159 : 					{	// orphan the iterator
; 2160 : 					(*_Pnext)->_Clrcont();

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont

; 2161 : 					*_Pnext = *(const_iterator **)(*_Pnext)->_Getpnext();

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
$LN6@Orphan_ptr:

; 2162 : 					}

	jmp	SHORT $LN2@Orphan_ptr
$LN4@Orphan_ptr:

; 2163 : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Orphan_ptr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN13@Orphan_ptr:
	DD	1
	DD	$LN12@Orphan_ptr
$LN12@Orphan_ptr:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN10@Orphan_ptr
$LN10@Orphan_ptr:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Orphan_ptr
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = -20						; size = 4
_this$ = -8						; size = 4
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 2111 : 		{	// promote left node to root of subtree

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2112 : 		_Nodeptr _Pnode = this->_Left(_Wherenode);

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 2113 : 		this->_Left(_Wherenode) = this->_Right(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx

; 2114 : 
; 2115 : 		if (!this->_Isnil(this->_Right(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN2@Rrotate

; 2116 : 			this->_Parent(this->_Right(_Pnode)) = _Wherenode;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], edx
$LN2@Rrotate:

; 2117 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx

; 2118 : 
; 2119 : 		if (_Wherenode == _Root())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Root
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN3@Rrotate

; 2120 : 			_Root() = _Pnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Root
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN4@Rrotate
$LN3@Rrotate:

; 2121 : 		else if (_Wherenode == this->_Right(this->_Parent(_Wherenode)))

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN5@Rrotate

; 2122 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], edx

; 2123 : 		else

	jmp	SHORT $LN4@Rrotate
$LN5@Rrotate:

; 2124 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], edx
$LN4@Rrotate:

; 2125 : 
; 2126 : 		this->_Right(_Pnode) = _Wherenode;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], ecx

; 2127 : 		this->_Parent(_Wherenode) = _Pnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 2128 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Rrotate@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Rrotate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Root@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Root, COMDAT
; _this$ = ecx

; 2106 : 		{	// return root of nonmutable tree

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2107 : 		return (this->_Parent(this->_Myhead()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myhead
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4

; 2108 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Root@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Root
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Rmost@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 2101 : 		{	// return rightmost node in nonmutable tree

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2102 : 		return (this->_Right(this->_Myhead()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myhead
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4

; 2103 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Rmost@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Rmost
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = -20						; size = 4
_this$ = -8						; size = 4
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 2081 : 		{	// promote right node to root of subtree

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2082 : 		_Nodeptr _Pnode = this->_Right(_Wherenode);

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 2083 : 		this->_Right(_Wherenode) = this->_Left(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx

; 2084 : 
; 2085 : 		if (!this->_Isnil(this->_Left(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN2@Lrotate

; 2086 : 			this->_Parent(this->_Left(_Pnode)) = _Wherenode;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], edx
$LN2@Lrotate:

; 2087 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx

; 2088 : 
; 2089 : 		if (_Wherenode == _Root())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Root
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN3@Lrotate

; 2090 : 			_Root() = _Pnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Root
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN4@Lrotate
$LN3@Lrotate:

; 2091 : 		else if (_Wherenode == this->_Left(this->_Parent(_Wherenode)))

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN5@Lrotate

; 2092 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], edx

; 2093 : 		else

	jmp	SHORT $LN4@Lrotate
$LN5@Lrotate:

; 2094 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], edx
$LN4@Lrotate:

; 2095 : 
; 2096 : 		this->_Left(_Pnode) = _Wherenode;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], ecx

; 2097 : 		this->_Parent(_Wherenode) = _Pnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 2098 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Lrotate@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Lrotate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Lmost@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 2076 : 		{	// return leftmost node in nonmutable tree

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2077 : 		return (this->_Left(this->_Myhead()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myhead
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4

; 2078 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Lmost@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Lmost
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Compare@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBE_NABQAE0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?_Compare@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBE_NABQAE0@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Compare, COMDAT
; _this$ = ecx

; 2046 : 		{	// compare key_type to key_type, with debug checks

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2047 : 		return (_DEBUG_LT_PRED(this->_Getcomp(), _Left, _Right));

	push	2047					; 000007ffH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@ABU?$less@PAE@std@@ABQAEABQAE@std@@YA_NABU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> const &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H

; 2048 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Compare@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBE_NABQAE0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Compare
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$1 = -20						; size = 4
_this$ = -8						; size = 4
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 2032 : 		{	// free entire subtree, recursively

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2033 : 		for (_Nodeptr _Pnode = _Rootnode;

	mov	eax, DWORD PTR __Rootnode$[ebp]
	mov	DWORD PTR __Pnode$1[ebp], eax
	jmp	SHORT $LN4@Erase
$LN2@Erase:

; 2034 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

	mov	eax, DWORD PTR __Pnode$1[ebp]
	mov	DWORD PTR __Rootnode$[ebp], eax
$LN4@Erase:
	mov	eax, DWORD PTR __Pnode$1[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN1@Erase

; 2035 : 			{	// free subtrees, then node
; 2036 : 			_Erase(this->_Right(_Pnode));

	mov	eax, DWORD PTR __Pnode$1[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Erase

; 2037 : 			_Pnode = this->_Left(_Pnode);

	mov	eax, DWORD PTR __Pnode$1[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$1[ebp], ecx

; 2038 : 			this->_Getal().destroy(

	mov	eax, DWORD PTR __Rootnode$[ebp]
	push	eax
	call	?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAU?$pair@QAEI@2@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@U?$pair@QAEI@std@@@std@@YAPAU?$pair@QAEI@0@AAU10@@Z ; std::addressof<std::pair<unsigned char * const,unsigned int> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getal
	mov	ecx, eax
	call	??$destroy@U?$pair@QAEI@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAEI@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::destroy<std::pair<unsigned char * const,unsigned int> >

; 2039 : 				_STD addressof(this->_Myval(_Rootnode)));
; 2040 : 
; 2041 : 			this->_Getal().deallocate(_Rootnode, 1);

	push	1
	mov	eax, DWORD PTR __Rootnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::deallocate

; 2042 : 			}

	jmp	SHORT $LN2@Erase
$LN1@Erase:

; 2043 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Newnode$ = 8						; size = 4
?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Destroy_if_not_nil, COMDAT
; _this$ = ecx

; 1640 : 		{	// node exists, destroy it

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1641 : 		this->_Getal().destroy(

	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	call	?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAU?$pair@QAEI@2@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@U?$pair@QAEI@std@@@std@@YAPAU?$pair@QAEI@0@AAU10@@Z ; std::addressof<std::pair<unsigned char * const,unsigned int> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getal
	mov	ecx, eax
	call	??$destroy@U?$pair@QAEI@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAEI@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::destroy<std::pair<unsigned char * const,unsigned int> >

; 1642 : 			_STD addressof(this->_Myval(_Newnode)));
; 1643 : 
; 1644 : 		this->_Getal().deallocate(_Newnode, 1);

	push	1
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::deallocate

; 1645 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Destroy_if_not_nil
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@2@ABQAE@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?equal_range@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@2@ABQAE@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::equal_range, COMDAT
; _this$ = ecx

; 1589 : 		{	// find range equivalent to _Keyval in mutable tree

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 1590 : 		return (_Eqrange(_Keyval));

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Eqrange<unsigned char *>
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1591 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?equal_range@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@2@ABQAE@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::equal_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@ABQAE@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@ABQAE@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 1537 : 		{	// find leftmost node not less than _Keyval in mutable tree

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 1538 : 		return (iterator(_Lbound(_Keyval), &this->_Get_data()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Get_data
	push	eax
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Lbound@PAE@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@ABQAE@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Lbound<unsigned char *>
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1539 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?lower_bound@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@ABQAE@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::lower_bound
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?clear@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::clear, COMDAT
; _this$ = ecx

; 1467 : 		{	// erase all

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?clear@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1468 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1469 : 		this->_Orphan_ptr(nullptr_t{});

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Orphan_ptr

; 1470 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1471 : 
; 1472 : 		_Erase(_Root());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Root
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Erase

; 1473 : 		_Root() = this->_Myhead();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myhead
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Root
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1474 : 		_Lmost() = this->_Myhead();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myhead
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Lmost
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1475 : 		_Rmost() = this->_Myhead();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myhead
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Rmost
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1476 : 		this->_Mysize() = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAIXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Mysize
	mov	DWORD PTR [eax], 0

; 1477 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?clear@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?clear@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clear@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::clear
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEIABQAE@Z
_TEXT	SEGMENT
tv177 = -356						; size = 4
tv171 = -356						; size = 4
tv180 = -352						; size = 4
tv174 = -352						; size = 4
tv176 = -348						; size = 4
tv170 = -348						; size = 4
tv184 = -344						; size = 4
tv65 = -344						; size = 4
$T2 = -336						; size = 4
$T3 = -324						; size = 12
$T4 = -304						; size = 4
$T5 = -292						; size = 4
$T6 = -280						; size = 4
$T7 = -268						; size = 4
__Num$ = -64						; size = 4
__Where$ = -52						; size = 24
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Keyval$ = 8						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEIABQAE@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::erase, COMDAT
; _this$ = ecx

; 1459 : 		{	// erase and count all that match _Keyval

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEIABQAE@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 344				; 00000158H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-356]
	mov	ecx, 86					; 00000056H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1460 : 		_Pairii _Where = equal_range(_Keyval);

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?equal_range@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@2@ABQAE@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::equal_range
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1461 : 		size_type _Num = _STD distance(_Where.first, _Where.second);

	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T7[ebp], esp
	lea	eax, DWORD PTR __Where$[ebp+12]
	push	eax
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	mov	DWORD PTR tv170[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T6[ebp], esp
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv174[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	call	??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@0@0@Z ; std::distance<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > > >
	add	esp, 24					; 00000018H
	mov	DWORD PTR tv171[ebp], eax
	mov	eax, DWORD PTR tv171[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1462 : 		erase(_Where.first, _Where.second);

	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T5[ebp], esp
	lea	eax, DWORD PTR __Where$[ebp+12]
	push	eax
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv184[ebp], eax
	mov	ecx, DWORD PTR tv184[ebp]
	mov	DWORD PTR tv176[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T4[ebp], esp
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv180[ebp], eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::erase
	mov	DWORD PTR tv177[ebp], eax
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ

; 1463 : 		return (_Num);

	mov	eax, DWORD PTR __Num$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ
	mov	eax, DWORD PTR $T2[ebp]

; 1464 : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@erase
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 356				; 00000164H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN12@erase:
	DD	1
	DD	$LN11@erase
$LN11@erase:
	DD	-52					; ffffffccH
	DD	24					; 00000018H
	DD	$LN9@erase
$LN9@erase:
	DB	95					; 0000005fH
	DB	87					; 00000057H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEIABQAE@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEIABQAE@Z$1:
	mov	ecx, DWORD PTR $T7[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEIABQAE@Z$3:
	mov	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEIABQAE@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-360]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEIABQAE@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEIABQAE@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::erase
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
tv94 = -332						; size = 4
tv186 = -328						; size = 4
tv206 = -324						; size = 4
tv199 = -320						; size = 4
tv181 = -320						; size = 4
tv198 = -316						; size = 4
tv160 = -316						; size = 4
$T2 = -308						; size = 4
$T3 = -296						; size = 12
$T4 = -276						; size = 4
$T5 = -264						; size = 12
$T6 = -244						; size = 12
$T7 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 12
__Last$ = 24						; size = 12
?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@0@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::erase, COMDAT
; _this$ = ecx

; 1444 : 		{	// erase [_First, _Last)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 320				; 00000140H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-332]
	mov	ecx, 80					; 00000050H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 1445 : 		if (_First == begin() && _Last == end())

	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::begin
	mov	DWORD PTR tv160[ebp], eax
	mov	ecx, DWORD PTR tv160[ebp]
	mov	DWORD PTR tv181[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR tv181[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@erase
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::end
	mov	DWORD PTR tv206[ebp], eax
	mov	eax, DWORD PTR tv206[ebp]
	mov	DWORD PTR tv186[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 2
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR tv186[ebp]
	push	edx
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@erase
	mov	DWORD PTR tv94[ebp], 1
	jmp	SHORT $LN8@erase
$LN7@erase:
	mov	DWORD PTR tv94[ebp], 0
$LN8@erase:
	mov	cl, BYTE PTR tv94[ebp]
	mov	BYTE PTR $T7[ebp], cl
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR $T2[ebp]
	and	edx, 2
	je	SHORT $LN15@erase
	and	DWORD PTR $T2[ebp], -3			; fffffffdH
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
$LN15@erase:
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	SHORT $LN16@erase
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	lea	ecx, DWORD PTR $T6[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
$LN16@erase:
	movzx	ecx, BYTE PTR $T7[ebp]
	test	ecx, ecx
	je	SHORT $LN2@erase

; 1446 : 			{	// erase all
; 1447 : 			clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::clear

; 1448 : 			return (begin());

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::begin
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 4
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN1@erase

; 1449 : 			}
; 1450 : 		else

	jmp	$LN5@erase
$LN2@erase:

; 1451 : 			{	// partial erase, one at a time
; 1452 : 			while (_First != _Last)

	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@erase

; 1453 : 				erase(_First++);

	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	DWORD PTR $T4[ebp], esp
	push	0
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator++
	mov	DWORD PTR tv198[ebp], eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::erase
	mov	DWORD PTR tv199[ebp], eax
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1454 : 			return (iterator(_First._Ptr, &this->_Get_data()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Get_data
	push	eax
	mov	eax, DWORD PTR __First$[ebp+8]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 4
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN1@erase
$LN5@erase:

; 1455 : 			}
; 1456 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
$LN1@erase:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 332				; 0000014cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@0@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@0@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@0@Z$2:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN12@erase
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	lea	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
$LN12@erase:
	ret	0
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@0@Z$3:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 2
	je	$LN14@erase
	and	DWORD PTR $T2[ebp], -3			; fffffffdH
	lea	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
$LN14@erase:
	ret	0
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-336]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::erase
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
tv434 = -280						; size = 4
tv204 = -280						; size = 4
tv192 = -280						; size = 4
$T2 = -272						; size = 4
__Pnode$ = -68						; size = 4
__Fixnodeparent$ = -56					; size = 4
__Fixnode$ = -44					; size = 4
__Erasednode$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::erase, COMDAT
; _this$ = ecx

; 1259 : 		{	// erase element at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1260 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1261 : 		if (_Where._Getcont() != &this->_Get_data()
; 1262 : 			|| this->_Isnil(_Where._Mynode()))

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Get_data
	cmp	esi, eax
	jne	SHORT $LN6@erase
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN5@erase
$LN6@erase:

; 1263 : 			_DEBUG_ERROR("map/set erase iterator outside range");

	push	1263					; 000004efH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EK@PPDBPCAN@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN5@erase:

; 1264 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR __Erasednode$[ebp], eax

; 1265 : 		++_Where;	// save successor iterator for return

	lea	ecx, DWORD PTR __Where$[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator++

; 1266 : 		_Orphan_ptr(_Erasednode);

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Orphan_ptr

; 1267 : 
; 1268 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1269 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1270 : 		++_Where;	// save successor iterator for return
; 1271 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1272 : 
; 1273 : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 1274 : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 1275 : 		_Nodeptr _Pnode = _Erasednode;

	mov	eax, DWORD PTR __Erasednode$[ebp]
	mov	DWORD PTR __Pnode$[ebp], eax

; 1276 : 
; 1277 : 		if (this->_Isnil(this->_Left(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN7@erase

; 1278 : 			_Fixnode = this->_Right(_Pnode);	// stitch up right subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnode$[ebp], ecx
	jmp	SHORT $LN8@erase
$LN7@erase:

; 1279 : 		else if (this->_Isnil(this->_Right(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN9@erase

; 1280 : 			_Fixnode = this->_Left(_Pnode);	// stitch up left subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnode$[ebp], ecx

; 1281 : 		else

	jmp	SHORT $LN8@erase
$LN9@erase:

; 1282 : 			{	// two subtrees, must lift successor node to replace erased
; 1283 : 			_Pnode = _Where._Mynode();	// _Pnode is successor node

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR __Pnode$[ebp], eax

; 1284 : 			_Fixnode = this->_Right(_Pnode);	// _Fixnode is only subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnode$[ebp], ecx
$LN8@erase:

; 1285 : 			}
; 1286 : 
; 1287 : 		if (_Pnode == _Erasednode)

	mov	eax, DWORD PTR __Pnode$[ebp]
	cmp	eax, DWORD PTR __Erasednode$[ebp]
	jne	$LN11@erase

; 1288 : 			{	// at most one subtree, relink it
; 1289 : 			_Fixnodeparent = this->_Parent(_Erasednode);

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnodeparent$[ebp], ecx

; 1290 : 			if (!this->_Isnil(_Fixnode))

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN13@erase

; 1291 : 				this->_Parent(_Fixnode) = _Fixnodeparent;	// link up

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR [eax], ecx
$LN13@erase:

; 1292 : 
; 1293 : 			if (_Root() == _Erasednode)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Root
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN14@erase

; 1294 : 				_Root() = _Fixnode;	// link down from root

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Root
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN15@erase
$LN14@erase:

; 1295 : 			else if (this->_Left(_Fixnodeparent) == _Erasednode)

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN16@erase

; 1296 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link down to left

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1297 : 			else

	jmp	SHORT $LN15@erase
$LN16@erase:

; 1298 : 				this->_Right(_Fixnodeparent) =

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN15@erase:

; 1299 : 					_Fixnode;	// link down to right
; 1300 : 
; 1301 : 			if (_Lmost() == _Erasednode)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Lmost
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN18@erase

; 1302 : 				_Lmost() = this->_Isnil(_Fixnode)

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN44@erase
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR tv192[ebp], edx
	jmp	SHORT $LN45@erase
$LN44@erase:
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Min@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Min
	add	esp, 4
	mov	DWORD PTR tv192[ebp], eax
$LN45@erase:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Lmost
	mov	ecx, DWORD PTR tv192[ebp]
	mov	DWORD PTR [eax], ecx
$LN18@erase:

; 1303 : 					? _Fixnodeparent	// smallest is parent of erased node
; 1304 : 					: this->_Min(_Fixnode);	// smallest in relinked subtree
; 1305 : 
; 1306 : 			if (_Rmost() == _Erasednode)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Rmost
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN19@erase

; 1307 : 				_Rmost() = this->_Isnil(_Fixnode)

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN46@erase
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR tv204[ebp], edx
	jmp	SHORT $LN47@erase
$LN46@erase:
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Max@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Max
	add	esp, 4
	mov	DWORD PTR tv204[ebp], eax
$LN47@erase:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Rmost
	mov	ecx, DWORD PTR tv204[ebp]
	mov	DWORD PTR [eax], ecx
$LN19@erase:

; 1308 : 					? _Fixnodeparent	// largest is parent of erased node
; 1309 : 					: this->_Max(_Fixnode);	// largest in relinked subtree
; 1310 : 			}
; 1311 : 		else

	jmp	$LN12@erase
$LN11@erase:

; 1312 : 			{	// erased has two subtrees, _Pnode is successor to erased
; 1313 : 			this->_Parent(this->_Left(_Erasednode)) =

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], edx

; 1314 : 				_Pnode;	// link left up
; 1315 : 			this->_Left(_Pnode) =

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx

; 1316 : 				this->_Left(_Erasednode);	// link successor down
; 1317 : 
; 1318 : 			if (_Pnode == this->_Right(_Erasednode))

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN20@erase

; 1319 : 				_Fixnodeparent = _Pnode;	// successor is next to erased

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Fixnodeparent$[ebp], eax

; 1320 : 			else

	jmp	$LN21@erase
$LN20@erase:

; 1321 : 				{	// successor further down, link in place of erased
; 1322 : 				_Fixnodeparent =

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnodeparent$[ebp], ecx

; 1323 : 					this->_Parent(_Pnode);	// parent is successor's
; 1324 : 				if (!this->_Isnil(_Fixnode))

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN22@erase

; 1325 : 					this->_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR [eax], ecx
$LN22@erase:

; 1326 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link fix down

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1327 : 				this->_Right(_Pnode) =

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx

; 1328 : 					this->_Right(_Erasednode);	// link next down
; 1329 : 				this->_Parent(this->_Right(_Erasednode)) =

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], edx
$LN21@erase:

; 1330 : 					_Pnode;	// right up
; 1331 : 				}
; 1332 : 
; 1333 : 			if (_Root() == _Erasednode)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Root
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN23@erase

; 1334 : 				_Root() = _Pnode;	// link down from root

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Root
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN24@erase
$LN23@erase:

; 1335 : 			else if (this->_Left(this->_Parent(_Erasednode)) == _Erasednode)

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN25@erase

; 1336 : 				this->_Left(this->_Parent(_Erasednode)) =

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], edx

; 1337 : 					_Pnode;	// link down to left
; 1338 : 			else

	jmp	SHORT $LN24@erase
$LN25@erase:

; 1339 : 				this->_Right(this->_Parent(_Erasednode)) =

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], edx
$LN24@erase:

; 1340 : 					_Pnode;	// link down to right
; 1341 : 
; 1342 : 			this->_Parent(_Pnode) =

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx

; 1343 : 				this->_Parent(_Erasednode);	// link successor up
; 1344 : 			_STD swap(this->_Color(_Pnode),

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	push	eax
	call	??$swap@DX@std@@YAXAAD0@Z		; std::swap<char,void>
	add	esp, 8
$LN12@erase:

; 1345 : 				this->_Color(_Erasednode));	// recolor it
; 1346 : 			}
; 1347 : 
; 1348 : 		if (this->_Color(_Erasednode) == this->_Black)

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	$LN27@erase

; 1349 : 			{	// erasing black link, must recolor/rebalance tree
; 1350 : 			for (; _Fixnode != _Root()

	jmp	SHORT $LN4@erase
$LN2@erase:

; 1352 : 				_Fixnodeparent = this->_Parent(_Fixnode))

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnodeparent$[ebp], ecx
$LN4@erase:

; 1351 : 				&& this->_Color(_Fixnode) == this->_Black;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Root
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	je	$LN3@erase
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	$LN3@erase

; 1353 : 				if (_Fixnode == this->_Left(_Fixnodeparent))

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	$LN28@erase

; 1354 : 					{	// fixup left subtree
; 1355 : 					_Pnode = this->_Right(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 1356 : 					if (this->_Color(_Pnode) == this->_Red)

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN30@erase

; 1357 : 						{	// rotate red up from right subtree
; 1358 : 						this->_Color(_Pnode) = this->_Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1359 : 						this->_Color(_Fixnodeparent) = this->_Red;

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1360 : 						_Lrotate(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Lrotate

; 1361 : 						_Pnode = this->_Right(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN30@erase:

; 1362 : 						}
; 1363 : 
; 1364 : 					if (this->_Isnil(_Pnode))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN31@erase

; 1365 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], eax

; 1366 : 					else if (this->_Color(this->_Left(_Pnode)) == this->_Black

	jmp	$LN32@erase
$LN31@erase:

; 1367 : 						&& this->_Color(this->_Right(_Pnode)) == this->_Black)

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	SHORT $LN33@erase
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	SHORT $LN33@erase

; 1368 : 						{	// redden right subtree with black children
; 1369 : 						this->_Color(_Pnode) = this->_Red;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1370 : 						_Fixnode = _Fixnodeparent;

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], eax

; 1371 : 						}
; 1372 : 					else

	jmp	$LN32@erase
$LN33@erase:

; 1373 : 						{	// must rearrange right subtree
; 1374 : 						if (this->_Color(this->_Right(_Pnode))
; 1375 : 							== this->_Black)

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	SHORT $LN35@erase

; 1376 : 							{	// rotate red up from left sub-subtree
; 1377 : 							this->_Color(this->_Left(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1378 : 							this->_Color(_Pnode) = this->_Red;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1379 : 							_Rrotate(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Rrotate

; 1380 : 							_Pnode = this->_Right(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN35@erase:

; 1381 : 							}
; 1382 : 
; 1383 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	mov	dl, BYTE PTR [esi]
	mov	BYTE PTR [eax], dl

; 1384 : 						this->_Color(_Fixnodeparent) = this->_Black;

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1385 : 						this->_Color(this->_Right(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1386 : 						_Lrotate(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Lrotate

; 1387 : 						break;	// tree now recolored/rebalanced

	jmp	$LN3@erase
$LN32@erase:

; 1388 : 						}
; 1389 : 					}
; 1390 : 				else

	jmp	$LN29@erase
$LN28@erase:

; 1391 : 					{	// fixup right subtree
; 1392 : 					_Pnode = this->_Left(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 1393 : 					if (this->_Color(_Pnode) == this->_Red)

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN36@erase

; 1394 : 						{	// rotate red up from left subtree
; 1395 : 						this->_Color(_Pnode) = this->_Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1396 : 						this->_Color(_Fixnodeparent) = this->_Red;

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1397 : 						_Rrotate(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Rrotate

; 1398 : 						_Pnode = this->_Left(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN36@erase:

; 1399 : 						}
; 1400 : 
; 1401 : 					if (this->_Isnil(_Pnode))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN37@erase

; 1402 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], eax

; 1403 : 					else if (this->_Color(this->_Right(_Pnode)) ==

	jmp	$LN29@erase
$LN37@erase:

; 1404 : 						this->_Black
; 1405 : 						&& this->_Color(this->_Left(_Pnode)) == this->_Black)

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	SHORT $LN39@erase
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	SHORT $LN39@erase

; 1406 : 						{	// redden left subtree with black children
; 1407 : 						this->_Color(_Pnode) = this->_Red;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1408 : 						_Fixnode = _Fixnodeparent;

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], eax

; 1409 : 						}
; 1410 : 					else

	jmp	$LN29@erase
$LN39@erase:

; 1411 : 						{	// must rearrange left subtree
; 1412 : 						if (this->_Color(this->_Left(_Pnode)) == this->_Black)

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	SHORT $LN41@erase

; 1413 : 							{	// rotate red up from right sub-subtree
; 1414 : 							this->_Color(this->_Right(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1415 : 							this->_Color(_Pnode) = this->_Red;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1416 : 							_Lrotate(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Lrotate

; 1417 : 							_Pnode = this->_Left(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN41@erase:

; 1418 : 							}
; 1419 : 
; 1420 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	mov	dl, BYTE PTR [esi]
	mov	BYTE PTR [eax], dl

; 1421 : 						this->_Color(_Fixnodeparent) = this->_Black;

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1422 : 						this->_Color(this->_Left(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1423 : 						_Rrotate(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Rrotate

; 1424 : 						break;	// tree now recolored/rebalanced

	jmp	SHORT $LN3@erase
$LN29@erase:

; 1425 : 						}
; 1426 : 					}

	jmp	$LN2@erase
$LN3@erase:

; 1427 : 
; 1428 : 			this->_Color(_Fixnode) = this->_Black;	// stopping node is black

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
$LN27@erase:

; 1429 : 			}
; 1430 : 
; 1431 : 		this->_Getal().destroy(

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAU?$pair@QAEI@2@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@U?$pair@QAEI@std@@@std@@YAPAU?$pair@QAEI@0@AAU10@@Z ; std::addressof<std::pair<unsigned char * const,unsigned int> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getal
	mov	ecx, eax
	call	??$destroy@U?$pair@QAEI@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAEI@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::destroy<std::pair<unsigned char * const,unsigned int> >

; 1432 : 			_STD addressof(this->_Myval(_Erasednode)));	// delete erased node
; 1433 : 
; 1434 : 		this->_Getal().deallocate(_Erasednode, 1);

	push	1
	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::deallocate

; 1435 : 
; 1436 : 		if (0 < this->_Mysize())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAIXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Mysize
	cmp	DWORD PTR [eax], 0
	jbe	SHORT $LN42@erase

; 1437 : 			--this->_Mysize();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAIXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Mysize
	mov	DWORD PTR tv434[ebp], eax
	mov	eax, DWORD PTR tv434[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 1
	mov	edx, DWORD PTR tv434[ebp]
	mov	DWORD PTR [edx], ecx
$LN42@erase:

; 1438 : 
; 1439 : 		return (iterator(_Where._Ptr,

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Get_data
	push	eax
	mov	eax, DWORD PTR __Where$[ebp+8]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1440 : 			&this->_Get_data()));	// return successor iterator
; 1441 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-284]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::erase
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
?max_size@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::max_size, COMDAT
; _this$ = ecx

; 1175 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1176 : 		return (this->_Getal().max_size());

	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::max_size

; 1177 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::size, COMDAT
; _this$ = ecx

; 1170 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1171 : 		return (this->_Mysize());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABIXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Mysize
	mov	eax, DWORD PTR [eax]

; 1172 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::end, COMDAT
; _this$ = ecx

; 1120 : 		{	// return iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?end@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1121 : 		return (iterator(this->_Myhead(), &this->_Get_data()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Get_data
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myhead
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1122 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?end@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?end@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?end@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::end
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::begin, COMDAT
; _this$ = ecx

; 1110 : 		{	// return iterator for beginning of mutable sequence

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?begin@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1111 : 		return (iterator(_Lmost(), &this->_Get_data()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Get_data
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Lmost
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1112 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?begin@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?begin@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?begin@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::begin
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::~_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >, COMDAT
; _this$ = ecx

; 1090 : 		{	// destroy tree

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1091 : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Tidy

; 1092 : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::~_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::~_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Parg$ = 8						; size = 4
??0?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >, COMDAT
; _this$ = ecx

; 1004 : 		{	// construct empty tree from comparator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1003 : 		: _Mybase(_Parg)

	mov	eax, DWORD PTR __Parg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >

; 1005 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>,1>::~_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>,1>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>,1>::~_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@XZ PROC ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>,1>::_Get_second, COMDAT
; _this$ = ecx

; 319  : 		{	// return const reference to second

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 320  : 		return (_Myval2);

	mov	eax, DWORD PTR _this$[ebp]

; 321  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_second@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@XZ ENDP ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@XZ PROC ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>,1>::_Get_second, COMDAT
; _this$ = ecx

; 314  : 		{	// return reference to second

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 315  : 		return (_Myval2);

	mov	eax, DWORD PTR _this$[ebp]

; 316  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_second@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@XZ ENDP ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@PAE@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@PAE@2@XZ PROC ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>,1>::_Get_first, COMDAT
; _this$ = ecx

; 299  : 		{	// return const reference to first

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 300  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 301  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@PAE@2@XZ ENDP ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@PAE@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@PAE@2@XZ PROC ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>,1>::_Get_first, COMDAT
; _this$ = ecx

; 294  : 		{	// return reference to first

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 295  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 296  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@PAE@2@XZ ENDP ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>::_Get_second, COMDAT
; _this$ = ecx

; 319  : 		{	// return const reference to second

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 320  : 		return (_Myval2);

	mov	eax, DWORD PTR _this$[ebp]

; 321  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>::_Get_second, COMDAT
; _this$ = ecx

; 314  : 		{	// return reference to second

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 315  : 		return (_Myval2);

	mov	eax, DWORD PTR _this$[ebp]

; 316  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 299  : 		{	// return const reference to first

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 300  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 301  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 294  : 		{	// return reference to first

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 295  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 296  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::~_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::~_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Min, COMDAT

; 614  : 		{	// return leftmost node in subtree at _Pnode

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN2@Min:

; 615  : 		while (!_Isnil(_Left(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN3@Min

; 616  : 			_Pnode = _Left(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
	jmp	SHORT $LN2@Min
$LN3@Min:

; 617  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 618  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Min
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Max, COMDAT

; 607  : 		{	// return rightmost node in subtree at _Pnode

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN2@Max:

; 608  : 		while (!_Isnil(_Right(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN3@Max

; 609  : 			_Pnode = _Right(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
	jmp	SHORT $LN2@Max
$LN3@Max:

; 610  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 611  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAAU?$pair@QAEI@2@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAAU?$pair@QAEI@2@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Myval, COMDAT

; 602  : 		{	// return reference to value in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 603  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 16					; 00000010H

; 604  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAAU?$pair@QAEI@2@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Myval
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Right, COMDAT

; 597  : 		{	// return reference to right pointer in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 598  : 		return ((_Nodepref)_Pnode->_Right);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8

; 599  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Right
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Parent, COMDAT

; 592  : 		{	// return reference to parent pointer in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 593  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4

; 594  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Parent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Left, COMDAT

; 587  : 		{	// return reference to left pointer in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 588  : 		return ((_Nodepref)_Pnode->_Left);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 589  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Left
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Isnil, COMDAT

; 582  : 		{	// return reference to nil flag in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 583  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 13					; 0000000dH

; 584  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Isnil
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Color, COMDAT

; 577  : 		{	// return reference to color in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 578  : 		return ((char&)_Pnode->_Color);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 12					; 0000000cH

; 579  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Color
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >, COMDAT
; _this$ = ecx

; 569  : 		{	// initialize data

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12

; 567  : 		: _Myhead(),

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 568  : 		_Mysize(0)

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 570  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABIXZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Mysize, COMDAT
; _this$ = ecx

; 944  : 		{	// return const reference to _Mysize

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 945  : 		return (_Get_data()._Mysize);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Get_data
	add	eax, 8

; 946  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABIXZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Mysize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAIXZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Mysize, COMDAT
; _this$ = ecx

; 939  : 		{	// return reference to _Mysize

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 940  : 		return (_Get_data()._Mysize);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Get_data
	add	eax, 8

; 941  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAIXZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Mysize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myhead, COMDAT
; _this$ = ecx

; 934  : 		{	// return const reference to _Myhead

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 935  : 		return (_Get_data()._Myhead);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Get_data
	add	eax, 4

; 936  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myhead
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myhead, COMDAT
; _this$ = ecx

; 929  : 		{	// return reference to _Myhead

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 930  : 		return (_Get_data()._Myhead);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Get_data
	add	eax, 4

; 931  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myhead
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Get_data, COMDAT
; _this$ = ecx

; 924  : 		{	// return const reference to _Tree_val

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 925  : 		return (_Mypair._Get_second()._Get_second());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_second@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@XZ ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>,1>::_Get_second
	mov	ecx, eax
	call	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>::_Get_second

; 926  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Get_data, COMDAT
; _this$ = ecx

; 919  : 		{	// return reference to _Tree_val

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 920  : 		return (_Mypair._Get_second()._Get_second());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_second@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@XZ ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>,1>::_Get_second
	mov	ecx, eax
	call	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>::_Get_second

; 921  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getal, COMDAT
; _this$ = ecx

; 914  : 		{	// return const reference to allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 915  : 		return (_Mypair._Get_second()._Get_first());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_second@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@XZ ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>,1>::_Get_second
	mov	ecx, eax
	call	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>::_Get_first

; 916  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getal, COMDAT
; _this$ = ecx

; 909  : 		{	// return reference to allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 910  : 		return (_Mypair._Get_second()._Get_first());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_second@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@XZ ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>,1>::_Get_second
	mov	ecx, eax
	call	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>::_Get_first

; 911  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABU?$less@PAE@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABU?$less@PAE@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getcomp, COMDAT
; _this$ = ecx

; 904  : 		{	// return const reference to ordering predicate

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 905  : 		return (_Mypair._Get_first());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@PAE@2@XZ ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>,1>::_Get_first

; 906  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABU?$less@PAE@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getcomp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getcomp, COMDAT
; _this$ = ecx

; 899  : 		{	// return reference to ordering predicate

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 900  : 		return (_Mypair._Get_first());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@PAE@2@XZ ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>,1>::_Get_first

; 901  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getcomp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Freenode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$ = 8						; size = 4
?_Freenode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Freenode0, COMDAT
; _this$ = ecx

; 868  : 		{	// free non-value node using current allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 869  : 		_Getal().destroy(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::destroy<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>

; 870  : 			_STD addressof(_Left(_Pnode)));
; 871  : 		_Getal().destroy(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::destroy<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>

; 872  : 			_STD addressof(_Parent(_Pnode)));
; 873  : 		_Getal().destroy(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::destroy<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>

; 874  : 			_STD addressof(_Right(_Pnode)));
; 875  : 		_Getal().deallocate(_Pnode, 1);

	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::deallocate

; 876  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Freenode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Freenode0
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ
_TEXT	SEGMENT
tv147 = -236						; size = 4
tv146 = -236						; size = 4
tv145 = -236						; size = 4
__Pnode$ = -36						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Buynode0, COMDAT
; _this$ = ecx

; 849  : 		{	// allocate a non-value node

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 850  : 		_Nodeptr _Pnode = _Getal().allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::allocate
	mov	DWORD PTR __Pnode$[ebp], eax

; 851  : 
; 852  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 853  : 		_Getal().construct(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	DWORD PTR tv145[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myhead
	push	eax
	mov	ecx, DWORD PTR tv145[ebp]
	push	ecx
	call	??$addressof@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getal
	mov	ecx, eax
	call	??$construct@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::construct<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> * &>

; 854  : 			_STD addressof(_Left(_Pnode)), _Myhead());
; 855  : 		_Getal().construct(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	DWORD PTR tv146[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myhead
	push	eax
	mov	ecx, DWORD PTR tv146[ebp]
	push	ecx
	call	??$addressof@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getal
	mov	ecx, eax
	call	??$construct@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::construct<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> * &>

; 856  : 			_STD addressof(_Parent(_Pnode)), _Myhead());
; 857  : 		_Getal().construct(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	DWORD PTR tv147[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myhead
	push	eax
	mov	ecx, DWORD PTR tv147[ebp]
	push	ecx
	call	??$addressof@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getal
	mov	ecx, eax
	call	??$construct@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::construct<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> * &>
	jmp	SHORT $LN4@Buynode0
__catch$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ$0:

; 858  : 			_STD addressof(_Right(_Pnode)), _Myhead());
; 859  : 		_CATCH_ALL
; 860  : 		_Getal().deallocate(_Pnode, 1);

	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::deallocate

; 861  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 862  : 		_CATCH_END

	mov	eax, $LN7@Buynode0
	ret	0
$LN4@Buynode0:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ$1
$LN7@Buynode0:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ$1:

; 863  : 
; 864  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
$LN3@Buynode0:

; 865  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-240]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Buynode0
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$ = 8						; size = 4
?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Freeheadnode, COMDAT
; _this$ = ecx

; 838  : 		{	// free head node using current allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 839  : 		_Getal().destroy(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::destroy<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>

; 840  : 			_STD addressof(_Left(_Pnode)));
; 841  : 		_Getal().destroy(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::destroy<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>

; 842  : 			_STD addressof(_Parent(_Pnode)));
; 843  : 		_Getal().destroy(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::destroy<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>

; 844  : 			_STD addressof(_Right(_Pnode)));
; 845  : 		_Getal().deallocate(_Pnode, 1);

	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::deallocate

; 846  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Freeheadnode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ
_TEXT	SEGMENT
tv145 = -236						; size = 4
tv144 = -236						; size = 4
tv143 = -236						; size = 4
__Pnode$ = -36						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Buyheadnode, COMDAT
; _this$ = ecx

; 817  : 		{	// get head node using current allocator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 818  : 		_Nodeptr _Pnode = _Getal().allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::allocate
	mov	DWORD PTR __Pnode$[ebp], eax

; 819  : 
; 820  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 821  : 		_Getal().construct(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
	add	esp, 4
	mov	DWORD PTR tv143[ebp], eax
	lea	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv143[ebp]
	push	edx
	call	??$addressof@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getal
	mov	ecx, eax
	call	??$construct@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::construct<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> * &>

; 822  : 			_STD addressof(_Left(_Pnode)), _Pnode);
; 823  : 		_Getal().construct(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
	add	esp, 4
	mov	DWORD PTR tv144[ebp], eax
	lea	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv144[ebp]
	push	edx
	call	??$addressof@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getal
	mov	ecx, eax
	call	??$construct@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::construct<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> * &>

; 824  : 			_STD addressof(_Parent(_Pnode)), _Pnode);
; 825  : 		_Getal().construct(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
	add	esp, 4
	mov	DWORD PTR tv145[ebp], eax
	lea	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv145[ebp]
	push	edx
	call	??$addressof@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getal
	mov	ecx, eax
	call	??$construct@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::construct<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> *,std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> * &>
	jmp	SHORT $LN4@Buyheadnod
__catch$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ$0:

; 826  : 			_STD addressof(_Right(_Pnode)), _Pnode);
; 827  : 		_CATCH_ALL
; 828  : 		_Getal().deallocate(_Pnode, 1);

	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::deallocate

; 829  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 830  : 		_CATCH_END

	mov	eax, $LN7@Buyheadnod
	ret	0
$LN4@Buyheadnod:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ$1
$LN7@Buyheadnod:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ$1:

; 831  : 
; 832  : 		_Color(_Pnode) = _Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 833  : 		_Isnil(_Pnode) = true;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Isnil
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 834  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
$LN3@Buyheadnod:

; 835  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@Buyheadnod
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN11@Buyheadnod:
	DD	1
	DD	$LN10@Buyheadnod
$LN10@Buyheadnod:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN8@Buyheadnod
$LN8@Buyheadnod:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-240]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Buyheadnode
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Orphan_all@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Orphan_all@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Orphan_all, COMDAT
; _this$ = ecx

; 807  : 		{	// orphan all iterators

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 808  : 		_Get_data()._Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Get_data
	mov	ecx, eax
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 809  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_all@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myproxy, COMDAT
; _this$ = ecx

; 796  : 		{	// return reference to _Myproxy

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 797  : 		return (_Get_data()._Myproxy);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Get_data

; 798  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myproxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Getpfirst@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getpfirst@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getpfirst, COMDAT
; _this$ = ecx

; 791  : 		{	// get address of iterator chain

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 792  : 		return (_Get_data()._Getpfirst());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Get_data
	mov	ecx, eax
	call	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst

; 793  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getpfirst@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getpfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Free_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -17					; size = 1
_this$ = -8						; size = 4
?_Free_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Free_proxy, COMDAT
; _this$ = ecx

; 781  : 		{	// destroy proxy

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 782  : 		typename _Alty::template rebind<_Container_proxy>::other
; 783  : 			_Alproxy(_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getal
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > > &>

; 784  : 		_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Orphan_all

; 785  : 		_Alproxy.destroy(_Myproxy());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myproxy
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>

; 786  : 		_Alproxy.deallocate(_Alproxy.address(*_Myproxy()), 1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myproxy
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QBEPAU_Container_proxy@2@AAU32@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate

; 787  : 		_Myproxy() = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myproxy
	mov	DWORD PTR [eax], 0

; 788  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Free_proxy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Free_proxy:
	DD	1
	DD	$LN4@Free_proxy
$LN4@Free_proxy:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@Free_proxy
$LN3@Free_proxy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Free_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Alloc_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -228						; size = 8
__Alproxy$ = -17					; size = 1
_this$ = -8						; size = 4
?_Alloc_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Alloc_proxy, COMDAT
; _this$ = ecx

; 772  : 		{	// construct proxy

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 773  : 		typename _Alty::template rebind<_Container_proxy>::other
; 774  : 			_Alproxy(_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Getal
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > > &>

; 775  : 		_Myproxy() = _Unfancy(_Alproxy.allocate(1));

	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
	push	eax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myproxy
	mov	DWORD PTR [eax], esi

; 776  : 		_Alproxy.construct(_Myproxy(), _Container_proxy());

	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myproxy
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>

; 777  : 		_Myproxy()->_Mycont = &_Get_data();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Get_data
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myproxy
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax], esi

; 778  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Alloc_prox
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@Alloc_prox:
	DD	1
	DD	$LN4@Alloc_prox
$LN4@Alloc_prox:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@Alloc_prox
$LN3@Alloc_prox:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Alloc_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??1?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::~_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >, COMDAT
; _this$ = ecx

; 752  : 		{	// destroy head node, proxy

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 753  : 		_Freeheadnode(_Myhead());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myhead
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Freeheadnode

; 754  : 		_Free_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Free_proxy

; 755  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@$00@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::~_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Construct, COMDAT
; _this$ = ecx

; 741  : 		{	// construct head node, proxy

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 742  : 		_Myhead() = _Buyheadnode();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Buyheadnode
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myhead
	mov	DWORD PTR [eax], esi

; 743  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 744  : 		_Alloc_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Alloc_proxy
	jmp	SHORT $LN4@Construct
__catch$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ$0:

; 745  : 		_CATCH_ALL
; 746  : 		_Freeheadnode(_Myhead());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myhead
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Freeheadnode

; 747  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 748  : 		_CATCH_END

	mov	eax, $LN7@Construct
	ret	0
$LN4@Construct:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN3@Construct
$LN7@Construct:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN3@Construct:

; 749  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-224]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Construct
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??0?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z
_TEXT	SEGMENT
$T2 = -233						; size = 1
$T3 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
??0?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >, COMDAT
; _this$ = ecx

; 704  : 		{	// construct from comparator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 702  : 		: _Mypair(_One_then_variadic_args_t(), _Parg,

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	movzx	edx, BYTE PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0ABU?$less@PAE@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@PAE@1@$$QAU_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>,1>::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >,1>,1><std::less<unsigned char *> const &,std::_Zero_then_variadic_args_t>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 705  : 		_Construct();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Construct

; 706  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@2@$00@2@$00@std@@QAE@XZ
__ehhandler$??0?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Min@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Min, COMDAT

; 697  : 		{	// return leftmost node in subtree at _Pnode

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 698  : 		return (_Tree_val<_Val_types>::_Min(_Pnode));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Min
	add	esp, 4

; 699  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Min@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Min
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Max@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Max, COMDAT

; 692  : 		{	// return rightmost node in subtree at _Pnode

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 693  : 		return (_Tree_val<_Val_types>::_Max(_Pnode));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Max
	add	esp, 4

; 694  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Max@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAU?$pair@QAEI@2@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAU?$pair@QAEI@2@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myval, COMDAT

; 687  : 		{	// return reference to value in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 688  : 		return (_Tree_val<_Val_types>::_Myval(_Pnode));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAAU?$pair@QAEI@2@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Myval
	add	esp, 4

; 689  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAU?$pair@QAEI@2@PAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Myval
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right, COMDAT

; 682  : 		{	// return reference to right pointer in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 683  : 		return (_Tree_val<_Val_types>::_Right(_Pnode));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Right
	add	esp, 4

; 684  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Right
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent, COMDAT

; 677  : 		{	// return reference to parent pointer in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 678  : 		return (_Tree_val<_Val_types>::_Parent(_Pnode));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Parent
	add	esp, 4

; 679  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Parent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left, COMDAT

; 672  : 		{	// return reference to left pointer in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 673  : 		return (_Tree_val<_Val_types>::_Left(_Pnode));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Left
	add	esp, 4

; 674  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Left
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Isnil, COMDAT

; 667  : 		{	// return reference to nil flag in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 668  : 		return (_Tree_val<_Val_types>::_Isnil(_Pnode));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Isnil
	add	esp, 4

; 669  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Isnil
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color, COMDAT

; 662  : 		{	// return reference to color in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 663  : 		return (_Tree_val<_Val_types>::_Color(_Pnode));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > >::_Color
	add	esp, 4

; 664  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::_Color
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::max_size, COMDAT
; _this$ = ecx

; 1007 : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1008 : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::max_size
	add	esp, 4

; 1009 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::deallocate, COMDAT
; _this$ = ecx

; 986  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 987  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >::deallocate

; 988  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::allocate, COMDAT
; _this$ = ecx

; 975  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 976  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >::allocate

; 977  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >, COMDAT
; _this$ = ecx

; 936  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 935  : 		: _Mybase()

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAE@XZ ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >

; 937  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::max_size, COMDAT

; 868  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 869  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QBEIXZ ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >::max_size

; 870  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?max_size@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QBEIXZ PROC ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >::max_size, COMDAT
; _this$ = ecx

; 748  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 749  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 178956970				; 0aaaaaaaH

; 750  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QBEIXZ ENDP ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@I@Z PROC ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >::allocate, COMDAT
; _this$ = ecx

; 724  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 725  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));

	push	1
	push	24					; 00000018H
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	?_Allocate@std@@YAPAXII_N@Z		; std::_Allocate
	add	esp, 12					; 0000000cH

; 726  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@I@Z ENDP ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@I@Z PROC ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >::deallocate, COMDAT
; _this$ = ecx

; 719  : 		{	// deallocate object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 720  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	24					; 00000018H
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 721  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEI@std@@PAX@2@I@Z ENDP ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAE@XZ PROC ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >, COMDAT
; _this$ = ecx

; 699  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 700  : 		{	// construct default allocator (do nothing)
; 701  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U?$_Tree_node@U?$pair@QAEI@std@@PAX@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >::allocator<std::_Tree_node<std::pair<unsigned char * const,unsigned int>,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__FsOriginalCode@GH3P@@YAXXZ
text$yd	SEGMENT
??__FsOriginalCode@GH3P@@YAXXZ PROC			; GH3P::`dynamic atexit destructor for 'sOriginalCode'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?sOriginalCode@GH3P@@3V?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@A
	call	??1?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__FsOriginalCode@GH3P@@YAXXZ ENDP			; GH3P::`dynamic atexit destructor for 'sOriginalCode''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\windows\fastgh3\plugins\code\core\patchmanager.cpp
;	COMDAT ??__EsOriginalCode@GH3P@@YAXXZ
text$di	SEGMENT
??__EsOriginalCode@GH3P@@YAXXZ PROC			; GH3P::`dynamic initializer for 'sOriginalCode'', COMDAT

; 10   : 	static std::map< uint8_t *, std::vector<uint8_t> > sOriginalCode;

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?sOriginalCode@GH3P@@3V?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@A
	call	??0?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::map<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::map<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >
	push	OFFSET ??__FsOriginalCode@GH3P@@YAXXZ	; GH3P::`dynamic atexit destructor for 'sOriginalCode''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EsOriginalCode@GH3P@@YAXXZ ENDP			; GH3P::`dynamic initializer for 'sOriginalCode''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAE@XZ PROC ; std::map<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::~map<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::~_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAE@XZ ENDP ; std::map<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::~map<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\map
;	COMDAT ??A?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAEAAV?$vector@EV?$allocator@E@std@@@1@ABQAE@Z
_TEXT	SEGMENT
tv75 = -260						; size = 4
tv76 = -256						; size = 4
$T2 = -248						; size = 16
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Keyval$ = 8						; size = 4
??A?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAEAAV?$vector@EV?$allocator@E@std@@@1@ABQAE@Z PROC ; std::map<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::operator[], COMDAT
; _this$ = ecx

; 337  : 		{	// find element matching _Keyval or insert with default mapped

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??A?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAEAAV?$vector@EV?$allocator@E@std@@@1@ABQAE@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 338  : 		return (try_emplace(_Keyval).first->second);

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$try_emplace@$$V@?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@1@ABQAE@Z ; std::map<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::try_emplace<>
	mov	DWORD PTR tv76[ebp], eax
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR tv75[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv75[ebp]
	call	??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBEPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator->
	add	eax, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@XZ
	mov	eax, DWORD PTR $T3[ebp]

; 339  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??A?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAEAAV?$vector@EV?$allocator@E@std@@@1@ABQAE@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@XZ
__ehhandler$??A?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAEAAV?$vector@EV?$allocator@E@std@@@1@ABQAE@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-264]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??A?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAEAAV?$vector@EV?$allocator@E@std@@@1@ABQAE@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??A?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAEAAV?$vector@EV?$allocator@E@std@@@1@ABQAE@Z ENDP ; std::map<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\map
;	COMDAT ??0?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
??0?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAE@XZ PROC ; std::map<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::map<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >, COMDAT
; _this$ = ecx

; 100  : 		{	// construct empty map from defaults

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 99   : 		: _Mybase(key_compare())

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >

; 101  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAE@XZ ENDP ; std::map<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::map<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Key, COMDAT
; _this$ = ecx

; 2177 : 		{	// return reference to key in node

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2178 : 		return ((const key_type&)this->_Kfn(this->_Myval(_Pnode)));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myval
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Kfn

; 2179 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Key@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Key
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Kfn@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
?_Kfn@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Kfn, COMDAT
; _this$ = ecx

; 2172 : 		{	// get key from value

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2173 : 		return (_Traits::_Kfn(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$_Kfn@QAEV?$vector@EV?$allocator@E@std@@@std@@@?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@SAABQAEABU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@@Z ; std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0>::_Kfn<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >
	add	esp, 4

; 2174 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Kfn@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEABU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Kfn
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
tv149 = -332						; size = 4
tv154 = -328						; size = 4
tv151 = -324						; size = 4
tv158 = -320						; size = 4
tv148 = -316						; size = 4
tv157 = -312						; size = 4
tv146 = -308						; size = 4
tv156 = -304						; size = 4
$T2 = -296						; size = 12
$T3 = -276						; size = 12
$T4 = -256						; size = 4
$T5 = -244						; size = 12
$T6 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?_Tidy@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 2167 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Tidy@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 320				; 00000140H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-332]
	mov	ecx, 80					; 00000050H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2168 : 		erase(begin(), end());

	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::end
	mov	DWORD PTR tv156[ebp], eax
	mov	ecx, DWORD PTR tv156[ebp]
	mov	DWORD PTR tv146[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T6[ebp], esp
	mov	edx, DWORD PTR tv146[ebp]
	push	edx
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	DWORD PTR tv157[ebp], eax
	mov	eax, DWORD PTR tv157[ebp]
	mov	DWORD PTR tv148[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::begin
	mov	DWORD PTR tv158[ebp], eax
	mov	edx, DWORD PTR tv158[ebp]
	mov	DWORD PTR tv151[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T4[ebp], esp
	mov	eax, DWORD PTR tv151[ebp]
	push	eax
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	DWORD PTR tv154[ebp], eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::erase
	mov	DWORD PTR tv149[ebp], eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ

; 2169 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 332				; 0000014cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ$0:
	lea	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ$1:
	mov	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ$2:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?_Tidy@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-336]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Tidy@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Tidy@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Tidy
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnext$ = -44						; size = 4
__Lock$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Orphan_ptr, COMDAT
; _this$ = ecx

; 2150 : 		{	// orphan iterators with specified node pointers

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2151 : 		_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2152 : 		const_iterator **_Pnext = (const_iterator **)this->_Getpfirst();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getpfirst@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getpfirst
	mov	DWORD PTR __Pnext$[ebp], eax

; 2153 : 		if (_Pnext != 0)

	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN4@Orphan_ptr
$LN2@Orphan_ptr:

; 2154 : 			while (*_Pnext != 0)

	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN4@Orphan_ptr

; 2155 : 				if ((*_Pnext)->_Ptr == this->_Myhead()
; 2156 : 					|| _Ptr != nullptr_t{} && (*_Pnext)->_Ptr != _Ptr)

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	esi, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myhead
	mov	ecx, DWORD PTR [esi+8]
	cmp	ecx, DWORD PTR [eax]
	je	SHORT $LN7@Orphan_ptr
	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN5@Orphan_ptr
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR __Ptr$[ebp]
	je	SHORT $LN5@Orphan_ptr
$LN7@Orphan_ptr:

; 2157 : 					_Pnext = (const_iterator **)(*_Pnext)->_Getpnext();

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax

; 2158 : 				else

	jmp	SHORT $LN6@Orphan_ptr
$LN5@Orphan_ptr:

; 2159 : 					{	// orphan the iterator
; 2160 : 					(*_Pnext)->_Clrcont();

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont

; 2161 : 					*_Pnext = *(const_iterator **)(*_Pnext)->_Getpnext();

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
$LN6@Orphan_ptr:

; 2162 : 					}

	jmp	SHORT $LN2@Orphan_ptr
$LN4@Orphan_ptr:

; 2163 : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Orphan_ptr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN13@Orphan_ptr:
	DD	1
	DD	$LN12@Orphan_ptr
$LN12@Orphan_ptr:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN10@Orphan_ptr
$LN10@Orphan_ptr:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Orphan_ptr
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = -20						; size = 4
_this$ = -8						; size = 4
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 2111 : 		{	// promote left node to root of subtree

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2112 : 		_Nodeptr _Pnode = this->_Left(_Wherenode);

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 2113 : 		this->_Left(_Wherenode) = this->_Right(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx

; 2114 : 
; 2115 : 		if (!this->_Isnil(this->_Right(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN2@Rrotate

; 2116 : 			this->_Parent(this->_Right(_Pnode)) = _Wherenode;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], edx
$LN2@Rrotate:

; 2117 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx

; 2118 : 
; 2119 : 		if (_Wherenode == _Root())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Root
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN3@Rrotate

; 2120 : 			_Root() = _Pnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Root
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN4@Rrotate
$LN3@Rrotate:

; 2121 : 		else if (_Wherenode == this->_Right(this->_Parent(_Wherenode)))

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN5@Rrotate

; 2122 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], edx

; 2123 : 		else

	jmp	SHORT $LN4@Rrotate
$LN5@Rrotate:

; 2124 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], edx
$LN4@Rrotate:

; 2125 : 
; 2126 : 		this->_Right(_Pnode) = _Wherenode;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], ecx

; 2127 : 		this->_Parent(_Wherenode) = _Pnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 2128 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Rrotate@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Rrotate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Root@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Root, COMDAT
; _this$ = ecx

; 2106 : 		{	// return root of nonmutable tree

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2107 : 		return (this->_Parent(this->_Myhead()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myhead
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4

; 2108 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Root@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Root
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Rmost@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 2101 : 		{	// return rightmost node in nonmutable tree

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2102 : 		return (this->_Right(this->_Myhead()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myhead
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4

; 2103 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Rmost@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Rmost
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = -20						; size = 4
_this$ = -8						; size = 4
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 2081 : 		{	// promote right node to root of subtree

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2082 : 		_Nodeptr _Pnode = this->_Right(_Wherenode);

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 2083 : 		this->_Right(_Wherenode) = this->_Left(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx

; 2084 : 
; 2085 : 		if (!this->_Isnil(this->_Left(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN2@Lrotate

; 2086 : 			this->_Parent(this->_Left(_Pnode)) = _Wherenode;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], edx
$LN2@Lrotate:

; 2087 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx

; 2088 : 
; 2089 : 		if (_Wherenode == _Root())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Root
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN3@Lrotate

; 2090 : 			_Root() = _Pnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Root
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN4@Lrotate
$LN3@Lrotate:

; 2091 : 		else if (_Wherenode == this->_Left(this->_Parent(_Wherenode)))

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN5@Lrotate

; 2092 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], edx

; 2093 : 		else

	jmp	SHORT $LN4@Lrotate
$LN5@Lrotate:

; 2094 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], edx
$LN4@Lrotate:

; 2095 : 
; 2096 : 		this->_Left(_Pnode) = _Wherenode;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], ecx

; 2097 : 		this->_Parent(_Wherenode) = _Pnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 2098 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Lrotate@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Lrotate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Lmost@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 2076 : 		{	// return leftmost node in nonmutable tree

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2077 : 		return (this->_Left(this->_Myhead()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myhead
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4

; 2078 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Lmost@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Lmost
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Compare@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE_NABQAE0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?_Compare@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE_NABQAE0@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Compare, COMDAT
; _this$ = ecx

; 2046 : 		{	// compare key_type to key_type, with debug checks

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2047 : 		return (_DEBUG_LT_PRED(this->_Getcomp(), _Left, _Right));

	push	2047					; 000007ffH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@ABU?$less@PAE@std@@ABQAEABQAE@std@@YA_NABU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> const &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H

; 2048 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Compare@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBE_NABQAE0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Compare
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$1 = -20						; size = 4
_this$ = -8						; size = 4
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Erase, COMDAT
; _this$ = ecx

; 2032 : 		{	// free entire subtree, recursively

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2033 : 		for (_Nodeptr _Pnode = _Rootnode;

	mov	eax, DWORD PTR __Rootnode$[ebp]
	mov	DWORD PTR __Pnode$1[ebp], eax
	jmp	SHORT $LN4@Erase
$LN2@Erase:

; 2034 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

	mov	eax, DWORD PTR __Pnode$1[ebp]
	mov	DWORD PTR __Rootnode$[ebp], eax
$LN4@Erase:
	mov	eax, DWORD PTR __Pnode$1[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN1@Erase

; 2035 : 			{	// free subtrees, then node
; 2036 : 			_Erase(this->_Right(_Pnode));

	mov	eax, DWORD PTR __Pnode$1[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Erase

; 2037 : 			_Pnode = this->_Left(_Pnode);

	mov	eax, DWORD PTR __Pnode$1[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$1[ebp], ecx

; 2038 : 			this->_Getal().destroy(

	mov	eax, DWORD PTR __Rootnode$[ebp]
	push	eax
	call	?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@0@AAU10@@Z ; std::addressof<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
	mov	ecx, eax
	call	??$destroy@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::destroy<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >

; 2039 : 				_STD addressof(this->_Myval(_Rootnode)));
; 2040 : 
; 2041 : 			this->_Getal().deallocate(_Rootnode, 1);

	push	1
	mov	eax, DWORD PTR __Rootnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::deallocate

; 2042 : 			}

	jmp	SHORT $LN2@Erase
$LN1@Erase:

; 2043 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Newnode$ = 8						; size = 4
?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Destroy_if_not_nil, COMDAT
; _this$ = ecx

; 1640 : 		{	// node exists, destroy it

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1641 : 		this->_Getal().destroy(

	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	call	?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@0@AAU10@@Z ; std::addressof<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
	mov	ecx, eax
	call	??$destroy@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::destroy<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >

; 1642 : 			_STD addressof(this->_Myval(_Newnode)));
; 1643 : 
; 1644 : 		this->_Getal().deallocate(_Newnode, 1);

	push	1
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::deallocate

; 1645 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Destroy_if_not_nil
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@2@ABQAE@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?equal_range@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@2@ABQAE@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::equal_range, COMDAT
; _this$ = ecx

; 1589 : 		{	// find range equivalent to _Keyval in mutable tree

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 1590 : 		return (_Eqrange(_Keyval));

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Eqrange@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@1@ABQAE@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Eqrange<unsigned char *>
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1591 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?equal_range@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@2@ABQAE@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::equal_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@ABQAE@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@ABQAE@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 1537 : 		{	// find leftmost node not less than _Keyval in mutable tree

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 1538 : 		return (iterator(_Lbound(_Keyval), &this->_Get_data()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Get_data
	push	eax
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Lbound@PAE@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@ABQAE@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Lbound<unsigned char *>
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1539 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?lower_bound@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@ABQAE@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::lower_bound
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@ABQAE@Z
_TEXT	SEGMENT
tv172 = -348						; size = 4
tv190 = -344						; size = 4
tv154 = -340						; size = 4
tv167 = -336						; size = 4
tv186 = -332						; size = 4
tv162 = -328						; size = 4
tv65 = -324						; size = 4
$T2 = -316						; size = 4
$T3 = -304						; size = 12
$T4 = -284						; size = 12
$T5 = -264						; size = 12
$T6 = -244						; size = 4
__Where$ = -40						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@ABQAE@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::find, COMDAT
; _this$ = ecx

; 1480 : 		{	// find an element in mutable sequence that matches _Keyval

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?find@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@ABQAE@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 336				; 00000150H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-348]
	mov	ecx, 84					; 00000054H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0

; 1481 : 		iterator _Where = lower_bound(_Keyval);

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lower_bound@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@ABQAE@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::lower_bound
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1482 : 		return (_Where == end()

	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::end
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	mov	DWORD PTR tv162[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR tv162[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@find
	push	1484					; 000005ccH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Mynode
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEABQAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Key
	push	eax
	mov	edx, DWORD PTR __Keyval$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@AAU?$less@PAE@std@@ABQAEABQAE@std@@YA_NAAU?$less@PAE@0@ABQAE1PB_WI@Z ; std::_Debug_lt_pred<std::less<unsigned char *> &,unsigned char * const &,unsigned char * const &>
	add	esp, 20					; 00000014H
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@find
	lea	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv186[ebp], eax
	mov	edx, DWORD PTR tv186[ebp]
	mov	DWORD PTR tv167[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 2
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR tv167[ebp]
	mov	DWORD PTR tv154[ebp], ecx
	jmp	SHORT $LN4@find
$LN3@find:
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::end
	mov	DWORD PTR tv190[ebp], eax
	mov	eax, DWORD PTR tv190[ebp]
	mov	DWORD PTR tv172[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 4
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR tv172[ebp]
	mov	DWORD PTR tv154[ebp], edx
$LN4@find:
	mov	eax, DWORD PTR tv154[ebp]
	mov	DWORD PTR $T6[ebp], eax
	mov	ecx, DWORD PTR $T6[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 8
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 4
	je	SHORT $LN14@find
	and	DWORD PTR $T2[ebp], -5			; fffffffbH
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN14@find:
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T2[ebp]
	and	ecx, 2
	je	SHORT $LN15@find
	and	DWORD PTR $T2[ebp], -3			; fffffffdH
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN15@find:
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T2[ebp]
	and	edx, 1
	je	SHORT $LN16@find
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN16@find:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1483 : 			|| _DEBUG_LT_PRED(this->_Getcomp(),
; 1484 : 				_Keyval, this->_Key(_Where._Mynode()))
; 1485 : 					? end() : _Where);
; 1486 : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@find
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 348				; 0000015cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN20@find:
	DD	1
	DD	$LN19@find
$LN19@find:
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN17@find
$LN17@find:
	DB	95					; 0000005fH
	DB	87					; 00000057H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@ABQAE@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@ABQAE@Z$1:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN7@find
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	lea	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN7@find:
	ret	0
__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@ABQAE@Z$2:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 2
	je	$LN9@find
	and	DWORD PTR $T2[ebp], -3			; fffffffdH
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN9@find:
	ret	0
__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@ABQAE@Z$3:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 4
	je	$LN11@find
	and	DWORD PTR $T2[ebp], -5			; fffffffbH
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN11@find:
	ret	0
__ehhandler$?find@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@ABQAE@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-352]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?find@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@ABQAE@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?find@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@ABQAE@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::find
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?clear@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::clear, COMDAT
; _this$ = ecx

; 1467 : 		{	// erase all

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?clear@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1468 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1469 : 		this->_Orphan_ptr(nullptr_t{});

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Orphan_ptr

; 1470 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1471 : 
; 1472 : 		_Erase(_Root());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Root
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Erase

; 1473 : 		_Root() = this->_Myhead();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myhead
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Root
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1474 : 		_Lmost() = this->_Myhead();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myhead
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Lmost
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1475 : 		_Rmost() = this->_Myhead();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myhead
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Rmost
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1476 : 		this->_Mysize() = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAIXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Mysize
	mov	DWORD PTR [eax], 0

; 1477 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?clear@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?clear@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clear@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::clear
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEIABQAE@Z
_TEXT	SEGMENT
tv177 = -356						; size = 4
tv171 = -356						; size = 4
tv180 = -352						; size = 4
tv174 = -352						; size = 4
tv176 = -348						; size = 4
tv170 = -348						; size = 4
tv184 = -344						; size = 4
tv65 = -344						; size = 4
$T2 = -336						; size = 4
$T3 = -324						; size = 12
$T4 = -304						; size = 4
$T5 = -292						; size = 4
$T6 = -280						; size = 4
$T7 = -268						; size = 4
__Num$ = -64						; size = 4
__Where$ = -52						; size = 24
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Keyval$ = 8						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEIABQAE@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::erase, COMDAT
; _this$ = ecx

; 1459 : 		{	// erase and count all that match _Keyval

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEIABQAE@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 344				; 00000158H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-356]
	mov	ecx, 86					; 00000056H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1460 : 		_Pairii _Where = equal_range(_Keyval);

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?equal_range@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@2@ABQAE@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::equal_range
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1461 : 		size_type _Num = _STD distance(_Where.first, _Where.second);

	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T7[ebp], esp
	lea	eax, DWORD PTR __Where$[ebp+12]
	push	eax
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	mov	DWORD PTR tv170[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T6[ebp], esp
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv174[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	call	??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0@Z ; std::distance<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >
	add	esp, 24					; 00000018H
	mov	DWORD PTR tv171[ebp], eax
	mov	eax, DWORD PTR tv171[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1462 : 		erase(_Where.first, _Where.second);

	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T5[ebp], esp
	lea	eax, DWORD PTR __Where$[ebp+12]
	push	eax
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv184[ebp], eax
	mov	ecx, DWORD PTR tv184[ebp]
	mov	DWORD PTR tv176[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T4[ebp], esp
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv180[ebp], eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::erase
	mov	DWORD PTR tv177[ebp], eax
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ

; 1463 : 		return (_Num);

	mov	eax, DWORD PTR __Num$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ
	mov	eax, DWORD PTR $T2[ebp]

; 1464 : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@erase
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 356				; 00000164H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN12@erase:
	DD	1
	DD	$LN11@erase
$LN11@erase:
	DD	-52					; ffffffccH
	DD	24					; 00000018H
	DD	$LN9@erase
$LN9@erase:
	DB	95					; 0000005fH
	DB	87					; 00000057H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEIABQAE@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEIABQAE@Z$1:
	mov	ecx, DWORD PTR $T7[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEIABQAE@Z$3:
	mov	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEIABQAE@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-360]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEIABQAE@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEIABQAE@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::erase
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
tv94 = -332						; size = 4
tv186 = -328						; size = 4
tv206 = -324						; size = 4
tv199 = -320						; size = 4
tv181 = -320						; size = 4
tv198 = -316						; size = 4
tv160 = -316						; size = 4
$T2 = -308						; size = 4
$T3 = -296						; size = 12
$T4 = -276						; size = 4
$T5 = -264						; size = 12
$T6 = -244						; size = 12
$T7 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 12
__Last$ = 24						; size = 12
?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@0@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::erase, COMDAT
; _this$ = ecx

; 1444 : 		{	// erase [_First, _Last)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 320				; 00000140H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-332]
	mov	ecx, 80					; 00000050H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 1445 : 		if (_First == begin() && _Last == end())

	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::begin
	mov	DWORD PTR tv160[ebp], eax
	mov	ecx, DWORD PTR tv160[ebp]
	mov	DWORD PTR tv181[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR tv181[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@erase
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::end
	mov	DWORD PTR tv206[ebp], eax
	mov	eax, DWORD PTR tv206[ebp]
	mov	DWORD PTR tv186[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 2
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR tv186[ebp]
	push	edx
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@erase
	mov	DWORD PTR tv94[ebp], 1
	jmp	SHORT $LN8@erase
$LN7@erase:
	mov	DWORD PTR tv94[ebp], 0
$LN8@erase:
	mov	cl, BYTE PTR tv94[ebp]
	mov	BYTE PTR $T7[ebp], cl
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR $T2[ebp]
	and	edx, 2
	je	SHORT $LN15@erase
	and	DWORD PTR $T2[ebp], -3			; fffffffdH
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN15@erase:
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	SHORT $LN16@erase
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	lea	ecx, DWORD PTR $T6[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN16@erase:
	movzx	ecx, BYTE PTR $T7[ebp]
	test	ecx, ecx
	je	SHORT $LN2@erase

; 1446 : 			{	// erase all
; 1447 : 			clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::clear

; 1448 : 			return (begin());

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::begin
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 4
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN1@erase

; 1449 : 			}
; 1450 : 		else

	jmp	$LN5@erase
$LN2@erase:

; 1451 : 			{	// partial erase, one at a time
; 1452 : 			while (_First != _Last)

	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@erase

; 1453 : 				erase(_First++);

	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	DWORD PTR $T4[ebp], esp
	push	0
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator++
	mov	DWORD PTR tv198[ebp], eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::erase
	mov	DWORD PTR tv199[ebp], eax
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1454 : 			return (iterator(_First._Ptr, &this->_Get_data()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Get_data
	push	eax
	mov	eax, DWORD PTR __First$[ebp+8]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 4
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN1@erase
$LN5@erase:

; 1455 : 			}
; 1456 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN1@erase:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 332				; 0000014cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@0@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@0@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@0@Z$2:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN12@erase
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	lea	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN12@erase:
	ret	0
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@0@Z$3:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 2
	je	$LN14@erase
	and	DWORD PTR $T2[ebp], -3			; fffffffdH
	lea	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN14@erase:
	ret	0
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-336]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::erase
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
tv434 = -280						; size = 4
tv204 = -280						; size = 4
tv192 = -280						; size = 4
$T2 = -272						; size = 4
__Pnode$ = -68						; size = 4
__Fixnodeparent$ = -56					; size = 4
__Fixnode$ = -44					; size = 4
__Erasednode$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::erase, COMDAT
; _this$ = ecx

; 1259 : 		{	// erase element at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1260 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1261 : 		if (_Where._Getcont() != &this->_Get_data()
; 1262 : 			|| this->_Isnil(_Where._Mynode()))

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Get_data
	cmp	esi, eax
	jne	SHORT $LN6@erase
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN5@erase
$LN6@erase:

; 1263 : 			_DEBUG_ERROR("map/set erase iterator outside range");

	push	1263					; 000004efH
	push	OFFSET ??_C@_1IK@BHJCIFB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EK@PPDBPCAN@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN5@erase:

; 1264 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR __Erasednode$[ebp], eax

; 1265 : 		++_Where;	// save successor iterator for return

	lea	ecx, DWORD PTR __Where$[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator++

; 1266 : 		_Orphan_ptr(_Erasednode);

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Orphan_ptr

; 1267 : 
; 1268 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1269 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1270 : 		++_Where;	// save successor iterator for return
; 1271 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1272 : 
; 1273 : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 1274 : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 1275 : 		_Nodeptr _Pnode = _Erasednode;

	mov	eax, DWORD PTR __Erasednode$[ebp]
	mov	DWORD PTR __Pnode$[ebp], eax

; 1276 : 
; 1277 : 		if (this->_Isnil(this->_Left(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN7@erase

; 1278 : 			_Fixnode = this->_Right(_Pnode);	// stitch up right subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnode$[ebp], ecx
	jmp	SHORT $LN8@erase
$LN7@erase:

; 1279 : 		else if (this->_Isnil(this->_Right(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN9@erase

; 1280 : 			_Fixnode = this->_Left(_Pnode);	// stitch up left subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnode$[ebp], ecx

; 1281 : 		else

	jmp	SHORT $LN8@erase
$LN9@erase:

; 1282 : 			{	// two subtrees, must lift successor node to replace erased
; 1283 : 			_Pnode = _Where._Mynode();	// _Pnode is successor node

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR __Pnode$[ebp], eax

; 1284 : 			_Fixnode = this->_Right(_Pnode);	// _Fixnode is only subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnode$[ebp], ecx
$LN8@erase:

; 1285 : 			}
; 1286 : 
; 1287 : 		if (_Pnode == _Erasednode)

	mov	eax, DWORD PTR __Pnode$[ebp]
	cmp	eax, DWORD PTR __Erasednode$[ebp]
	jne	$LN11@erase

; 1288 : 			{	// at most one subtree, relink it
; 1289 : 			_Fixnodeparent = this->_Parent(_Erasednode);

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnodeparent$[ebp], ecx

; 1290 : 			if (!this->_Isnil(_Fixnode))

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN13@erase

; 1291 : 				this->_Parent(_Fixnode) = _Fixnodeparent;	// link up

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR [eax], ecx
$LN13@erase:

; 1292 : 
; 1293 : 			if (_Root() == _Erasednode)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Root
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN14@erase

; 1294 : 				_Root() = _Fixnode;	// link down from root

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Root
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN15@erase
$LN14@erase:

; 1295 : 			else if (this->_Left(_Fixnodeparent) == _Erasednode)

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN16@erase

; 1296 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link down to left

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1297 : 			else

	jmp	SHORT $LN15@erase
$LN16@erase:

; 1298 : 				this->_Right(_Fixnodeparent) =

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN15@erase:

; 1299 : 					_Fixnode;	// link down to right
; 1300 : 
; 1301 : 			if (_Lmost() == _Erasednode)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Lmost
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN18@erase

; 1302 : 				_Lmost() = this->_Isnil(_Fixnode)

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN44@erase
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR tv192[ebp], edx
	jmp	SHORT $LN45@erase
$LN44@erase:
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Min@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Min
	add	esp, 4
	mov	DWORD PTR tv192[ebp], eax
$LN45@erase:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Lmost
	mov	ecx, DWORD PTR tv192[ebp]
	mov	DWORD PTR [eax], ecx
$LN18@erase:

; 1303 : 					? _Fixnodeparent	// smallest is parent of erased node
; 1304 : 					: this->_Min(_Fixnode);	// smallest in relinked subtree
; 1305 : 
; 1306 : 			if (_Rmost() == _Erasednode)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Rmost
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN19@erase

; 1307 : 				_Rmost() = this->_Isnil(_Fixnode)

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN46@erase
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR tv204[ebp], edx
	jmp	SHORT $LN47@erase
$LN46@erase:
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Max@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Max
	add	esp, 4
	mov	DWORD PTR tv204[ebp], eax
$LN47@erase:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Rmost
	mov	ecx, DWORD PTR tv204[ebp]
	mov	DWORD PTR [eax], ecx
$LN19@erase:

; 1308 : 					? _Fixnodeparent	// largest is parent of erased node
; 1309 : 					: this->_Max(_Fixnode);	// largest in relinked subtree
; 1310 : 			}
; 1311 : 		else

	jmp	$LN12@erase
$LN11@erase:

; 1312 : 			{	// erased has two subtrees, _Pnode is successor to erased
; 1313 : 			this->_Parent(this->_Left(_Erasednode)) =

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], edx

; 1314 : 				_Pnode;	// link left up
; 1315 : 			this->_Left(_Pnode) =

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx

; 1316 : 				this->_Left(_Erasednode);	// link successor down
; 1317 : 
; 1318 : 			if (_Pnode == this->_Right(_Erasednode))

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN20@erase

; 1319 : 				_Fixnodeparent = _Pnode;	// successor is next to erased

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Fixnodeparent$[ebp], eax

; 1320 : 			else

	jmp	$LN21@erase
$LN20@erase:

; 1321 : 				{	// successor further down, link in place of erased
; 1322 : 				_Fixnodeparent =

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnodeparent$[ebp], ecx

; 1323 : 					this->_Parent(_Pnode);	// parent is successor's
; 1324 : 				if (!this->_Isnil(_Fixnode))

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN22@erase

; 1325 : 					this->_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR [eax], ecx
$LN22@erase:

; 1326 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link fix down

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1327 : 				this->_Right(_Pnode) =

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx

; 1328 : 					this->_Right(_Erasednode);	// link next down
; 1329 : 				this->_Parent(this->_Right(_Erasednode)) =

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], edx
$LN21@erase:

; 1330 : 					_Pnode;	// right up
; 1331 : 				}
; 1332 : 
; 1333 : 			if (_Root() == _Erasednode)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Root
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN23@erase

; 1334 : 				_Root() = _Pnode;	// link down from root

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Root
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN24@erase
$LN23@erase:

; 1335 : 			else if (this->_Left(this->_Parent(_Erasednode)) == _Erasednode)

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN25@erase

; 1336 : 				this->_Left(this->_Parent(_Erasednode)) =

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], edx

; 1337 : 					_Pnode;	// link down to left
; 1338 : 			else

	jmp	SHORT $LN24@erase
$LN25@erase:

; 1339 : 				this->_Right(this->_Parent(_Erasednode)) =

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], edx
$LN24@erase:

; 1340 : 					_Pnode;	// link down to right
; 1341 : 
; 1342 : 			this->_Parent(_Pnode) =

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx

; 1343 : 				this->_Parent(_Erasednode);	// link successor up
; 1344 : 			_STD swap(this->_Color(_Pnode),

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	push	eax
	call	??$swap@DX@std@@YAXAAD0@Z		; std::swap<char,void>
	add	esp, 8
$LN12@erase:

; 1345 : 				this->_Color(_Erasednode));	// recolor it
; 1346 : 			}
; 1347 : 
; 1348 : 		if (this->_Color(_Erasednode) == this->_Black)

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	$LN27@erase

; 1349 : 			{	// erasing black link, must recolor/rebalance tree
; 1350 : 			for (; _Fixnode != _Root()

	jmp	SHORT $LN4@erase
$LN2@erase:

; 1352 : 				_Fixnodeparent = this->_Parent(_Fixnode))

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnodeparent$[ebp], ecx
$LN4@erase:

; 1351 : 				&& this->_Color(_Fixnode) == this->_Black;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Root
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	je	$LN3@erase
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	$LN3@erase

; 1353 : 				if (_Fixnode == this->_Left(_Fixnodeparent))

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	$LN28@erase

; 1354 : 					{	// fixup left subtree
; 1355 : 					_Pnode = this->_Right(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 1356 : 					if (this->_Color(_Pnode) == this->_Red)

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN30@erase

; 1357 : 						{	// rotate red up from right subtree
; 1358 : 						this->_Color(_Pnode) = this->_Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1359 : 						this->_Color(_Fixnodeparent) = this->_Red;

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1360 : 						_Lrotate(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Lrotate

; 1361 : 						_Pnode = this->_Right(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN30@erase:

; 1362 : 						}
; 1363 : 
; 1364 : 					if (this->_Isnil(_Pnode))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN31@erase

; 1365 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], eax

; 1366 : 					else if (this->_Color(this->_Left(_Pnode)) == this->_Black

	jmp	$LN32@erase
$LN31@erase:

; 1367 : 						&& this->_Color(this->_Right(_Pnode)) == this->_Black)

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	SHORT $LN33@erase
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	SHORT $LN33@erase

; 1368 : 						{	// redden right subtree with black children
; 1369 : 						this->_Color(_Pnode) = this->_Red;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1370 : 						_Fixnode = _Fixnodeparent;

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], eax

; 1371 : 						}
; 1372 : 					else

	jmp	$LN32@erase
$LN33@erase:

; 1373 : 						{	// must rearrange right subtree
; 1374 : 						if (this->_Color(this->_Right(_Pnode))
; 1375 : 							== this->_Black)

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	SHORT $LN35@erase

; 1376 : 							{	// rotate red up from left sub-subtree
; 1377 : 							this->_Color(this->_Left(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1378 : 							this->_Color(_Pnode) = this->_Red;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1379 : 							_Rrotate(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Rrotate

; 1380 : 							_Pnode = this->_Right(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN35@erase:

; 1381 : 							}
; 1382 : 
; 1383 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	mov	dl, BYTE PTR [esi]
	mov	BYTE PTR [eax], dl

; 1384 : 						this->_Color(_Fixnodeparent) = this->_Black;

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1385 : 						this->_Color(this->_Right(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1386 : 						_Lrotate(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Lrotate

; 1387 : 						break;	// tree now recolored/rebalanced

	jmp	$LN3@erase
$LN32@erase:

; 1388 : 						}
; 1389 : 					}
; 1390 : 				else

	jmp	$LN29@erase
$LN28@erase:

; 1391 : 					{	// fixup right subtree
; 1392 : 					_Pnode = this->_Left(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 1393 : 					if (this->_Color(_Pnode) == this->_Red)

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN36@erase

; 1394 : 						{	// rotate red up from left subtree
; 1395 : 						this->_Color(_Pnode) = this->_Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1396 : 						this->_Color(_Fixnodeparent) = this->_Red;

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1397 : 						_Rrotate(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Rrotate

; 1398 : 						_Pnode = this->_Left(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN36@erase:

; 1399 : 						}
; 1400 : 
; 1401 : 					if (this->_Isnil(_Pnode))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN37@erase

; 1402 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], eax

; 1403 : 					else if (this->_Color(this->_Right(_Pnode)) ==

	jmp	$LN29@erase
$LN37@erase:

; 1404 : 						this->_Black
; 1405 : 						&& this->_Color(this->_Left(_Pnode)) == this->_Black)

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	SHORT $LN39@erase
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	SHORT $LN39@erase

; 1406 : 						{	// redden left subtree with black children
; 1407 : 						this->_Color(_Pnode) = this->_Red;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1408 : 						_Fixnode = _Fixnodeparent;

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], eax

; 1409 : 						}
; 1410 : 					else

	jmp	$LN29@erase
$LN39@erase:

; 1411 : 						{	// must rearrange left subtree
; 1412 : 						if (this->_Color(this->_Left(_Pnode)) == this->_Black)

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	SHORT $LN41@erase

; 1413 : 							{	// rotate red up from right sub-subtree
; 1414 : 							this->_Color(this->_Right(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1415 : 							this->_Color(_Pnode) = this->_Red;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1416 : 							_Lrotate(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Lrotate

; 1417 : 							_Pnode = this->_Left(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN41@erase:

; 1418 : 							}
; 1419 : 
; 1420 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	mov	dl, BYTE PTR [esi]
	mov	BYTE PTR [eax], dl

; 1421 : 						this->_Color(_Fixnodeparent) = this->_Black;

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1422 : 						this->_Color(this->_Left(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1423 : 						_Rrotate(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Rrotate

; 1424 : 						break;	// tree now recolored/rebalanced

	jmp	SHORT $LN3@erase
$LN29@erase:

; 1425 : 						}
; 1426 : 					}

	jmp	$LN2@erase
$LN3@erase:

; 1427 : 
; 1428 : 			this->_Color(_Fixnode) = this->_Black;	// stopping node is black

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
$LN27@erase:

; 1429 : 			}
; 1430 : 
; 1431 : 		this->_Getal().destroy(

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@0@AAU10@@Z ; std::addressof<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
	mov	ecx, eax
	call	??$destroy@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::destroy<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >

; 1432 : 			_STD addressof(this->_Myval(_Erasednode)));	// delete erased node
; 1433 : 
; 1434 : 		this->_Getal().deallocate(_Erasednode, 1);

	push	1
	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::deallocate

; 1435 : 
; 1436 : 		if (0 < this->_Mysize())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAIXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Mysize
	cmp	DWORD PTR [eax], 0
	jbe	SHORT $LN42@erase

; 1437 : 			--this->_Mysize();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAIXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Mysize
	mov	DWORD PTR tv434[ebp], eax
	mov	eax, DWORD PTR tv434[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 1
	mov	edx, DWORD PTR tv434[ebp]
	mov	DWORD PTR [edx], ecx
$LN42@erase:

; 1438 : 
; 1439 : 		return (iterator(_Where._Ptr,

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Get_data
	push	eax
	mov	eax, DWORD PTR __Where$[ebp+8]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1440 : 			&this->_Get_data()));	// return successor iterator
; 1441 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-284]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::erase
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
?max_size@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::max_size, COMDAT
; _this$ = ecx

; 1175 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1176 : 		return (this->_Getal().max_size());

	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::max_size

; 1177 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::size, COMDAT
; _this$ = ecx

; 1170 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1171 : 		return (this->_Mysize());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABIXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Mysize
	mov	eax, DWORD PTR [eax]

; 1172 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::end, COMDAT
; _this$ = ecx

; 1120 : 		{	// return iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?end@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1121 : 		return (iterator(this->_Myhead(), &this->_Get_data()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Get_data
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myhead
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1122 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?end@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?end@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?end@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::end
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::begin, COMDAT
; _this$ = ecx

; 1110 : 		{	// return iterator for beginning of mutable sequence

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?begin@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1111 : 		return (iterator(_Lmost(), &this->_Get_data()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Get_data
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Lmost
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1112 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?begin@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?begin@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?begin@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::begin
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::~_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >, COMDAT
; _this$ = ecx

; 1090 : 		{	// destroy tree

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1091 : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Tidy

; 1092 : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::~_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::~_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Parg$ = 8						; size = 4
??0?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >, COMDAT
; _this$ = ecx

; 1004 : 		{	// construct empty tree from comparator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1003 : 		: _Mybase(_Parg)

	mov	eax, DWORD PTR __Parg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >

; 1005 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1>::~_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1>::~_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@XZ PROC ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1>::_Get_second, COMDAT
; _this$ = ecx

; 319  : 		{	// return const reference to second

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 320  : 		return (_Myval2);

	mov	eax, DWORD PTR _this$[ebp]

; 321  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_second@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@XZ ENDP ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@XZ PROC ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1>::_Get_second, COMDAT
; _this$ = ecx

; 314  : 		{	// return reference to second

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 315  : 		return (_Myval2);

	mov	eax, DWORD PTR _this$[ebp]

; 316  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_second@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@XZ ENDP ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@PAE@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@PAE@2@XZ PROC ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1>::_Get_first, COMDAT
; _this$ = ecx

; 299  : 		{	// return const reference to first

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 300  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 301  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@PAE@2@XZ ENDP ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@PAE@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@PAE@2@XZ PROC ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1>::_Get_first, COMDAT
; _this$ = ecx

; 294  : 		{	// return reference to first

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 295  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 296  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@PAE@2@XZ ENDP ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>::_Get_second, COMDAT
; _this$ = ecx

; 319  : 		{	// return const reference to second

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 320  : 		return (_Myval2);

	mov	eax, DWORD PTR _this$[ebp]

; 321  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>::_Get_second, COMDAT
; _this$ = ecx

; 314  : 		{	// return reference to second

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 315  : 		return (_Myval2);

	mov	eax, DWORD PTR _this$[ebp]

; 316  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 299  : 		{	// return const reference to first

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 300  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 301  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 294  : 		{	// return reference to first

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 295  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 296  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::~_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::~_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Min, COMDAT

; 614  : 		{	// return leftmost node in subtree at _Pnode

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN2@Min:

; 615  : 		while (!_Isnil(_Left(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN3@Min

; 616  : 			_Pnode = _Left(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
	jmp	SHORT $LN2@Min
$LN3@Min:

; 617  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 618  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Min
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Max, COMDAT

; 607  : 		{	// return rightmost node in subtree at _Pnode

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN2@Max:

; 608  : 		while (!_Isnil(_Right(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN3@Max

; 609  : 			_Pnode = _Right(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
	jmp	SHORT $LN2@Max
$LN3@Max:

; 610  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 611  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Myval, COMDAT

; 602  : 		{	// return reference to value in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 603  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 16					; 00000010H

; 604  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Myval
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Right, COMDAT

; 597  : 		{	// return reference to right pointer in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 598  : 		return ((_Nodepref)_Pnode->_Right);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8

; 599  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Right
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Parent, COMDAT

; 592  : 		{	// return reference to parent pointer in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 593  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4

; 594  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Parent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Left, COMDAT

; 587  : 		{	// return reference to left pointer in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 588  : 		return ((_Nodepref)_Pnode->_Left);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 589  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Left
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Isnil, COMDAT

; 582  : 		{	// return reference to nil flag in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 583  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 13					; 0000000dH

; 584  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Isnil
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Color, COMDAT

; 577  : 		{	// return reference to color in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 578  : 		return ((char&)_Pnode->_Color);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 12					; 0000000cH

; 579  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Color
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >, COMDAT
; _this$ = ecx

; 569  : 		{	// initialize data

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12

; 567  : 		: _Myhead(),

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 568  : 		_Mysize(0)

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 570  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??R?$less@PAE@std@@QBE_NABQAE0@Z
_TEXT	SEGMENT
tv65 = -208						; size = 4
_this$ = -8						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@PAE@std@@QBE_NABQAE0@Z PROC			; std::less<unsigned char *>::operator(), COMDAT
; _this$ = ecx

; 238  : 		{	// apply operator< to operands

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 239  : 		return (_Left < _Right);

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jae	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]

; 240  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??R?$less@PAE@std@@QBE_NABQAE0@Z ENDP			; std::less<unsigned char *>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABIXZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Mysize, COMDAT
; _this$ = ecx

; 944  : 		{	// return const reference to _Mysize

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 945  : 		return (_Get_data()._Mysize);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Get_data
	add	eax, 8

; 946  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABIXZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Mysize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAIXZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Mysize, COMDAT
; _this$ = ecx

; 939  : 		{	// return reference to _Mysize

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 940  : 		return (_Get_data()._Mysize);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Get_data
	add	eax, 8

; 941  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAIXZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Mysize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myhead, COMDAT
; _this$ = ecx

; 934  : 		{	// return const reference to _Myhead

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 935  : 		return (_Get_data()._Myhead);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Get_data
	add	eax, 4

; 936  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myhead
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myhead, COMDAT
; _this$ = ecx

; 929  : 		{	// return reference to _Myhead

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 930  : 		return (_Get_data()._Myhead);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Get_data
	add	eax, 4

; 931  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myhead
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Get_data, COMDAT
; _this$ = ecx

; 924  : 		{	// return const reference to _Tree_val

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 925  : 		return (_Mypair._Get_second()._Get_second());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_second@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@XZ ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1>::_Get_second
	mov	ecx, eax
	call	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>::_Get_second

; 926  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Get_data, COMDAT
; _this$ = ecx

; 919  : 		{	// return reference to _Tree_val

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 920  : 		return (_Mypair._Get_second()._Get_second());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_second@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@XZ ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1>::_Get_second
	mov	ecx, eax
	call	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>::_Get_second

; 921  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal, COMDAT
; _this$ = ecx

; 914  : 		{	// return const reference to allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 915  : 		return (_Mypair._Get_second()._Get_first());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_second@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@XZ ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1>::_Get_second
	mov	ecx, eax
	call	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>::_Get_first

; 916  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal, COMDAT
; _this$ = ecx

; 909  : 		{	// return reference to allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 910  : 		return (_Mypair._Get_second()._Get_first());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_second@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@XZ ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1>::_Get_second
	mov	ecx, eax
	call	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>::_Get_first

; 911  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$less@PAE@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$less@PAE@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getcomp, COMDAT
; _this$ = ecx

; 904  : 		{	// return const reference to ordering predicate

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 905  : 		return (_Mypair._Get_first());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@PAE@2@XZ ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1>::_Get_first

; 906  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$less@PAE@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getcomp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getcomp, COMDAT
; _this$ = ecx

; 899  : 		{	// return reference to ordering predicate

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 900  : 		return (_Mypair._Get_first());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@PAE@2@XZ ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1>::_Get_first

; 901  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@PAE@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getcomp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Freenode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$ = 8						; size = 4
?_Freenode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Freenode0, COMDAT
; _this$ = ecx

; 868  : 		{	// free non-value node using current allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 869  : 		_Getal().destroy(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>

; 870  : 			_STD addressof(_Left(_Pnode)));
; 871  : 		_Getal().destroy(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>

; 872  : 			_STD addressof(_Parent(_Pnode)));
; 873  : 		_Getal().destroy(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>

; 874  : 			_STD addressof(_Right(_Pnode)));
; 875  : 		_Getal().deallocate(_Pnode, 1);

	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::deallocate

; 876  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Freenode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Freenode0
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ
_TEXT	SEGMENT
tv147 = -236						; size = 4
tv146 = -236						; size = 4
tv145 = -236						; size = 4
__Pnode$ = -36						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Buynode0, COMDAT
; _this$ = ecx

; 849  : 		{	// allocate a non-value node

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 850  : 		_Nodeptr _Pnode = _Getal().allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::allocate
	mov	DWORD PTR __Pnode$[ebp], eax

; 851  : 
; 852  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 853  : 		_Getal().construct(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	DWORD PTR tv145[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myhead
	push	eax
	mov	ecx, DWORD PTR tv145[ebp]
	push	ecx
	call	??$addressof@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
	mov	ecx, eax
	call	??$construct@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::construct<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &>

; 854  : 			_STD addressof(_Left(_Pnode)), _Myhead());
; 855  : 		_Getal().construct(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	DWORD PTR tv146[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myhead
	push	eax
	mov	ecx, DWORD PTR tv146[ebp]
	push	ecx
	call	??$addressof@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
	mov	ecx, eax
	call	??$construct@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::construct<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &>

; 856  : 			_STD addressof(_Parent(_Pnode)), _Myhead());
; 857  : 		_Getal().construct(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	DWORD PTR tv147[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myhead
	push	eax
	mov	ecx, DWORD PTR tv147[ebp]
	push	ecx
	call	??$addressof@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
	mov	ecx, eax
	call	??$construct@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::construct<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &>
	jmp	SHORT $LN4@Buynode0
__catch$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ$0:

; 858  : 			_STD addressof(_Right(_Pnode)), _Myhead());
; 859  : 		_CATCH_ALL
; 860  : 		_Getal().deallocate(_Pnode, 1);

	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::deallocate

; 861  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 862  : 		_CATCH_END

	mov	eax, $LN7@Buynode0
	ret	0
$LN4@Buynode0:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ$1
$LN7@Buynode0:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ$1:

; 863  : 
; 864  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
$LN3@Buynode0:

; 865  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-240]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Buynode0
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$ = 8						; size = 4
?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Freeheadnode, COMDAT
; _this$ = ecx

; 838  : 		{	// free head node using current allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 839  : 		_Getal().destroy(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>

; 840  : 			_STD addressof(_Left(_Pnode)));
; 841  : 		_Getal().destroy(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>

; 842  : 			_STD addressof(_Parent(_Pnode)));
; 843  : 		_Getal().destroy(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>

; 844  : 			_STD addressof(_Right(_Pnode)));
; 845  : 		_Getal().deallocate(_Pnode, 1);

	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::deallocate

; 846  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Freeheadnode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ
_TEXT	SEGMENT
tv145 = -236						; size = 4
tv144 = -236						; size = 4
tv143 = -236						; size = 4
__Pnode$ = -36						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Buyheadnode, COMDAT
; _this$ = ecx

; 817  : 		{	// get head node using current allocator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 818  : 		_Nodeptr _Pnode = _Getal().allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::allocate
	mov	DWORD PTR __Pnode$[ebp], eax

; 819  : 
; 820  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 821  : 		_Getal().construct(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
	add	esp, 4
	mov	DWORD PTR tv143[ebp], eax
	lea	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv143[ebp]
	push	edx
	call	??$addressof@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
	mov	ecx, eax
	call	??$construct@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::construct<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &>

; 822  : 			_STD addressof(_Left(_Pnode)), _Pnode);
; 823  : 		_Getal().construct(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
	add	esp, 4
	mov	DWORD PTR tv144[ebp], eax
	lea	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv144[ebp]
	push	edx
	call	??$addressof@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
	mov	ecx, eax
	call	??$construct@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::construct<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &>

; 824  : 			_STD addressof(_Parent(_Pnode)), _Pnode);
; 825  : 		_Getal().construct(

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
	add	esp, 4
	mov	DWORD PTR tv145[ebp], eax
	lea	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv145[ebp]
	push	edx
	call	??$addressof@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
	mov	ecx, eax
	call	??$construct@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::construct<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &>
	jmp	SHORT $LN4@Buyheadnod
__catch$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ$0:

; 826  : 			_STD addressof(_Right(_Pnode)), _Pnode);
; 827  : 		_CATCH_ALL
; 828  : 		_Getal().deallocate(_Pnode, 1);

	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::deallocate

; 829  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 830  : 		_CATCH_END

	mov	eax, $LN7@Buyheadnod
	ret	0
$LN4@Buyheadnod:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ$1
$LN7@Buyheadnod:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ$1:

; 831  : 
; 832  : 		_Color(_Pnode) = _Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 833  : 		_Isnil(_Pnode) = true;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Isnil
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 834  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
$LN3@Buyheadnod:

; 835  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@Buyheadnod
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN11@Buyheadnod:
	DD	1
	DD	$LN10@Buyheadnod
$LN10@Buyheadnod:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN8@Buyheadnod
$LN8@Buyheadnod:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-240]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Buyheadnode
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Orphan_all@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Orphan_all@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Orphan_all, COMDAT
; _this$ = ecx

; 807  : 		{	// orphan all iterators

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 808  : 		_Get_data()._Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Get_data
	mov	ecx, eax
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 809  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_all@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myproxy, COMDAT
; _this$ = ecx

; 796  : 		{	// return reference to _Myproxy

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 797  : 		return (_Get_data()._Myproxy);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Get_data

; 798  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myproxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Getpfirst@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getpfirst@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getpfirst, COMDAT
; _this$ = ecx

; 791  : 		{	// get address of iterator chain

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 792  : 		return (_Get_data()._Getpfirst());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Get_data
	mov	ecx, eax
	call	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst

; 793  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getpfirst@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getpfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Free_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -17					; size = 1
_this$ = -8						; size = 4
?_Free_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Free_proxy, COMDAT
; _this$ = ecx

; 781  : 		{	// destroy proxy

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 782  : 		typename _Alty::template rebind<_Container_proxy>::other
; 783  : 			_Alproxy(_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > > &>

; 784  : 		_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Orphan_all

; 785  : 		_Alproxy.destroy(_Myproxy());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myproxy
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>

; 786  : 		_Alproxy.deallocate(_Alproxy.address(*_Myproxy()), 1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myproxy
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QBEPAU_Container_proxy@2@AAU32@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate

; 787  : 		_Myproxy() = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myproxy
	mov	DWORD PTR [eax], 0

; 788  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Free_proxy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Free_proxy:
	DD	1
	DD	$LN4@Free_proxy
$LN4@Free_proxy:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@Free_proxy
$LN3@Free_proxy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Free_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Alloc_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -228						; size = 8
__Alproxy$ = -17					; size = 1
_this$ = -8						; size = 4
?_Alloc_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Alloc_proxy, COMDAT
; _this$ = ecx

; 772  : 		{	// construct proxy

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 773  : 		typename _Alty::template rebind<_Container_proxy>::other
; 774  : 			_Alproxy(_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > > &>

; 775  : 		_Myproxy() = _Unfancy(_Alproxy.allocate(1));

	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
	push	eax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myproxy
	mov	DWORD PTR [eax], esi

; 776  : 		_Alproxy.construct(_Myproxy(), _Container_proxy());

	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myproxy
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>

; 777  : 		_Myproxy()->_Mycont = &_Get_data();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Get_data
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myproxy
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax], esi

; 778  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Alloc_prox
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@Alloc_prox:
	DD	1
	DD	$LN4@Alloc_prox
$LN4@Alloc_prox:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@Alloc_prox
$LN3@Alloc_prox:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Alloc_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??1?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::~_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >, COMDAT
; _this$ = ecx

; 752  : 		{	// destroy head node, proxy

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 753  : 		_Freeheadnode(_Myhead());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myhead
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Freeheadnode

; 754  : 		_Free_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Free_proxy

; 755  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::~_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Construct, COMDAT
; _this$ = ecx

; 741  : 		{	// construct head node, proxy

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 742  : 		_Myhead() = _Buyheadnode();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Buyheadnode
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myhead
	mov	DWORD PTR [eax], esi

; 743  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 744  : 		_Alloc_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Alloc_proxy
	jmp	SHORT $LN4@Construct
__catch$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ$0:

; 745  : 		_CATCH_ALL
; 746  : 		_Freeheadnode(_Myhead());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myhead
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Freeheadnode

; 747  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 748  : 		_CATCH_END

	mov	eax, $LN7@Construct
	ret	0
$LN4@Construct:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN3@Construct
$LN7@Construct:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN3@Construct:

; 749  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-224]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Construct
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??0?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z
_TEXT	SEGMENT
$T2 = -233						; size = 1
$T3 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
??0?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >, COMDAT
; _this$ = ecx

; 704  : 		{	// construct from comparator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 702  : 		: _Mypair(_One_then_variadic_args_t(), _Parg,

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	movzx	edx, BYTE PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0ABU?$less@PAE@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@PAE@1@$$QAU_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1>::_Compressed_pair<std::less<unsigned char *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1><std::less<unsigned char *> const &,std::_Zero_then_variadic_args_t>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 705  : 		_Construct();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Construct

; 706  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Compressed_pair@U?$less@PAE@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@$00@2@$00@std@@QAE@XZ
__ehhandler$??0?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@PAE@1@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Min@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Min, COMDAT

; 697  : 		{	// return leftmost node in subtree at _Pnode

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 698  : 		return (_Tree_val<_Val_types>::_Min(_Pnode));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Min
	add	esp, 4

; 699  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Min@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Min
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Max@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Max, COMDAT

; 692  : 		{	// return rightmost node in subtree at _Pnode

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 693  : 		return (_Tree_val<_Val_types>::_Max(_Pnode));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Max
	add	esp, 4

; 694  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Max@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myval, COMDAT

; 687  : 		{	// return reference to value in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 688  : 		return (_Tree_val<_Val_types>::_Myval(_Pnode));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Myval
	add	esp, 4

; 689  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@2@PAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Myval
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right, COMDAT

; 682  : 		{	// return reference to right pointer in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 683  : 		return (_Tree_val<_Val_types>::_Right(_Pnode));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Right
	add	esp, 4

; 684  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Right
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent, COMDAT

; 677  : 		{	// return reference to parent pointer in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 678  : 		return (_Tree_val<_Val_types>::_Parent(_Pnode));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Parent
	add	esp, 4

; 679  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Parent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left, COMDAT

; 672  : 		{	// return reference to left pointer in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 673  : 		return (_Tree_val<_Val_types>::_Left(_Pnode));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Left
	add	esp, 4

; 674  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Left
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Isnil, COMDAT

; 667  : 		{	// return reference to nil flag in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 668  : 		return (_Tree_val<_Val_types>::_Isnil(_Pnode));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Isnil
	add	esp, 4

; 669  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Isnil
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color, COMDAT

; 662  : 		{	// return reference to color in node

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 663  : 		return (_Tree_val<_Val_types>::_Color(_Pnode));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Color
	add	esp, 4

; 664  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Color
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::max_size, COMDAT
; _this$ = ecx

; 1007 : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1008 : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::max_size
	add	esp, 4

; 1009 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::deallocate, COMDAT
; _this$ = ecx

; 986  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 987  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::deallocate

; 988  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::allocate, COMDAT
; _this$ = ecx

; 975  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 976  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::allocate

; 977  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >, COMDAT
; _this$ = ecx

; 936  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 935  : 		: _Mybase()

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAE@XZ ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >

; 937  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::max_size, COMDAT

; 868  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 869  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QBEIXZ ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::max_size

; 870  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?max_size@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QBEIXZ PROC ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::max_size, COMDAT
; _this$ = ecx

; 748  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 749  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 119304647				; 071c71c7H

; 750  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QBEIXZ ENDP ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@I@Z PROC ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::allocate, COMDAT
; _this$ = ecx

; 724  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 725  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));

	push	1
	push	36					; 00000024H
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	?_Allocate@std@@YAPAXII_N@Z		; std::_Allocate
	add	esp, 12					; 0000000cH

; 726  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@I@Z ENDP ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@I@Z PROC ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::deallocate, COMDAT
; _this$ = ecx

; 719  : 		{	// deallocate object at _Ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 720  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	36					; 00000024H
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 721  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@2@I@Z ENDP ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAE@XZ PROC ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >, COMDAT
; _this$ = ecx

; 699  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 700  : 		{	// construct default allocator (do nothing)
; 701  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U?$_Tree_node@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@PAX@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::allocator<std::_Tree_node<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??0?$tuple@$$V@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??0?$tuple@$$V@std@@QAE@ABV01@@Z PROC			; std::tuple<>::tuple<>, COMDAT
; _this$ = ecx

; 243  : 	constexpr tuple(const tuple&) _NOEXCEPT

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 244  : 		{	// copy construct
; 245  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$tuple@$$V@std@@QAE@ABV01@@Z ENDP			; std::tuple<>::tuple<>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??0?$tuple@$$V@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$tuple@$$V@std@@QAE@XZ PROC				; std::tuple<>::tuple<>, COMDAT
; _this$ = ecx

; 234  : 	constexpr tuple() _NOEXCEPT

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 235  : 		{	// default construct
; 236  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$tuple@$$V@std@@QAE@XZ ENDP				; std::tuple<>::tuple<>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?_Deallocate@std@@YAXPAXII@Z
_TEXT	SEGMENT
__Ptr_container$1 = -44					; size = 4
__Ptr_ptr$2 = -32					; size = 4
__Ptr_user$3 = -20					; size = 4
__User_size$ = -8					; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Sz$ = 16						; size = 4
?_Deallocate@std@@YAXPAXII@Z PROC			; std::_Deallocate, COMDAT

; 92   : 	{	// deallocate storage for _Count elements of size _Sz

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 93   :  #if defined(_M_IX86) || defined(_M_X64)
; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Sz$[ebp]
	cmp	DWORD PTR __Count$[ebp], eax
	jbe	SHORT $LN2@Deallocate
	mov	eax, OFFSET ??_C@_0BN@HMCJOMKN@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5_Sz?$AA@
	test	eax, eax
	je	SHORT $LN10@Deallocate
	xor	ecx, ecx
	jne	SHORT $LN11@Deallocate
$LN10@Deallocate:
	push	OFFSET ??_C@_1EI@MLOBABC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AA_?$AAS?$AAz?$AA?$CC?$AA?5?$AA?$CG@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	mov	edx, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	edx, 2
	push	edx
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN11@Deallocate
	int	3
$LN11@Deallocate:
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	eax, 2
	push	eax
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@Deallocate:

; 95   : 	const size_t _User_size = _Count * _Sz;

	mov	eax, DWORD PTR __Count$[ebp]
	imul	eax, DWORD PTR __Sz$[ebp]
	mov	DWORD PTR __User_size$[ebp], eax

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	DWORD PTR __User_size$[ebp], 4096	; 00001000H
	jb	$LN3@Deallocate

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Ptr_user$3[ebp], eax

; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

	mov	eax, DWORD PTR __Ptr_user$3[ebp]
	and	eax, 31					; 0000001fH
	je	SHORT $LN4@Deallocate
	mov	eax, OFFSET ??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@
	test	eax, eax
	je	SHORT $LN12@Deallocate
	xor	ecx, ecx
	jne	SHORT $LN13@Deallocate
$LN12@Deallocate:
	push	OFFSET ??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	mov	edx, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	edx, 8
	push	edx
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN13@Deallocate
	int	3
$LN13@Deallocate:
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	eax, 8
	push	eax
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN4@Deallocate:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);

	mov	eax, DWORD PTR __Ptr_user$3[ebp]
	sub	eax, 4
	mov	DWORD PTR __Ptr_ptr$2[ebp], eax

; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

	mov	eax, DWORD PTR __Ptr_ptr$2[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Ptr_container$1[ebp], ecx

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(

	mov	eax, 4
	imul	ecx, eax, -1
	mov	edx, DWORD PTR __Ptr_ptr$2[ebp]
	cmp	DWORD PTR [edx+ecx], -84215046		; fafafafaH
	je	SHORT $LN5@Deallocate
	mov	eax, OFFSET ??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@
	test	eax, eax
	je	SHORT $LN14@Deallocate
	xor	ecx, ecx
	jne	SHORT $LN15@Deallocate
$LN14@Deallocate:
	push	OFFSET ??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	mov	edx, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	edx, 18					; 00000012H
	push	edx
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN15@Deallocate
	int	3
$LN15@Deallocate:
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	eax, 18					; 00000012H
	push	eax
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN5@Deallocate:

; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

	mov	eax, DWORD PTR __Ptr_container$1[ebp]
	cmp	eax, DWORD PTR __Ptr_user$3[ebp]
	jb	SHORT $LN6@Deallocate
	mov	eax, OFFSET ??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@
	test	eax, eax
	je	SHORT $LN16@Deallocate
	xor	ecx, ecx
	jne	SHORT $LN17@Deallocate
$LN16@Deallocate:
	push	OFFSET ??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	mov	edx, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	edx, 22					; 00000016H
	push	edx
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN17@Deallocate
	int	3
$LN17@Deallocate:
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	eax, 22					; 00000016H
	push	eax
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN6@Deallocate:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)

	mov	eax, DWORD PTR __Ptr_user$3[ebp]
	sub	eax, DWORD PTR __Ptr_container$1[ebp]
	cmp	eax, 8
	jae	SHORT $LN7@Deallocate
	mov	eax, OFFSET ??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@
	test	eax, eax
	je	SHORT $LN18@Deallocate
	xor	ecx, ecx
	jne	SHORT $LN19@Deallocate
$LN18@Deallocate:
	push	OFFSET ??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	mov	edx, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	edx, 26					; 0000001aH
	push	edx
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN19@Deallocate
	int	3
$LN19@Deallocate:
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	eax, 26					; 0000001aH
	push	eax
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN7@Deallocate:

; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)
; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

	mov	eax, DWORD PTR __Ptr_user$3[ebp]
	sub	eax, DWORD PTR __Ptr_container$1[ebp]
	cmp	eax, 39					; 00000027H
	jbe	SHORT $LN8@Deallocate
	mov	eax, OFFSET ??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@
	test	eax, eax
	je	SHORT $LN20@Deallocate
	xor	ecx, ecx
	jne	SHORT $LN21@Deallocate
$LN20@Deallocate:
	push	OFFSET ??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	mov	edx, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	edx, 34					; 00000022H
	push	edx
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN21@Deallocate
	int	3
$LN21@Deallocate:
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXII@Z@4JA
	add	eax, 34					; 00000022H
	push	eax
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN8@Deallocate:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	eax, DWORD PTR __Ptr_container$1[ebp]
	mov	DWORD PTR __Ptr$[ebp], eax
$LN3@Deallocate:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 133  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Deallocate@std@@YAXPAXII@Z ENDP			; std::_Deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?_Allocate@std@@YAPAXII_N@Z
_TEXT	SEGMENT
__Ptr_container$1 = -44					; size = 4
__Block_size$2 = -32					; size = 4
__User_size$ = -20					; size = 4
__Ptr$ = -8						; size = 4
__Count$ = 8						; size = 4
__Sz$ = 12						; size = 4
__Try_aligned_allocation$ = 16				; size = 1
?_Allocate@std@@YAPAXII_N@Z PROC			; std::_Allocate, COMDAT

; 48   : 	{	// allocate storage for _Count elements of size _Sz

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 49   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 50   : 
; 51   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN2@Allocate

; 52   : 		return (_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	jmp	$LN9@Allocate
$LN2@Allocate:

; 53   : 
; 54   : 	// check overflow of multiply
; 55   : 	if ((size_t)(-1) / _Sz < _Count)

	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Sz$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN3@Allocate

; 56   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 57   : 	const size_t _User_size = _Count * _Sz;

	mov	eax, DWORD PTR __Count$[ebp]
	imul	eax, DWORD PTR __Sz$[ebp]
	mov	DWORD PTR __User_size$[ebp], eax

; 58   : 
; 59   :  #if defined(_M_IX86) || defined(_M_X64)
; 60   : 	if (_Try_aligned_allocation
; 61   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	movzx	eax, BYTE PTR __Try_aligned_allocation$[ebp]
	test	eax, eax
	je	$LN4@Allocate
	cmp	DWORD PTR __User_size$[ebp], 4096	; 00001000H
	jb	$LN4@Allocate

; 62   : 		{	// allocate large block
; 63   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 64   : 			"Big allocations should at least match vector register size");
; 65   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	mov	eax, DWORD PTR __User_size$[ebp]
	add	eax, 39					; 00000027H
	mov	DWORD PTR __Block_size$2[ebp], eax

; 66   : 		if (_Block_size <= _User_size)

	mov	eax, DWORD PTR __Block_size$2[ebp]
	cmp	eax, DWORD PTR __User_size$[ebp]
	ja	SHORT $LN6@Allocate

; 67   : 			_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN6@Allocate:

; 68   : 		const uintptr_t _Ptr_container =
; 69   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	mov	eax, DWORD PTR __Block_size$2[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr_container$1[ebp], eax

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	cmp	DWORD PTR __Ptr_container$1[ebp], 0
	jne	SHORT $LN7@Allocate
	mov	eax, OFFSET ??_C@_0BE@LMNLACIC@_Ptr_container?5?$CB?$DN?50?$AA@
	test	eax, eax
	je	SHORT $LN10@Allocate
	xor	ecx, ecx
	jne	SHORT $LN11@Allocate
$LN10@Allocate:
	push	OFFSET ??_C@_1DG@HGDKEBPG@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	mov	edx, DWORD PTR ?__LINE__Var@?0??_Allocate@std@@YAPAXII_N@Z@4JA
	add	edx, 22					; 00000016H
	push	edx
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN11@Allocate
	int	3
$LN11@Allocate:
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Allocate@std@@YAPAXII_N@Z@4JA
	add	eax, 22					; 00000016H
	push	eax
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BO@NKFMJPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN7@Allocate:

; 71   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	mov	eax, DWORD PTR __Ptr_container$1[ebp]
	add	eax, 39					; 00000027H
	and	eax, -32				; ffffffe0H
	mov	DWORD PTR __Ptr$[ebp], eax

; 72   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 73   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	eax, 4
	imul	ecx, eax, -1
	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR __Ptr_container$1[ebp]
	mov	DWORD PTR [edx+ecx], eax

; 74   : 
; 75   :  #ifdef _DEBUG
; 76   : 		static_cast<uintptr_t *>(_Ptr)[-2] = _BIG_ALLOCATION_SENTINEL;

	mov	eax, 4
	imul	ecx, eax, -2
	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [edx+ecx], -84215046		; fafafafaH

; 77   :  #endif /* _DEBUG */
; 78   : 		}
; 79   : 	else

	jmp	SHORT $LN5@Allocate
$LN4@Allocate:

; 80   :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 81   : 
; 82   : 		{	// allocate normal block
; 83   : 		_Ptr = ::operator new(_User_size);

	mov	eax, DWORD PTR __User_size$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN5@Allocate
	mov	eax, OFFSET ??_C@_09GLJCAGLP@_Ptr?5?$CB?$DN?50?$AA@
	test	eax, eax
	je	SHORT $LN12@Allocate
	xor	ecx, ecx
	jne	SHORT $LN13@Allocate
$LN12@Allocate:
	push	OFFSET ??_C@_1CC@GKJLLHIM@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	mov	edx, DWORD PTR ?__LINE__Var@?0??_Allocate@std@@YAPAXII_N@Z@4JA
	add	edx, 36					; 00000024H
	push	edx
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN13@Allocate
	int	3
$LN13@Allocate:
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Allocate@std@@YAPAXII_N@Z@4JA
	add	eax, 36					; 00000024H
	push	eax
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BO@NKFMJPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN5@Allocate:

; 85   : 		}
; 86   : 	return (_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN9@Allocate:

; 87   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Allocate@std@@YAPAXII_N@Z ENDP			; std::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Orphan_me@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$1 = -20						; size = 4
_this$ = -8						; size = 4
?_Orphan_me@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Orphan_me, COMDAT
; _this$ = ecx

; 193  : 		{	// cut ties with parent

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 194  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 195  : 		if (_Myproxy != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@Orphan_me

; 196  : 			{	// adopted, remove self from list
; 197  : 			_Iterator_base12 **_Pnext = &_Myproxy->_Myfirstiter;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$1[ebp], ecx
$LN2@Orphan_me:

; 198  : 			while (*_Pnext != 0 && *_Pnext != this)

	mov	eax, DWORD PTR __Pnext$1[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Orphan_me
	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _this$[ebp]
	je	SHORT $LN3@Orphan_me

; 199  : 				_Pnext = &(*_Pnext)->_Mynextiter;

	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$1[ebp], ecx
	jmp	SHORT $LN2@Orphan_me
$LN3@Orphan_me:

; 200  : 
; 201  : 			if (*_Pnext == 0)

	mov	eax, DWORD PTR __Pnext$1[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN5@Orphan_me

; 202  : 				_DEBUG_ERROR("ITERATOR LIST CORRUPTED!");

	push	202					; 000000caH
	push	OFFSET ??_C@_1JA@MHADJNIL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN5@Orphan_me:

; 203  : 			*_Pnext = _Mynextiter;

	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx

; 204  : 			_Myproxy = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN1@Orphan_me:

; 205  : 			}
; 206  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 207  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_me@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Orphan_me
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ PROC	; std::_Iterator_base12::_Getpnext, COMDAT
; _this$ = ecx

; 188  : 		{	// get address of remaining iterator chain

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 189  : 		return (&_Mynextiter);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4

; 190  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ENDP	; std::_Iterator_base12::_Getpnext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT
; _this$ = ecx

; 183  : 		{	// get owning container

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 184  : 		return (_Myproxy == 0 ? 0 : _Myproxy->_Mycont);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@Getcont
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@Getcont
$LN3@Getcont:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv68[ebp], eax
$LN4@Getcont:
	mov	eax, DWORD PTR tv68[ebp]

; 185  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Clrcont@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Clrcont@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Clrcont, COMDAT
; _this$ = ecx

; 178  : 		{	// disown owning container

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 179  : 		_Myproxy = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 180  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Clrcont@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Clrcont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
_TEXT	SEGMENT
__Lock$2 = -56						; size = 4
__Parent_proxy$3 = -44					; size = 4
__Lock$4 = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Parent$ = 8						; size = 4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT
; _this$ = ecx

; 149  : 		{	// adopt this iterator by parent

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 150  : 		if (_Parent == 0)

	cmp	DWORD PTR __Parent$[ebp], 0
	jne	SHORT $LN2@Adopt

; 151  : 			{	// no future parent, just disown current parent
; 152  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 153  : 			_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$4[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 154  : 			_Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 155  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 156  : 			}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$4[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit

; 157  : 		else

	jmp	SHORT $LN1@Adopt
$LN2@Adopt:

; 158  : 			{	// have a parent, do adoption
; 159  : 			_Container_proxy *_Parent_proxy = _Parent->_Myproxy;

	mov	eax, DWORD PTR __Parent$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Parent_proxy$3[ebp], ecx

; 160  : 
; 161  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 162  : 			if (_Myproxy != _Parent_proxy)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR __Parent_proxy$3[ebp]
	je	SHORT $LN1@Adopt

; 163  : 				{	// change parentage
; 164  : 				_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 165  : 				_Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 166  : 				_Mynextiter = _Parent_proxy->_Myfirstiter;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parent_proxy$3[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 167  : 				_Parent_proxy->_Myfirstiter = this;

	mov	eax, DWORD PTR __Parent_proxy$3[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 168  : 				_Myproxy = _Parent_proxy;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parent_proxy$3[ebp]
	mov	DWORD PTR [eax], ecx

; 169  : 				}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN1@Adopt:

; 170  : 
; 171  :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 172  : 			_Myproxy = _Parent_proxy;
; 173  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 174  : 			}
; 175  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@Adopt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN12@Adopt:
	DD	2
	DD	$LN11@Adopt
$LN11@Adopt:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN8@Adopt
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN9@Adopt
$LN9@Adopt:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
$LN8@Adopt:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0:
	lea	ecx, DWORD PTR __Lock$4[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1:
	lea	ecx, DWORD PTR __Lock$2[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-256]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??1_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
__Lock$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT
; _this$ = ecx

; 141  : 		{	// destroy the iterator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Iterator_base12@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 142  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 143  : 		_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit

; 144  : 		_Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 145  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 146  : 		}

	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@Iterator_b
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@Iterator_b:
	DD	1
	DD	$LN5@Iterator_b
$LN5@Iterator_b:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN3@Iterator_b
$LN3@Iterator_b:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1_Iterator_base12@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
__Lock$2 = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z PROC		; std::_Iterator_base12::operator=, COMDAT
; _this$ = ecx

; 124  : 		{	// assign an iterator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 125  : 		if (_Myproxy == _Right._Myproxy)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN2@operator
	jmp	SHORT $LN3@operator
$LN2@operator:

; 126  : 			;
; 127  : 		else if (_Right._Myproxy != 0)

	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN4@operator

; 128  : 			_Adopt(_Right._Myproxy->_Mycont);

	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 129  : 		else

	jmp	SHORT $LN3@operator
$LN4@operator:

; 130  : 			{	// becoming invalid, disown current parent
; 131  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 132  : 			_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 133  : 			_Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 134  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 135  : 			}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN3@operator:

; 136  : 
; 137  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 138  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN11@operator:
	DD	1
	DD	$LN10@operator
$LN10@operator:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN8@operator
$LN8@operator:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z$0:
	lea	ecx, DWORD PTR __Lock$2[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ENDP		; std::_Iterator_base12::operator=
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??0_Iterator_base12@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??0_Iterator_base12@std@@QAE@ABU01@@Z PROC		; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx

; 119  : 		{	// copy an iterator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 118  : 		: _Myproxy(0), _Mynextiter(0)

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 120  : 		*this = _Right;

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=

; 121  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Iterator_base12@std@@QAE@ABU01@@Z ENDP		; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??0_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx

; 114  : 		{	// construct orphaned iterator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 113  : 		: _Myproxy(0), _Mynextiter(0)

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 115  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z
_TEXT	SEGMENT
__Temp$ = -32						; size = 4
__Lock$ = -20						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z PROC	; std::_Container_base12::_Swap_all, COMDAT
; _this$ = ecx

; 230  : 	{	// swap all iterators

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 231  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 232  : 	_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit

; 233  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 234  : 
; 235  : 	_Container_proxy *_Temp = _Myproxy;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Temp$[ebp], ecx

; 236  : 	_Myproxy = _Right._Myproxy;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 237  : 	_Right._Myproxy = _Temp;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR __Temp$[ebp]
	mov	DWORD PTR [eax], ecx

; 238  : 
; 239  : 	if (_Myproxy != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Swap_all

; 240  : 		_Myproxy->_Mycont = (_Container_base12 *)this;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], edx
$LN2@Swap_all:

; 241  : 	if (_Right._Myproxy != 0)

	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Swap_all

; 242  : 		_Right._Myproxy->_Mycont = (_Container_base12 *)&_Right;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [ecx], edx
$LN3@Swap_all:

; 243  : 	}

	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Swap_all
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN8@Swap_all:
	DD	1
	DD	$LN7@Swap_all
$LN7@Swap_all:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@Swap_all
$LN6@Swap_all:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z ENDP	; std::_Container_base12::_Swap_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Orphan_all@_Container_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$1 = -32						; size = 4
__Lock$2 = -20						; size = 4
_this$ = -8						; size = 4
?_Orphan_all@_Container_base12@std@@QAEXXZ PROC		; std::_Container_base12::_Orphan_all, COMDAT
; _this$ = ecx

; 215  : 	{	// orphan all iterators

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 216  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 217  : 	if (_Myproxy != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@Orphan_all

; 218  : 		{	// proxy allocated, drain it
; 219  : 		_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit

; 220  : 
; 221  : 		for (_Iterator_base12 **_Pnext = &_Myproxy->_Myfirstiter;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$1[ebp], ecx
	jmp	SHORT $LN4@Orphan_all
$LN2@Orphan_all:

; 222  : 			*_Pnext != 0; *_Pnext = (*_Pnext)->_Mynextiter)

	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Pnext$1[ebp]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], eax
$LN4@Orphan_all:
	mov	eax, DWORD PTR __Pnext$1[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Orphan_all

; 223  : 			(*_Pnext)->_Myproxy = 0;

	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], 0
	jmp	SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 224  : 		_Myproxy->_Myfirstiter = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], 0

; 225  : 		}

	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN1@Orphan_all:

; 226  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 227  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Orphan_all
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@Orphan_all:
	DD	1
	DD	$LN9@Orphan_all
$LN9@Orphan_all:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN8@Orphan_all
$LN8@Orphan_all:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?_Orphan_all@_Container_base12@std@@QAEXXZ ENDP		; std::_Container_base12::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ PROC ; std::_Container_base12::_Getpfirst, COMDAT
; _this$ = ecx

; 99   : 		{	// get address of iterator chain

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 100  : 		return (_Myproxy == 0 ? 0 : &_Myproxy->_Myfirstiter);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@Getpfirst
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@Getpfirst
$LN3@Getpfirst:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR tv68[ebp], edx
$LN4@Getpfirst:
	mov	eax, DWORD PTR tv68[ebp]

; 101  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ENDP ; std::_Container_base12::_Getpfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??1_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::~_Container_base12, COMDAT
; _this$ = ecx

; 94   : 		{	// destroy the container

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Container_base12@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 95   : 		_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 96   : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1_Container_base12@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Container_base12@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::~_Container_base12
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??0_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT
; _this$ = ecx

; 80   : 		{	// construct childless container

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 79   : 		: _Myproxy(0)

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 81   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??0_Container_proxy@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Container_proxy@std@@QAE@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx

; 68   : 		{	// construct from pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 67   : 		: _Mycont(0), _Myfirstiter(0)

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 69   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_proxy@std@@QAE@XZ ENDP			; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_new.h
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 93   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 94   :         return;
; 95   :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 87   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 88   :         (void)_Size;
; 89   :         return _Where;

	mov	eax, DWORD PTR __Where$[ebp]

; 90   :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4ScopedUnprotect@GH3P@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4ScopedUnprotect@GH3P@@QAEAAV01@ABV01@@Z PROC		; GH3P::ScopedUnprotect::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4ScopedUnprotect@GH3P@@QAEAAV01@ABV01@@Z ENDP		; GH3P::ScopedUnprotect::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4PatchManager@GH3P@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4PatchManager@GH3P@@QAEAAV01@$$QAV01@@Z PROC		; GH3P::PatchManager::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4PatchManager@GH3P@@QAEAAV01@$$QAV01@@Z ENDP		; GH3P::PatchManager::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4PatchManager@GH3P@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4PatchManager@GH3P@@QAEAAV01@ABV01@@Z PROC		; GH3P::PatchManager::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4PatchManager@GH3P@@QAEAAV01@ABV01@@Z ENDP		; GH3P::PatchManager::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\windows\fastgh3\plugins\code\core\patchmanager.cpp
;	COMDAT ?RemovePatches@PatchManager@GH3P@@SA_NI@Z
_TEXT	SEGMENT
$T2 = -389						; size = 1
_patch$3 = -188						; size = 4
_<end>$L1$4 = -176					; size = 12
_<begin>$L1$5 = -156					; size = 12
_<range>$L1$6 = -136					; size = 4
_owner$7 = -124						; size = 4
_patchLocation$8 = -112					; size = 4
_kv$9 = -100						; size = 8
_<end>$L0$10 = -84					; size = 12
_<begin>$L0$11 = -64					; size = 12
_<range>$L0$12 = -44					; size = 4
_patchesToRemove$ = -32					; size = 16
__$EHRec$ = -12						; size = 12
_ownerID$ = 8						; size = 4
?RemovePatches@PatchManager@GH3P@@SA_NI@Z PROC		; GH3P::PatchManager::RemovePatches, COMDAT

; 91   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RemovePatches@PatchManager@GH3P@@SA_NI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 384				; 00000180H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-396]
	mov	ecx, 96					; 00000060H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 92   : 		std::vector<uint8_t *> patchesToRemove;

	lea	ecx, DWORD PTR _patchesToRemove$[ebp]
	call	??0?$vector@PAEV?$allocator@PAE@std@@@std@@QAE@XZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::vector<unsigned char *,std::allocator<unsigned char *> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 93   : 
; 94   : 		for (auto kv : sPatchOwners)

	mov	DWORD PTR _<range>$L0$12[ebp], OFFSET ?sPatchOwners@GH3P@@3V?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@A
	lea	eax, DWORD PTR _<begin>$L0$11[ebp]
	push	eax
	mov	ecx, DWORD PTR _<range>$L0$12[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::begin
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	eax, DWORD PTR _<end>$L0$10[ebp]
	push	eax
	mov	ecx, DWORD PTR _<range>$L0$12[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::end
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	jmp	SHORT $LN4@RemovePatc
$LN2@RemovePatc:
	lea	ecx, DWORD PTR _<begin>$L0$11[ebp]
	call	??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator++
$LN4@RemovePatc:
	lea	eax, DWORD PTR _<end>$L0$10[ebp]
	push	eax
	lea	ecx, DWORD PTR _<begin>$L0$11[ebp]
	call	??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@RemovePatc
	lea	ecx, DWORD PTR _<begin>$L0$11[ebp]
	call	??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QBEAAU?$pair@QAEI@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,unsigned int> > > >::operator*
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _kv$9[ebp], ecx
	mov	DWORD PTR _kv$9[ebp+4], edx

; 95   : 		{
; 96   : 			uint8_t *patchLocation = kv.first;

	mov	eax, DWORD PTR _kv$9[ebp]
	mov	DWORD PTR _patchLocation$8[ebp], eax

; 97   : 			uint32_t owner = kv.second;

	mov	eax, DWORD PTR _kv$9[ebp+4]
	mov	DWORD PTR _owner$7[ebp], eax

; 98   : 			
; 99   : 			if (owner != ownerID)

	mov	eax, DWORD PTR _owner$7[ebp]
	cmp	eax, DWORD PTR _ownerID$[ebp]
	je	SHORT $LN8@RemovePatc

; 100  : 				continue;

	jmp	SHORT $LN2@RemovePatc
$LN8@RemovePatc:

; 101  : 			
; 102  : 			patchesToRemove.push_back(patchLocation);

	lea	eax, DWORD PTR _patchLocation$8[ebp]
	push	eax
	lea	ecx, DWORD PTR _patchesToRemove$[ebp]
	call	?push_back@?$vector@PAEV?$allocator@PAE@std@@@std@@QAEXABQAE@Z ; std::vector<unsigned char *,std::allocator<unsigned char *> >::push_back
	jmp	SHORT $LN2@RemovePatc
$LN3@RemovePatc:

; 103  : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _<end>$L0$10[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _<begin>$L0$11[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ

; 104  : 
; 105  : 		for (uint8_t *patch : patchesToRemove)

	lea	eax, DWORD PTR _patchesToRemove$[ebp]
	mov	DWORD PTR _<range>$L1$6[ebp], eax
	lea	eax, DWORD PTR _<begin>$L1$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _<range>$L1$6[ebp]
	call	?begin@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@XZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::begin
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	eax, DWORD PTR _<end>$L1$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _<range>$L1$6[ebp]
	call	?end@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@XZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::end
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	jmp	SHORT $LN7@RemovePatc
$LN5@RemovePatc:
	lea	ecx, DWORD PTR _<begin>$L1$5[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::operator++
$LN7@RemovePatc:
	lea	eax, DWORD PTR _<end>$L1$4[ebp]
	push	eax
	lea	ecx, DWORD PTR _<begin>$L1$5[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN6@RemovePatc
	lea	ecx, DWORD PTR _<begin>$L1$5[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QBEAAPAEXZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >::operator*
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _patch$3[ebp], eax

; 106  : 		{
; 107  : 			PatchManager::RemovePatch(patch);

	mov	eax, DWORD PTR _patch$3[ebp]
	push	eax
	call	?RemovePatch@PatchManager@GH3P@@SA_NPAE@Z ; GH3P::PatchManager::RemovePatch
	add	esp, 4
	jmp	SHORT $LN5@RemovePatc
$LN6@RemovePatc:

; 108  : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _<end>$L1$4[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _<begin>$L1$5[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ

; 109  : 
; 110  : 		return true;

	mov	BYTE PTR $T2[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _patchesToRemove$[ebp]
	call	??1?$vector@PAEV?$allocator@PAE@std@@@std@@QAE@XZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::~vector<unsigned char *,std::allocator<unsigned char *> >
	mov	al, BYTE PTR $T2[ebp]

; 111  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN24@RemovePatc
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 396				; 0000018cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN24@RemovePatc:
	DD	7
	DD	$LN23@RemovePatc
$LN23@RemovePatc:
	DD	-32					; ffffffe0H
	DD	16					; 00000010H
	DD	$LN15@RemovePatc
	DD	-64					; ffffffc0H
	DD	12					; 0000000cH
	DD	$LN16@RemovePatc
	DD	-84					; ffffffacH
	DD	12					; 0000000cH
	DD	$LN17@RemovePatc
	DD	-100					; ffffff9cH
	DD	8
	DD	$LN18@RemovePatc
	DD	-112					; ffffff90H
	DD	4
	DD	$LN19@RemovePatc
	DD	-156					; ffffff64H
	DD	12					; 0000000cH
	DD	$LN20@RemovePatc
	DD	-176					; ffffff50H
	DD	12					; 0000000cH
	DD	$LN21@RemovePatc
$LN21@RemovePatc:
	DB	60					; 0000003cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	62					; 0000003eH
	DB	36					; 00000024H
	DB	76					; 0000004cH
	DB	49					; 00000031H
	DB	0
$LN20@RemovePatc:
	DB	60					; 0000003cH
	DB	98					; 00000062H
	DB	101					; 00000065H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	62					; 0000003eH
	DB	36					; 00000024H
	DB	76					; 0000004cH
	DB	49					; 00000031H
	DB	0
$LN19@RemovePatc:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN18@RemovePatc:
	DB	107					; 0000006bH
	DB	118					; 00000076H
	DB	0
$LN17@RemovePatc:
	DB	60					; 0000003cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	62					; 0000003eH
	DB	36					; 00000024H
	DB	76					; 0000004cH
	DB	48					; 00000030H
	DB	0
$LN16@RemovePatc:
	DB	60					; 0000003cH
	DB	98					; 00000062H
	DB	101					; 00000065H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	62					; 0000003eH
	DB	36					; 00000024H
	DB	76					; 0000004cH
	DB	48					; 00000030H
	DB	0
$LN15@RemovePatc:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	84					; 00000054H
	DB	111					; 0000006fH
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RemovePatches@PatchManager@GH3P@@SA_NI@Z$0:
	lea	ecx, DWORD PTR _patchesToRemove$[ebp]
	jmp	??1?$vector@PAEV?$allocator@PAE@std@@@std@@QAE@XZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::~vector<unsigned char *,std::allocator<unsigned char *> >
__unwindfunclet$?RemovePatches@PatchManager@GH3P@@SA_NI@Z$1:
	lea	ecx, DWORD PTR _<begin>$L0$11[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?RemovePatches@PatchManager@GH3P@@SA_NI@Z$2:
	lea	ecx, DWORD PTR _<end>$L0$10[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEI@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?RemovePatches@PatchManager@GH3P@@SA_NI@Z$3:
	lea	ecx, DWORD PTR _<begin>$L1$5[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?RemovePatches@PatchManager@GH3P@@SA_NI@Z$4:
	lea	ecx, DWORD PTR _<end>$L1$4[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
__ehhandler$?RemovePatches@PatchManager@GH3P@@SA_NI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-400]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RemovePatches@PatchManager@GH3P@@SA_NI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?RemovePatches@PatchManager@GH3P@@SA_NI@Z ENDP		; GH3P::PatchManager::RemovePatches
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\windows\fastgh3\plugins\code\core\patchmanager.cpp
;	COMDAT ?RemovePatch@PatchManager@GH3P@@SA_NPAE@Z
_TEXT	SEGMENT
tv264 = -484						; size = 4
tv275 = -480						; size = 4
tv273 = -476						; size = 4
tv203 = -472						; size = 4
tv271 = -468						; size = 4
tv268 = -464						; size = 4
tv263 = -460						; size = 4
tv257 = -460						; size = 4
tv280 = -456						; size = 4
tv129 = -456						; size = 4
tv261 = -452						; size = 4
tv255 = -452						; size = 4
tv279 = -448						; size = 4
tv136 = -448						; size = 4
$T2 = -437						; size = 1
$T3 = -428						; size = 12
$T4 = -408						; size = 12
$T5 = -388						; size = 4
$T6 = -376						; size = 4
$T7 = -364						; size = 4
$T8 = -352						; size = 12
$T9 = -332						; size = 4
$T10 = -320						; size = 12
$T11 = -300						; size = 12
$T12 = -277						; size = 1
_v$ = -76						; size = 4
_patchOwner$ = -64					; size = 4
_memUnprotect$ = -52					; size = 12
_oldCode$ = -32						; size = 16
__$EHRec$ = -12						; size = 12
_dest$ = 8						; size = 4
?RemovePatch@PatchManager@GH3P@@SA_NPAE@Z PROC		; GH3P::PatchManager::RemovePatch, COMDAT

; 69   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RemovePatch@PatchManager@GH3P@@SA_NPAE@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 472				; 000001d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-484]
	mov	ecx, 118				; 00000076H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 70   : 		if (sOriginalCode.find(dest) == sOriginalCode.end())

	lea	eax, DWORD PTR $T10[ebp]
	push	eax
	mov	ecx, OFFSET ?sOriginalCode@GH3P@@3V?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@A
	call	?end@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::end
	mov	DWORD PTR tv279[ebp], eax
	mov	ecx, DWORD PTR tv279[ebp]
	mov	DWORD PTR tv255[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR tv255[ebp]
	push	edx
	lea	eax, DWORD PTR _dest$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T11[ebp]
	push	ecx
	mov	ecx, OFFSET ?sOriginalCode@GH3P@@3V?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@A
	call	?find@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@ABQAE@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::find
	mov	DWORD PTR tv280[ebp], eax
	mov	edx, DWORD PTR tv280[ebp]
	mov	DWORD PTR tv257[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv257[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator==
	mov	BYTE PTR $T12[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T11[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T10[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	eax, BYTE PTR $T12[ebp]
	test	eax, eax
	je	SHORT $LN2@RemovePatc

; 71   : 			return false;

	xor	al, al
	jmp	$LN1@RemovePatc
$LN2@RemovePatc:

; 72   : 
; 73   : 		//Restore original code
; 74   : 		std::vector<uint8_t> oldCode = sOriginalCode[dest];

	lea	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	ecx, OFFSET ?sOriginalCode@GH3P@@3V?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@A
	call	??A?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAEAAV?$vector@EV?$allocator@E@std@@@1@ABQAE@Z ; std::map<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::operator[]
	push	eax
	lea	ecx, DWORD PTR _oldCode$[ebp]
	call	??0?$vector@EV?$allocator@E@std@@@std@@QAE@ABV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 2

; 75   : 		ScopedUnprotect memUnprotect(dest, oldCode.size());

	lea	ecx, DWORD PTR _oldCode$[ebp]
	call	?size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::size
	push	eax
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	lea	ecx, DWORD PTR _memUnprotect$[ebp]
	call	??0ScopedUnprotect@GH3P@@QAE@PAXK@Z	; GH3P::ScopedUnprotect::ScopedUnprotect
	mov	BYTE PTR __$EHRec$[ebp+8], 3

; 76   : 		memcpy(dest, &(oldCode[0]), oldCode.size());

	lea	ecx, DWORD PTR _oldCode$[ebp]
	call	?size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::size
	push	eax
	push	0
	lea	ecx, DWORD PTR _oldCode$[ebp]
	call	??A?$vector@EV?$allocator@E@std@@@std@@QAEAAEI@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator[]
	push	eax
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 77   : 
; 78   : 		//Remove entries
; 79   : 		uint32_t patchOwner = sPatchOwners[dest];

	lea	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	ecx, OFFSET ?sPatchOwners@GH3P@@3V?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@A
	call	??A?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAEAAIABQAE@Z ; std::map<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> > >::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _patchOwner$[ebp], ecx

; 80   : 		sOriginalCode.erase(dest);

	lea	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	ecx, OFFSET ?sOriginalCode@GH3P@@3V?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@A
	call	?erase@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEIABQAE@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::erase

; 81   : 		sPatchOwners.erase(dest);

	lea	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	ecx, OFFSET ?sPatchOwners@GH3P@@3V?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@A
	call	?erase@?$_Tree@V?$_Tmap_traits@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@$0A@@std@@@std@@QAEIABQAE@Z ; std::_Tree<std::_Tmap_traits<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> >,0> >::erase

; 82   : 		std::vector<uint8_t *> &v = sOwnerPatches[patchOwner];

	lea	eax, DWORD PTR _patchOwner$[ebp]
	push	eax
	mov	ecx, OFFSET ?sOwnerPatches@GH3P@@3V?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@A
	call	??A?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAEAAV?$vector@PAEV?$allocator@PAE@std@@@1@ABI@Z ; std::map<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::operator[]
	mov	DWORD PTR _v$[ebp], eax

; 83   : 		v.erase(std::remove(v.begin(), v.end(), dest), v.end());

	lea	eax, DWORD PTR $T8[ebp]
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	call	?end@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@XZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::end
	mov	DWORD PTR tv136[ebp], eax
	mov	ecx, DWORD PTR tv136[ebp]
	mov	DWORD PTR tv261[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T9[ebp], esp
	mov	edx, DWORD PTR tv261[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	DWORD PTR tv129[ebp], eax
	mov	eax, DWORD PTR tv129[ebp]
	mov	DWORD PTR tv263[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _dest$[ebp]
	push	ecx
	sub	esp, 12					; 0000000cH
	mov	edx, esp
	mov	DWORD PTR $T6[ebp], esp
	push	edx
	mov	ecx, DWORD PTR _v$[ebp]
	call	?end@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@XZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::end
	mov	DWORD PTR tv268[ebp], eax
	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	DWORD PTR $T5[ebp], esp
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	call	?begin@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@XZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::begin
	mov	DWORD PTR tv271[ebp], eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	call	??$remove@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@PAE@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@0@V10@0ABQAE@Z ; std::remove<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned char *> > >,unsigned char *>
	add	esp, 32					; 00000020H
	mov	DWORD PTR tv203[ebp], eax
	mov	edx, DWORD PTR tv203[ebp]
	mov	DWORD PTR tv273[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T7[ebp], esp
	mov	eax, DWORD PTR tv273[ebp]
	push	eax
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	DWORD PTR tv275[ebp], eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR _v$[ebp]
	call	?erase@?$vector@PAEV?$allocator@PAE@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@2@0@Z ; std::vector<unsigned char *,std::allocator<unsigned char *> >::erase
	mov	DWORD PTR tv264[ebp], eax
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T8[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ

; 84   : 		if (v.empty())

	mov	ecx, DWORD PTR _v$[ebp]
	call	?empty@?$vector@PAEV?$allocator@PAE@std@@@std@@QBE_NXZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::empty
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@RemovePatc

; 85   : 			sOwnerPatches.erase(patchOwner);

	lea	eax, DWORD PTR _patchOwner$[ebp]
	push	eax
	mov	ecx, OFFSET ?sOwnerPatches@GH3P@@3V?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@A
	call	?erase@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEIABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::erase
$LN3@RemovePatc:

; 86   : 
; 87   : 		return true;

	mov	BYTE PTR $T2[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _memUnprotect$[ebp]
	call	??1ScopedUnprotect@GH3P@@QAE@XZ		; GH3P::ScopedUnprotect::~ScopedUnprotect
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _oldCode$[ebp]
	call	??1?$vector@EV?$allocator@E@std@@@std@@QAE@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
	mov	al, BYTE PTR $T2[ebp]
$LN1@RemovePatc:

; 88   : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@RemovePatc
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 484				; 000001e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN21@RemovePatc:
	DD	3
	DD	$LN20@RemovePatc
$LN20@RemovePatc:
	DD	-32					; ffffffe0H
	DD	16					; 00000010H
	DD	$LN16@RemovePatc
	DD	-52					; ffffffccH
	DD	12					; 0000000cH
	DD	$LN17@RemovePatc
	DD	-64					; ffffffc0H
	DD	4
	DD	$LN18@RemovePatc
$LN18@RemovePatc:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	79					; 0000004fH
	DB	119					; 00000077H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN17@RemovePatc:
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	85					; 00000055H
	DB	110					; 0000006eH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
$LN16@RemovePatc:
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RemovePatch@PatchManager@GH3P@@SA_NPAE@Z$0:
	lea	ecx, DWORD PTR $T10[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?RemovePatch@PatchManager@GH3P@@SA_NPAE@Z$1:
	lea	ecx, DWORD PTR $T11[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?RemovePatch@PatchManager@GH3P@@SA_NPAE@Z$2:
	lea	ecx, DWORD PTR _oldCode$[ebp]
	jmp	??1?$vector@EV?$allocator@E@std@@@std@@QAE@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
__unwindfunclet$?RemovePatch@PatchManager@GH3P@@SA_NPAE@Z$3:
	lea	ecx, DWORD PTR _memUnprotect$[ebp]
	jmp	??1ScopedUnprotect@GH3P@@QAE@XZ		; GH3P::ScopedUnprotect::~ScopedUnprotect
__unwindfunclet$?RemovePatch@PatchManager@GH3P@@SA_NPAE@Z$4:
	lea	ecx, DWORD PTR $T8[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?RemovePatch@PatchManager@GH3P@@SA_NPAE@Z$5:
	mov	ecx, DWORD PTR $T9[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?RemovePatch@PatchManager@GH3P@@SA_NPAE@Z$8:
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAE@std@@@std@@@std@@QAE@XZ
__ehhandler$?RemovePatch@PatchManager@GH3P@@SA_NPAE@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-488]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RemovePatch@PatchManager@GH3P@@SA_NPAE@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?RemovePatch@PatchManager@GH3P@@SA_NPAE@Z ENDP		; GH3P::PatchManager::RemovePatch
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\windows\fastgh3\plugins\code\core\patchmanager.cpp
;	COMDAT ?ApplyPatch@PatchManager@GH3P@@SA_NPBEPAEII@Z
_TEXT	SEGMENT
tv178 = -376						; size = 4
tv70 = -372						; size = 4
tv180 = -368						; size = 4
tv176 = -368						; size = 4
tv183 = -364						; size = 4
tv75 = -364						; size = 4
$T2 = -353						; size = 1
$T3 = -344						; size = 16
$T4 = -320						; size = 12
$T5 = -300						; size = 12
$T6 = -277						; size = 1
_oldCode$ = -76						; size = 16
_memUnprotect$ = -52					; size = 12
_patchOwner$ = -32					; size = 4
_patchStart$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
_src$ = 8						; size = 4
_dest$ = 12						; size = 4
_size$ = 16						; size = 4
_ownerID$ = 20						; size = 4
?ApplyPatch@PatchManager@GH3P@@SA_NPBEPAEII@Z PROC	; GH3P::PatchManager::ApplyPatch, COMDAT

; 44   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ApplyPatch@PatchManager@GH3P@@SA_NPBEPAEII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 364				; 0000016cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-376]
	mov	ecx, 91					; 0000005bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 45   : 		//Assert that the code we want to patch isn't patched already
; 46   : 		uint8_t *patchStart;
; 47   : 		uint32_t patchOwner;
; 48   : 		FindPatch(dest, size, patchStart, patchOwner);

	lea	eax, DWORD PTR _patchOwner$[ebp]
	push	eax
	lea	ecx, DWORD PTR _patchStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _size$[ebp]
	push	edx
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	call	?FindPatch@PatchManager@GH3P@@SAXPBEIAAPAEAAI@Z ; GH3P::PatchManager::FindPatch
	add	esp, 16					; 00000010H

; 49   : 		if (patchOwner != 0)

	cmp	DWORD PTR _patchOwner$[ebp], 0
	je	SHORT $LN2@ApplyPatch

; 50   : 			return false;

	xor	al, al
	jmp	$LN1@ApplyPatch
$LN2@ApplyPatch:

; 51   : 
; 52   : 		//Back up original code and then patch
; 53   : 		ScopedUnprotect memUnprotect(dest, size);

	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dest$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _memUnprotect$[ebp]
	call	??0ScopedUnprotect@GH3P@@QAE@PAXK@Z	; GH3P::ScopedUnprotect::ScopedUnprotect
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 54   : 		std::vector<uint8_t> oldCode(size);

	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	lea	ecx, DWORD PTR _oldCode$[ebp]
	call	??0?$vector@EV?$allocator@E@std@@@std@@QAE@I@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 55   : 		memcpy(&(oldCode[0]), dest, size);

	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dest$[ebp]
	push	ecx
	push	0
	lea	ecx, DWORD PTR _oldCode$[ebp]
	call	??A?$vector@EV?$allocator@E@std@@@std@@QAEAAEI@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator[]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 56   : 		memcpy(dest, src, size);

	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 57   : 
; 58   : 		if (sOwnerPatches.find(ownerID) == sOwnerPatches.end())

	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, OFFSET ?sOwnerPatches@GH3P@@3V?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@A
	call	?end@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::end
	mov	DWORD PTR tv75[ebp], eax
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR tv176[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR tv176[ebp]
	push	edx
	lea	eax, DWORD PTR _ownerID$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	mov	ecx, OFFSET ?sOwnerPatches@GH3P@@3V?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@A
	call	?find@?$_Tree@V?$_Tmap_traits@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@2@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > >,0> >::find
	mov	DWORD PTR tv70[ebp], eax
	mov	edx, DWORD PTR tv70[ebp]
	mov	DWORD PTR tv178[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv178[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > > >::operator==
	mov	BYTE PTR $T6[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	eax, BYTE PTR $T6[ebp]
	test	eax, eax
	je	SHORT $LN3@ApplyPatch

; 59   : 			sOwnerPatches[ownerID] = std::vector<uint8_t *>();

	lea	ecx, DWORD PTR $T3[ebp]
	call	??0?$vector@PAEV?$allocator@PAE@std@@@std@@QAE@XZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::vector<unsigned char *,std::allocator<unsigned char *> >
	mov	DWORD PTR tv183[ebp], eax
	mov	eax, DWORD PTR tv183[ebp]
	mov	DWORD PTR tv180[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR tv180[ebp]
	push	ecx
	lea	edx, DWORD PTR _ownerID$[ebp]
	push	edx
	mov	ecx, OFFSET ?sOwnerPatches@GH3P@@3V?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@A
	call	??A?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAEAAV?$vector@PAEV?$allocator@PAE@std@@@1@ABI@Z ; std::map<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::operator[]
	mov	ecx, eax
	call	??4?$vector@PAEV?$allocator@PAE@std@@@std@@QAEAAV01@$$QAV01@@Z ; std::vector<unsigned char *,std::allocator<unsigned char *> >::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$vector@PAEV?$allocator@PAE@std@@@std@@QAE@XZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::~vector<unsigned char *,std::allocator<unsigned char *> >
$LN3@ApplyPatch:

; 60   : 
; 61   : 		sOwnerPatches[ownerID].push_back(dest);

	lea	eax, DWORD PTR _dest$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ownerID$[ebp]
	push	ecx
	mov	ecx, OFFSET ?sOwnerPatches@GH3P@@3V?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@A
	call	??A?$map@IV?$vector@PAEV?$allocator@PAE@std@@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@2@@std@@QAEAAV?$vector@PAEV?$allocator@PAE@std@@@1@ABI@Z ; std::map<unsigned int,std::vector<unsigned char *,std::allocator<unsigned char *> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::vector<unsigned char *,std::allocator<unsigned char *> > > > >::operator[]
	mov	ecx, eax
	call	?push_back@?$vector@PAEV?$allocator@PAE@std@@@std@@QAEXABQAE@Z ; std::vector<unsigned char *,std::allocator<unsigned char *> >::push_back

; 62   : 		sOriginalCode[dest] = oldCode;

	lea	eax, DWORD PTR _oldCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dest$[ebp]
	push	ecx
	mov	ecx, OFFSET ?sOriginalCode@GH3P@@3V?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@A
	call	??A?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@QAEAAV?$vector@EV?$allocator@E@std@@@1@ABQAE@Z ; std::map<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > >::operator[]
	mov	ecx, eax
	call	??4?$vector@EV?$allocator@E@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=

; 63   : 		sPatchOwners[dest] = ownerID;

	lea	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	ecx, OFFSET ?sPatchOwners@GH3P@@3V?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@A
	call	??A?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAEAAIABQAE@Z ; std::map<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> > >::operator[]
	mov	ecx, DWORD PTR _ownerID$[ebp]
	mov	DWORD PTR [eax], ecx

; 64   : 
; 65   : 		return true;

	mov	BYTE PTR $T2[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _oldCode$[ebp]
	call	??1?$vector@EV?$allocator@E@std@@@std@@QAE@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _memUnprotect$[ebp]
	call	??1ScopedUnprotect@GH3P@@QAE@XZ		; GH3P::ScopedUnprotect::~ScopedUnprotect
	mov	al, BYTE PTR $T2[ebp]
$LN1@ApplyPatch:

; 66   : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@ApplyPatch
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 376				; 00000178H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN16@ApplyPatch:
	DD	4
	DD	$LN15@ApplyPatch
$LN15@ApplyPatch:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN10@ApplyPatch
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN11@ApplyPatch
	DD	-52					; ffffffccH
	DD	12					; 0000000cH
	DD	$LN12@ApplyPatch
	DD	-76					; ffffffb4H
	DD	16					; 00000010H
	DD	$LN13@ApplyPatch
$LN13@ApplyPatch:
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
$LN12@ApplyPatch:
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	85					; 00000055H
	DB	110					; 0000006eH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
$LN11@ApplyPatch:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	79					; 0000004fH
	DB	119					; 00000077H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN10@ApplyPatch:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ApplyPatch@PatchManager@GH3P@@SA_NPBEPAEII@Z$0:
	lea	ecx, DWORD PTR _memUnprotect$[ebp]
	jmp	??1ScopedUnprotect@GH3P@@QAE@XZ		; GH3P::ScopedUnprotect::~ScopedUnprotect
__unwindfunclet$?ApplyPatch@PatchManager@GH3P@@SA_NPBEPAEII@Z$1:
	lea	ecx, DWORD PTR _oldCode$[ebp]
	jmp	??1?$vector@EV?$allocator@E@std@@@std@@QAE@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
__unwindfunclet$?ApplyPatch@PatchManager@GH3P@@SA_NPBEPAEII@Z$2:
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?ApplyPatch@PatchManager@GH3P@@SA_NPBEPAEII@Z$3:
	lea	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$vector@PAEV?$allocator@PAE@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?ApplyPatch@PatchManager@GH3P@@SA_NPBEPAEII@Z$4:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$vector@PAEV?$allocator@PAE@std@@@std@@QAE@XZ ; std::vector<unsigned char *,std::allocator<unsigned char *> >::~vector<unsigned char *,std::allocator<unsigned char *> >
__ehhandler$?ApplyPatch@PatchManager@GH3P@@SA_NPBEPAEII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-380]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ApplyPatch@PatchManager@GH3P@@SA_NPBEPAEII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ApplyPatch@PatchManager@GH3P@@SA_NPBEPAEII@Z ENDP	; GH3P::PatchManager::ApplyPatch
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\windows\fastgh3\plugins\code\core\patchmanager.cpp
;	COMDAT ?FindPatch@PatchManager@GH3P@@SAXPBEIAAPAEAAI@Z
_TEXT	SEGMENT
_patchEnd$2 = -124					; size = 4
_patchSize$3 = -112					; size = 4
_kv$4 = -100						; size = 20
_<end>$L0$5 = -72					; size = 12
_<begin>$L0$6 = -52					; size = 12
_<range>$L0$7 = -32					; size = 4
_end$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_start$ = 8						; size = 4
_size$ = 12						; size = 4
_patchStart$ = 16					; size = 4
_patchOwner$ = 20					; size = 4
?FindPatch@PatchManager@GH3P@@SAXPBEIAAPAEAAI@Z PROC	; GH3P::PatchManager::FindPatch, COMDAT

; 15   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?FindPatch@PatchManager@GH3P@@SAXPBEIAAPAEAAI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 308				; 00000134H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-320]
	mov	ecx, 77					; 0000004dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 16   : 		const uint8_t *end = start + size;

	mov	eax, DWORD PTR _start$[ebp]
	add	eax, DWORD PTR _size$[ebp]
	mov	DWORD PTR _end$[ebp], eax

; 17   : 
; 18   : 		for (auto kv : sOriginalCode)

	mov	DWORD PTR _<range>$L0$7[ebp], OFFSET ?sOriginalCode@GH3P@@3V?$map@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@@std@@A
	lea	eax, DWORD PTR _<begin>$L0$6[ebp]
	push	eax
	mov	ecx, DWORD PTR _<range>$L0$7[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::begin
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	eax, DWORD PTR _<end>$L0$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _<range>$L0$7[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@PAEV?$vector@EV?$allocator@E@std@@@std@@U?$less@PAE@2@V?$allocator@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char *,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::end
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	jmp	SHORT $LN4@FindPatch
$LN2@FindPatch:
	lea	ecx, DWORD PTR _<begin>$L0$6[ebp]
	call	??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator++
$LN4@FindPatch:
	lea	eax, DWORD PTR _<end>$L0$5[ebp]
	push	eax
	lea	ecx, DWORD PTR _<begin>$L0$6[ebp]
	call	??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	$LN3@FindPatch
	lea	ecx, DWORD PTR _<begin>$L0$6[ebp]
	call	??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBEAAU?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator*
	push	eax
	lea	ecx, DWORD PTR _kv$4[ebp]
	call	??0?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@ABU01@@Z ; std::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >::pair<unsigned char * const,std::vector<unsigned char,std::allocator<unsigned char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 19   : 		{
; 20   : 			uint32_t patchSize = kv.second.size();

	lea	ecx, DWORD PTR _kv$4[ebp+4]
	call	?size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::size
	mov	DWORD PTR _patchSize$3[ebp], eax

; 21   : 			patchStart = kv.first;

	mov	eax, DWORD PTR _patchStart$[ebp]
	mov	ecx, DWORD PTR _kv$4[ebp]
	mov	DWORD PTR [eax], ecx

; 22   : 			const uint8_t *patchEnd = patchStart + patchSize;

	mov	eax, DWORD PTR _patchStart$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _patchSize$3[ebp]
	mov	DWORD PTR _patchEnd$2[ebp], ecx

; 23   : 			patchOwner = sPatchOwners[patchStart];

	mov	eax, DWORD PTR _patchStart$[ebp]
	push	eax
	mov	ecx, OFFSET ?sPatchOwners@GH3P@@3V?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@A
	call	??A?$map@PAEIU?$less@PAE@std@@V?$allocator@U?$pair@QAEI@std@@@2@@std@@QAEAAIABQAE@Z ; std::map<unsigned char *,unsigned int,std::less<unsigned char *>,std::allocator<std::pair<unsigned char * const,unsigned int> > >::operator[]
	mov	ecx, DWORD PTR _patchOwner$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 24   : 			
; 25   : 			//Does the existing patch start within our patch range?
; 26   : 			if (patchStart >= start && patchStart < end)

	mov	eax, DWORD PTR _patchStart$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _start$[ebp]
	jb	SHORT $LN5@FindPatch
	mov	eax, DWORD PTR _patchStart$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _end$[ebp]
	jae	SHORT $LN5@FindPatch

; 27   : 				return;

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _kv$4[ebp]
	call	??1?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _<end>$L0$5[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _<begin>$L0$6[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	jmp	$LN1@FindPatch
$LN5@FindPatch:

; 28   : 
; 29   : 			//Does the existing patch end within our patch range?
; 30   : 			if (patchEnd >= start && patchEnd < end)

	mov	eax, DWORD PTR _patchEnd$2[ebp]
	cmp	eax, DWORD PTR _start$[ebp]
	jb	SHORT $LN6@FindPatch
	mov	eax, DWORD PTR _patchEnd$2[ebp]
	cmp	eax, DWORD PTR _end$[ebp]
	jae	SHORT $LN6@FindPatch

; 31   : 				return;

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _kv$4[ebp]
	call	??1?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _<end>$L0$5[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _<begin>$L0$6[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	jmp	SHORT $LN1@FindPatch
$LN6@FindPatch:

; 32   : 
; 33   : 			//Does the existing patch completely encapsulate our patch range?
; 34   : 			if (patchStart < start && patchEnd >= end)

	mov	eax, DWORD PTR _patchStart$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _start$[ebp]
	jae	SHORT $LN7@FindPatch
	mov	eax, DWORD PTR _patchEnd$2[ebp]
	cmp	eax, DWORD PTR _end$[ebp]
	jb	SHORT $LN7@FindPatch

; 35   : 				return;

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _kv$4[ebp]
	call	??1?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _<end>$L0$5[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _<begin>$L0$6[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	jmp	SHORT $LN1@FindPatch
$LN7@FindPatch:

; 36   : 
; 37   : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _kv$4[ebp]
	call	??1?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@XZ
	jmp	$LN2@FindPatch
$LN3@FindPatch:
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _<end>$L0$5[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _<begin>$L0$6[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ

; 38   : 
; 39   : 		patchStart = nullptr;

	mov	eax, DWORD PTR _patchStart$[ebp]
	mov	DWORD PTR [eax], 0

; 40   : 		patchOwner = 0x00000000;

	mov	eax, DWORD PTR _patchOwner$[ebp]
	mov	DWORD PTR [eax], 0
$LN1@FindPatch:

; 41   : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@FindPatch
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 320				; 00000140H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN17@FindPatch:
	DD	3
	DD	$LN16@FindPatch
$LN16@FindPatch:
	DD	-52					; ffffffccH
	DD	12					; 0000000cH
	DD	$LN12@FindPatch
	DD	-72					; ffffffb8H
	DD	12					; 0000000cH
	DD	$LN13@FindPatch
	DD	-100					; ffffff9cH
	DD	20					; 00000014H
	DD	$LN14@FindPatch
$LN14@FindPatch:
	DB	107					; 0000006bH
	DB	118					; 00000076H
	DB	0
$LN13@FindPatch:
	DB	60					; 0000003cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	62					; 0000003eH
	DB	36					; 00000024H
	DB	76					; 0000004cH
	DB	48					; 00000030H
	DB	0
$LN12@FindPatch:
	DB	60					; 0000003cH
	DB	98					; 00000062H
	DB	101					; 00000065H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	62					; 0000003eH
	DB	36					; 00000024H
	DB	76					; 0000004cH
	DB	48					; 00000030H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?FindPatch@PatchManager@GH3P@@SAXPBEIAAPAEAAI@Z$0:
	lea	ecx, DWORD PTR _<begin>$L0$6[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?FindPatch@PatchManager@GH3P@@SAXPBEIAAPAEAAI@Z$1:
	lea	ecx, DWORD PTR _<end>$L0$5[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?FindPatch@PatchManager@GH3P@@SAXPBEIAAPAEAAI@Z$2:
	lea	ecx, DWORD PTR _kv$4[ebp]
	jmp	??1?$pair@QAEV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@XZ
__ehhandler$?FindPatch@PatchManager@GH3P@@SAXPBEIAAPAEAAI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-324]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?FindPatch@PatchManager@GH3P@@SAXPBEIAAPAEAAI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?FindPatch@PatchManager@GH3P@@SAXPBEIAAPAEAAI@Z ENDP	; GH3P::PatchManager::FindPatch
END
